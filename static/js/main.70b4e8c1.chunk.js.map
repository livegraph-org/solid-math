{"version":3,"sources":["components/Visualization.tsx","contexts/session.ts","components/Login.tsx","helpers/draw.ts","hooks/graph.ts","simulation/index.ts","simulation/gravity.ts","algorithms.ts","components/Math.tsx","components/Statement.tsx","dataTest.ts","components/VisualizationContainer.tsx","components/DataContainer.tsx","components/PeopleList.tsx","components/Layout.tsx","App.tsx","reportWebVitals.ts","components/SessionProvider.tsx","index.tsx"],"names":["old","SessionContext","createContext","Login","className","props","useState","loading","setLoading","useContext","info","setInfo","useEffect","handleIncomingRedirect","url","window","location","href","restorePreviousSession","then","newInfo","catch","e","console","log","finally","handleLogin","a","login","oidcIssuer","redirectUrl","clientName","handleLogout","logout","commonProps","isLoggedIn","onClick","webId","drawText","context","text","options","x","y","font","textBaseline","textAlign","Object","assign","fillText","drawCircle","radius","beginPath","arc","Math","PI","fill","drawLine","start","end","moveTo","lineTo","stroke","Visualization","graph","grid","onTransform","onHover","onSelectNode","canvasEl","useRef","width","height","setVisualizationSize","current","getContext","offset","save","translate","clearRect","strokeStyle","min1","max1","min0","max0","getLineWidth","i","highlight","distance","origin","lineWidth","drawGrid","links","forEach","link","s","source","t","target","v","numeric","sub","size","sqrt","div","add","mul","r","accentedColor","accented","nodes","filter","style","focused","rest","fillStyle","label","restore","updateCanvasSize","elementRef","clientHeight","clientWidth","getElementSize","addEventListener","removeEventListener","select","call","drag","clickDistance","on","dx","dy","zoom","scaleExtent","transform","k","dot","inv","withCanvasPosition","func","rect","getBoundingClientRect","clientX","left","clientY","top","handleMouseMove","handleClick","ref","onMouseMove","onMouseOut","Infinity","classnames","ensureNode","uri","type","description","dependencies","dependents","fetchGraph","getSolidDataset","fetch","dataset","things","getThingAll","thing","asUrl","getTerm","rdf","value","dct","rdfs","getTermAll","reduce","dependency","keys","dependencyUri","useGraph","uris","setGraph","data","Simulation","runs","simulation","forceSimulation","alphaDecay","force","forceLink","id","node","strength","alpha","d","vy","optimumDifference","_","forceGravity","forceManyBody","distanceMax","forceX","forceY","forceCollide","forceCenter","stop","onTick","map","restart","update","thisNodeDict","fromEntries","updatedNodes","random","selectNode","find","prune","input","graphlib","Graph","values","setNode","setEdge","output","entries","alg","isAcyclic","Error","edges","edge","removeEdge","dijkstra","w","pruneCore","Styler","styled","children","remarkPlugins","remarkMath","rehypePlugins","rehypeKatex","Statement","position","bottom","pointerEvents","overflowY","overflowX","length","dependent","findMathDocumentsOfPerson","me","getThing","publicTypeIndex","solid","index","mathDocuments","forClass","includes","instance","flat","findFriends","getResourceUrl","person","friends","foaf","knows","resourceUrl","URL","hash","matrix","vector","raw","transpose","nodeRadius","count","basicGrid","VisualizationContainer","documents","setDocuments","layout","setLayout","highlightedNode","setHighlightedNode","selectedNode","setSelectedNode","docs","setMatrix","lastUpdate","Date","now","prunedOrFullGraph","pruneGraph","push","withNode","action","handleHover","handleSelect","selectedNodeDependencies","selectedNodeUri","selectNodeDependencies","transformedLayout","highlighted","selected","selectedDependencies","transformedNodesDict","sourceUri","targetUri","transformLayout","transformGrid","prevMatrix","PeopleContext","DocumentsContext","DataContainer","people","setPeople","setMathDocuments","state","notAddedYet","doc","stateDoc","owner","access","Provider","PeopleList","PositionedLogin","PositionedPeopleList","FullSizeVisualization","Layout","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","SessionProvider","sessionInfo","setSessionInfo","document","appElement","querySelector","Modal","setAppElement","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.70b4e8c1.chunk.js","sourcesContent":["import React, { useRef, useEffect, useState } from 'react'\nimport {\n  Vector,\n  Grid,\n  drawGrid,\n  drawCircle,\n  drawLine,\n  drawText,\n} from '../helpers/draw'\nimport classnames from 'classnames'\nimport { drag } from 'd3-drag'\nimport { zoom } from 'd3-zoom'\nimport { select } from 'd3-selection'\nimport numeric from 'numeric'\nimport { VisualizationGraph } from './VisualizationContainer'\n\ntype Props = Partial<React.CanvasHTMLAttributes<HTMLCanvasElement>> & {\n  graph: VisualizationGraph\n  grid: Grid\n  onTransform: (matrix: number[][]) => void\n  onHover: (position: Vector) => void\n  onSelectNode: (position: Vector) => void\n}\n\nlet old: number[][]\n\nconst Visualization: React.FC<Props> = ({\n  graph,\n  grid,\n  onTransform,\n  onHover,\n  onSelectNode,\n  ...props\n}: Props) => {\n  const canvasEl = useRef<HTMLCanvasElement>(null)\n  const [{ width, height }, setVisualizationSize] = useState({\n    width: 0,\n    height: 0,\n  })\n\n  useEffect(() => {\n    if (canvasEl && canvasEl.current) {\n      const context = canvasEl.current.getContext('2d')\n      if (context) {\n        const offset: Vector = [width / 2, height / 2]\n        context.save()\n        context.translate(...offset)\n        context.clearRect(-offset[0], -offset[1], width, height)\n        drawGrid(context, grid, width, height, offset)\n        graph.links.forEach(link => {\n          // we're counting a unit vector to make links that don't overlap nodes\n          // source point\n          const s = [link.source.x, link.source.y]\n          // target point\n          const t = [link.target.x, link.target.y]\n          // vector\n          const v = numeric.sub(t, s)\n          // vector size\n          const size = Math.sqrt(v[0] ** 2 + v[1] ** 2)\n          // unit vector\n          const i = numeric.div(v, size)\n          drawLine(\n            context,\n            // links don't overlap circles\n            numeric.add(s, numeric.mul(i, link.source.r)) as Vector,\n            numeric.sub(t, numeric.mul(i, link.target.r)) as Vector,\n            {\n              strokeStyle: 'white',\n              lineWidth: 0.5,\n            },\n          )\n        })\n\n        const accentedColor = 'violet' // '#ff5d'\n        const focusedColor = 'red'\n        const accented = graph.nodes.filter(({ style }) => style === 'accent')\n        const focused = graph.nodes.filter(({ style }) => style === 'focus')\n        const rest = graph.nodes.filter(({ style }) => !style)\n\n        // draw all the nodes which are not special\n        rest.forEach(({ x, y, r }) =>\n          drawCircle(context, [x, y], r, { fillStyle: '#fff8' }),\n        )\n\n        rest.forEach(({ x, y, r, label }) =>\n          drawText(context, [x + r + 5, y], label, { fillStyle: '#fff4' }),\n        )\n\n        // draw accented nodes\n        accented.forEach(({ x, y, r }) =>\n          drawCircle(context, [x, y], r, { fillStyle: accentedColor }),\n        )\n\n        accented.forEach(({ x, y, r, label }) =>\n          drawText(context, [x + r + 5, y], label, {\n            fillStyle: accentedColor,\n          }),\n        )\n\n        // draw accented nodes\n        focused.forEach(({ x, y, r }) =>\n          drawCircle(context, [x, y], r, { fillStyle: focusedColor }),\n        )\n\n        focused.forEach(({ x, y, r, label }) =>\n          drawText(context, [x + r + 5, y], label, { fillStyle: focusedColor }),\n        )\n\n        return () => context.restore()\n      }\n    }\n  }, [width, height, graph, canvasEl, grid])\n\n  useEffect(() => {\n    const updateCanvasSize = () => {\n      if (canvasEl && canvasEl.current) {\n        const size = getElementSize(canvasEl)\n        setVisualizationSize(size)\n      }\n    }\n\n    updateCanvasSize()\n    window.addEventListener('load', updateCanvasSize)\n    window.addEventListener('resize', updateCanvasSize)\n\n    return () => {\n      window.removeEventListener('resize', updateCanvasSize)\n      window.removeEventListener('load', updateCanvasSize)\n    }\n  }, [width, height, canvasEl])\n\n  useEffect(() => {\n    if (canvasEl && canvasEl.current) {\n      select(canvasEl.current).call(\n        drag<HTMLCanvasElement, unknown>()\n          .clickDistance(2)\n          //.on('start', console.log)\n          .on('drag', e => {\n            onTransform([\n              [1, 0, e.dx],\n              [0, 1, e.dy],\n              [0, 0, 1],\n            ])\n          }),\n        //.on('end', console.log),\n      )\n\n      select(canvasEl.current).call(\n        zoom<HTMLCanvasElement, unknown>()\n          .clickDistance(2)\n          .scaleExtent([0.05, 3])\n          .on('zoom', e => {\n            old = old ?? [\n              [1, 0, -width / 2],\n              [0, 1, -height / 2],\n              [0, 0, 1],\n            ]\n            const { x, y, k } = e.transform\n\n            const zoom = [\n              [k, 0, x - width / 2],\n              [0, k, y - height / 2],\n              [0, 0, 1],\n            ]\n\n            const transform = numeric.dot(zoom, numeric.inv(old)) as number[][]\n            old = zoom\n\n            onTransform(transform)\n          }),\n      )\n    }\n  }, [canvasEl, onTransform, height, width])\n\n  const withCanvasPosition =\n    (\n      func: (position: Vector) => void,\n    ): React.MouseEventHandler<HTMLCanvasElement> =>\n    e => {\n      // https://stackoverflow.com/a/42111623\n      if (canvasEl && canvasEl.current) {\n        const rect = canvasEl.current.getBoundingClientRect()\n        const x = e.clientX - rect.left //x position within the element.\n        const y = e.clientY - rect.top //y position within the element.\n        func([x - width / 2, y - height / 2])\n      }\n    }\n\n  const handleMouseMove = withCanvasPosition(onHover)\n  const handleClick = withCanvasPosition(onSelectNode)\n\n  return (\n    <canvas\n      {...props}\n      ref={canvasEl}\n      onMouseMove={handleMouseMove}\n      // @TODO this piece is very inefficient, we search for a nonexistent node, just to unhighlight everything; but it works\n      onMouseOut={() => onHover([Infinity, Infinity])}\n      width={width}\n      height={height}\n      className={classnames(props.className, 'has-background-dark')}\n      onClick={handleClick}\n    />\n  )\n}\n\nexport default Visualization\n\nfunction getElementSize(elementRef: React.RefObject<HTMLCanvasElement>) {\n  if (elementRef && elementRef.current) {\n    const { clientHeight: height, clientWidth: width } = elementRef.current\n    return { height, width }\n  } else return { height: 0, width: 0 }\n}\n","import { ISessionInfo } from '@inrupt/solid-client-authn-browser'\nimport React, { createContext } from 'react'\n\nexport type SessionInfo = Required<ISessionInfo>\nexport const SessionContext = createContext<\n  [SessionInfo | null, React.Dispatch<React.SetStateAction<SessionInfo | null>>]\n>([\n  null,\n  () => {\n    return\n  },\n])\n","import React, { useState, useEffect, useContext } from 'react'\nimport {\n  login,\n  logout,\n  handleIncomingRedirect,\n} from '@inrupt/solid-client-authn-browser'\nimport { SessionContext, SessionInfo } from '../contexts/session'\n\ninterface Props {\n  className?: string\n}\n\nconst Login: React.FC<Props> = (\n  { className, ...props }: Props = { className: '' },\n) => {\n  const [loading, setLoading] = useState(true)\n  const [info, setInfo] = useContext(SessionContext)\n  useEffect(() => {\n    setLoading(true)\n    handleIncomingRedirect({\n      url: window.location.href,\n      restorePreviousSession: true,\n    })\n      .then(newInfo => {\n        if (newInfo) setInfo(newInfo as SessionInfo)\n      })\n      .catch(e => {\n        console.log(e)\n        setInfo(null)\n      })\n      .finally(() => {\n        setLoading(false)\n      })\n  }, [setInfo])\n  const handleLogin = async () => {\n    setLoading(true)\n    await login({\n      oidcIssuer: 'https://solidcommunity.net',\n      redirectUrl: window.location.href,\n      clientName: 'Math Livegraph',\n    })\n    setLoading(false)\n  }\n\n  const handleLogout = async () => {\n    setLoading(true)\n    await logout()\n    if (setInfo) setInfo(null)\n    setLoading(false)\n  }\n\n  const commonProps = {\n    ...props,\n    className: `${className} button`,\n  }\n\n  return loading ? (\n    <span {...commonProps}>Loading</span>\n  ) : info?.isLoggedIn ? (\n    <button {...commonProps} onClick={handleLogout}>\n      {info?.webId} Logout\n    </button>\n  ) : (\n    <button {...commonProps} onClick={handleLogin}>\n      Login\n    </button>\n  )\n}\n\nexport default Login\n","export type Vector = [number, number]\n\nexport type Grid = {\n  origin: Vector // coordinate of the origin\n  distance: number // distance between lines\n  highlight: number // which lines should be highlighted\n}\n\ntype Options = Partial<CanvasRenderingContext2D>\n\nexport const drawText = (\n  context: CanvasRenderingContext2D,\n  [x, y]: Vector,\n  text: string,\n  options: Options,\n) => {\n  context.font = '20px Arial'\n  context.textBaseline = 'middle'\n  context.textAlign = 'left'\n  // context.fillStyle = '#fff7'\n  Object.assign(context, options)\n  context.fillText(text, x, y)\n}\n\nexport const drawCircle = (\n  context: CanvasRenderingContext2D,\n  [x, y]: Vector,\n  radius: number,\n  options: Options,\n) => {\n  Object.assign(context, options)\n  context.beginPath()\n  context.arc(x, y, radius, 0, 2 * Math.PI)\n  context.fill()\n}\n\nexport const drawLine = (\n  context: CanvasRenderingContext2D,\n  start: Vector,\n  end: Vector,\n  options: Options,\n) => {\n  Object.assign(context, options)\n\n  context.beginPath()\n  context.moveTo(...start)\n  context.lineTo(...end)\n  context.stroke()\n}\n\nexport const drawGrid = (\n  context: CanvasRenderingContext2D,\n  grid: Grid,\n  width: number,\n  height: number,\n  offset: Vector = [0, 0],\n) => {\n  const strokeStyle = '#fff2'\n  const min1 = -offset[1]\n  const max1 = height - offset[1]\n  const min0 = -offset[0]\n  const max0 = width - offset[0]\n\n  const getLineWidth = (i: number) =>\n    i === 0 ? 2 : i % grid.highlight === 0 ? 1 : 0.5\n\n  let i = 0\n  while (i * grid.distance + grid.origin[0] <= max0) {\n    const x = i * grid.distance + grid.origin[0]\n    if (x >= min0) {\n      drawLine(context, [x, min1], [x, max1], {\n        strokeStyle,\n        lineWidth: getLineWidth(i),\n      })\n    }\n    i++\n  }\n\n  i = -1\n  while (i * grid.distance + grid.origin[0] >= min0) {\n    const x = i * grid.distance + grid.origin[0]\n    if (x <= max0) {\n      drawLine(context, [x, min1], [x, max1], {\n        strokeStyle,\n        lineWidth: getLineWidth(i),\n      })\n    }\n    i--\n  }\n\n  i = 0\n  while (i * grid.distance + grid.origin[1] <= max1) {\n    const y = i * grid.distance + grid.origin[1]\n    if (y >= min1) {\n      drawLine(context, [min0, y], [max0, y], {\n        strokeStyle,\n        lineWidth: getLineWidth(i),\n      })\n    }\n    i++\n  }\n\n  i = -1\n  while (i * grid.distance + grid.origin[1] >= min1) {\n    const y = i * grid.distance + grid.origin[1]\n    if (y <= max1) {\n      drawLine(context, [min0, y], [max0, y], {\n        strokeStyle,\n        lineWidth: getLineWidth(i),\n      })\n    }\n    i--\n  }\n}\n","import { useState, useEffect } from 'react'\nimport {\n  getSolidDataset,\n  UrlString,\n  getThingAll,\n  getTermAll,\n  getTerm,\n  asUrl,\n} from '@inrupt/solid-client'\nimport { fetch } from '@inrupt/solid-client-authn-browser'\nimport { rdf, dct, rdfs } from 'rdf-namespaces'\n\nexport type GraphNode = {\n  type: UrlString\n  uri: UrlString\n  description: string\n  label: string\n  dependencies: {\n    [uri: string]: GraphNode\n  }\n  dependents: {\n    [uri: string]: GraphNode\n  }\n}\n\nexport type Graph = {\n  [uri: string]: GraphNode\n}\n\n// function: Make sure the given Graph has a node with given uri\n// it checks whether the node exists and creates a node if it doesn't exist\nconst ensureNode = (graph: Graph, uri: UrlString): GraphNode => {\n  graph[uri] = graph[uri] ?? {\n    type: '',\n    description: '',\n    dependencies: {},\n    dependents: {},\n    label: '',\n  }\n  return graph[uri]\n}\n\nconst fetchGraph = async (uri: UrlString): Promise<Graph> => {\n  const dataset = await getSolidDataset(uri, { fetch })\n  const things = getThingAll(dataset)\n  const graph: Graph = {}\n  things.forEach(thing => {\n    const uri = asUrl(thing)\n    const type = getTerm(thing, rdf.type)?.value ?? ''\n    const description = getTerm(thing, dct.description)?.value ?? ''\n    const label = getTerm(thing, rdfs.label)?.value ?? ''\n    const dependencies: GraphNode['dependencies'] = getTermAll(\n      thing,\n      'https://terms.math.livegraph.org#depends_on',\n    ).reduce((dependencies, dependency) => {\n      dependencies[dependency.value] = ensureNode(graph, dependency.value)\n      return dependencies\n    }, {} as GraphNode['dependencies'])\n    Object.assign(ensureNode(graph, uri), {\n      type,\n      description,\n      dependencies,\n      label,\n      uri,\n    })\n\n    Object.keys(dependencies).forEach(dependencyUri => {\n      ensureNode(graph, dependencyUri)\n      graph[dependencyUri].dependents[uri] = graph[uri]\n    })\n  })\n  return graph\n}\n\nconst useGraph = (uris: UrlString[]) => {\n  const [graph, setGraph] = useState<Graph>({})\n\n  useEffect(() => {\n    uris.forEach(async uri => {\n      const data = await fetchGraph(uri)\n      setGraph(graph => ({\n        ...graph,\n        ...data,\n      }))\n    })\n  }, [uris])\n  return graph\n}\n\nexport default useGraph\n\n/*\nconst fetcher = async (\n  uris: UrlString[],\n): Promise<(SolidDataset & WithResourceInfo)[]> => {\n  return await Promise.all(uris.map(url => getSolidDataset(url, { fetch })))\n}\n\nexport default function useGraph(uris: UrlString[]): [Graph, () => void] {\n  // download graph\n  const { data, revalidate } = useSwr(() => uris, fetcher)\n\n  const [response, setResponse] = useState<Graph>({})\n\n  // whenever data change, we process them into an object of type Graph\n  useEffect(() => {\n    const graph: Graph = {}\n\n    if (data) {\n      for (const datum of data) {\n        const things = getThingAll(datum)\n        things.forEach(thing => {\n          const uri = asUrl(thing)\n          const type = getTerm(thing, rdf.type)?.value ?? ''\n          const description = getTerm(thing, dct.description)?.value ?? ''\n          const label = getTerm(thing, rdfs.label)?.value ?? ''\n          const dependencies = getTermAll(\n            thing,\n            'https://terms.math.livegraph.org#depends_on',\n          )\n          const dependencies: GraphNode['dependencies'] = dependencies.reduce(\n            (dependencies, dependency) => {\n              dependencies[dependency.value] = ensureNode(graph, dependency.value)\n              return dependencies\n            },\n            {} as GraphNode['dependencies'],\n          )\n          Object.assign(ensureNode(graph, uri), {\n            type,\n            description,\n            dependencies,\n            label,\n            uri,\n          })\n        })\n      }\n    }\n\n    setResponse(graph)\n  }, [data])\n\n  return [response, revalidate]\n}\n*/\n","import {\n  forceSimulation,\n  forceCollide,\n  forceLink,\n  forceManyBody,\n  forceCenter,\n  forceX,\n  forceY,\n  SimulationNodeDatum,\n  SimulationLinkDatum,\n  ForceLink,\n} from 'd3-force'\nimport forceGravity from './gravity'\nimport { Coords, Uri, SimulationNode, SimulationLink, Node } from './types'\n\ninterface SimulationNodeExt extends SimulationNodeDatum {\n  uri: Uri\n  r: number\n}\n\nexport type SimulationLinkExt = SimulationLinkDatum<SimulationNodeExt>\n\nexport default class Simulation {\n  nodes: SimulationNodeExt[] = []\n  links: SimulationLinkExt[] = []\n\n  runs = false\n\n  simulation = forceSimulation()\n    .alphaDecay(0.005)\n    .force(\n      'link',\n      forceLink()\n        .id(node => (node as SimulationNodeExt).uri)\n        .distance(50)\n        .strength(0.1),\n    )\n    .force('linkGravity', forceGravity().strength(50))\n    .force('charge', forceManyBody().strength(-150).distanceMax(500))\n    .force('gravityX', forceX(0).strength(0.01))\n    .force('gravityY', forceY(0).strength(0.01))\n    .force(\n      'collide',\n      forceCollide(({ r }: SimulationNodeExt) => r + 5),\n    )\n    .force('center', forceCenter(0, 0))\n    .stop()\n\n  start = ({\n    nodes,\n    links,\n    onTick,\n  }: {\n    nodes: SimulationNode[]\n    links: SimulationLink[]\n    onTick: (simulation: {\n      nodes: SimulationNode[]\n      links: SimulationLinkExt[]\n    }) => void\n  }) => {\n    this.nodes = nodes as SimulationNodeExt[]\n    this.links = links.map(link => ({ ...link })) as SimulationLinkExt[]\n\n    this.simulation.nodes(this.nodes)\n    ;(\n      this.simulation.force('link') as ForceLink<\n        SimulationNodeExt,\n        SimulationLinkExt\n      >\n    ).links(this.links)\n    ;(\n      this.simulation.force('linkGravity') as ForceLink<\n        SimulationNodeExt,\n        SimulationLinkExt\n      >\n    ).links(this.links)\n\n    this.simulation.on('tick', () => {\n      onTick({\n        nodes: this.nodes as SimulationNode[],\n        links: this.links,\n      })\n    })\n\n    this.simulation.restart()\n    this.runs = true\n  }\n\n  stop = () => {\n    this.runs = false\n    return this.simulation.stop()\n  }\n\n  update = ({ nodes, links }: { nodes: Node[]; links: SimulationLink[] }) => {\n    this.simulation.stop()\n    // combine current nodes and the old nodes\n    const thisNodeDict: { [uri: string]: SimulationNodeExt } =\n      Object.fromEntries(this.nodes.map(node => [node.uri, node]))\n    const updatedNodes: SimulationNodeExt[] = nodes.map(node => ({\n      ...node,\n      x: (0.5 - Math.random()) * 800,\n      y: (0.5 - Math.random()) * 800,\n      ...thisNodeDict[node.uri],\n      r: node.r,\n    }))\n    this.nodes = updatedNodes\n    this.links = links.map(link => ({ ...link })) as SimulationLinkExt[]\n\n    this.simulation.nodes(this.nodes)\n    ;(\n      this.simulation.force('link') as ForceLink<\n        SimulationNodeExt,\n        SimulationLinkExt\n      >\n    ).links(this.links)\n    ;(\n      this.simulation.force('linkGravity') as ForceLink<\n        SimulationNodeExt,\n        SimulationLinkExt\n      >\n    ).links(this.links)\n\n    this.simulation.alpha(1).restart()\n  }\n\n  selectNode = ({ x, y }: Coords) =>\n    this.simulation.find(x, y, 40) as SimulationNodeExt\n}\n","import { SimulationLinkExt } from './index'\n\nexport default function gravity() {\n  let links: SimulationLinkExt[] = []\n  let strength = 3\n  function force(alpha: number) {\n    const k = strength * alpha\n    links.forEach(function (d) {\n      //// this works\n      // d.source.y = Math.max(d.target.y + 50, d.source.y);\n      //// this is original\n      // d.source.vy += k;\n      // d.target.vy -= k;\n      //\n      //// this works with velocities, so the graph looks less layered\n      const { source, target } = d\n      if (typeof source === 'object' && typeof target === 'object') {\n        if (\n          source.y &&\n          target.y &&\n          source.vy &&\n          target.vy &&\n          source.y < target.y + 50\n        ) {\n          const optimumDifference = (target.y + 50 - source.y) / 50\n          source.vy += k * optimumDifference\n          target.vy -= k * optimumDifference\n        }\n      }\n    })\n  }\n\n  force.links = (_: SimulationLinkExt[]) => {\n    links = _\n    return force\n  }\n\n  force.strength = (_: number) => {\n    strength = _\n    return force\n  }\n\n  return force\n}\n","import graphlib, { Graph } from 'graphlib'\n// import { Dependency } from './simulation/types'\n// import findCyclesAdjacency from 'elementary-circuits-directed-graph'\nimport { Graph as AbstractGraph } from './hooks/graph'\n\nfunction pruneCore(graph: Graph) {\n  if (!graphlib.alg.isAcyclic(graph)) {\n    // const cycles = graphlib.alg.findCycles(graph);\n    throw new Error('pruning is possible on DAG only')\n  }\n  const edges = graph.edges()\n  edges.forEach(edge => {\n    // remove edge\n    graph.removeEdge(edge)\n    // see if another path exists\n    const paths = graphlib.alg.dijkstra(graph, edge.v)\n    // if the other path doesn't exist, add the node back\n    if (paths[edge.w].distance === Infinity) {\n      graph.setEdge(edge)\n    }\n  })\n  return graph\n}\n\nexport const prune = (input: AbstractGraph): AbstractGraph => {\n  const graph = new graphlib.Graph()\n\n  Object.values(input).forEach(node => {\n    graph.setNode(node.uri)\n\n    Object.values(node.dependencies).forEach(dependency =>\n      graph.setEdge(node.uri, dependency.uri),\n    )\n  })\n\n  const output: AbstractGraph = Object.fromEntries(\n    Object.entries(input).map(([uri, node]) => [\n      uri,\n      { ...node, dependencies: {} },\n    ]),\n  )\n\n  const prunedEdges = pruneCore(graph)\n    .edges()\n    .map(({ v: source, w: target }) => ({ source, target }))\n\n  prunedEdges.forEach(({ source, target }) => {\n    output[source].dependencies[target] = output[target]\n  })\n\n  return output\n}\n\n/*\nexport function getCycles(dependencies: Dependency[]): Dependency[][] {\n  const nodes = Array.from(\n    new Set([\n      ...dependencies.map(d => d.dependent),\n      ...dependencies.map(d => d.dependency),\n    ]),\n  )\n  const nodeIndexes = Object.fromEntries(\n    Object.entries(nodes).map(([key, value]) => [value, +key]),\n  )\n\n  const adjacency = Array(nodes.length)\n    .fill(null)\n    .map(() => [] as number[])\n  dependencies.forEach(({ dependent, dependency }) => {\n    const dependentIndex = nodeIndexes[dependent]\n    const dependencyIndex = nodeIndexes[dependency]\n    adjacency[dependentIndex].push(dependencyIndex)\n  })\n\n  // try to detect loops (cycles of length 1)\n  // this is due to the limits of the findCyclesAdjacency, which fails to detect loops\n  // https://github.com/antoinerg/elementary-circuits-directed-graph/issues/13\n  // @TODO remove loop detection when the issue is fixed\n  const loops = adjacency.reduce((loops, adj, i) => {\n    if (adj.includes(i)) loops.push([i, i])\n    return loops\n  }, [] as number[][])\n\n  const rawCycles = loops.length > 0 ? loops : findCyclesAdjacency(adjacency)\n\n  const simpleCycles = rawCycles.map(cycle =>\n    cycle.slice(0, -1).map(i => nodes[i]),\n  )\n\n  return simpleCycles\n    .map(cycle => simpleCycleToCycle(cycle, dependencies))\n    .sort((a, b) => a.length - b.length)\n    .slice(0, 5)\n}\n\nfunction simpleCycleToCycle(\n  simpleCycle: string[],\n  dependencies: Dependency[],\n): Dependency[] {\n  return simpleCycle.map((uri, index) => {\n    const dependent = simpleCycle[index]\n    const dependency = simpleCycle[(index + 1) % simpleCycle.length]\n    return (\n      dependencies.find(\n        d => d.dependency === dependency && d.dependent === dependent,\n      ) || {\n        dependent,\n        dependency,\n        doc: '',\n      }\n    )\n  })\n  }\n  */\n","/*\n * based on the following example\n * https://github.com/rexxars/react-markdown/issues/10#issuecomment-347763068\n */\n\nimport React from 'react'\nimport 'katex/dist/katex.min.css'\nimport ReactMarkdown from 'react-markdown'\nimport remarkMath from 'remark-math'\nimport styled from 'styled-components'\nimport rehypeKatex from 'rehype-katex'\n\nconst Styler = styled.div`\n  img {\n    max-width: 100%;\n  }\n`\n\nexport default function Math({ children }: { children: string }) {\n  const props = {\n    children,\n    remarkPlugins: [remarkMath],\n    rehypePlugins: [rehypeKatex],\n  }\n  return (\n    <Styler>\n      <ReactMarkdown {...props} />\n    </Styler>\n  )\n}\n","import React from 'react'\nimport { GraphNode } from '../hooks/graph'\nimport Math from './Math'\n\ninterface Props {\n  node: GraphNode\n  onSelectNode: (uri: string) => void\n}\n\nconst Statement = ({ node, onSelectNode }: Props) => {\n  const dependencies: GraphNode[] = Object.values(node.dependencies)\n  const dependents: GraphNode[] = Object.values(node.dependents)\n  return (\n    <div\n      style={{\n        position: 'fixed',\n        width: '100%',\n        top: '0',\n        bottom: 0,\n        pointerEvents: 'none',\n        overflowY: 'auto',\n        overflowX: 'hidden',\n      }}\n    >\n      <div className=\"columns mr-1 mt-6\">\n        <div className=\"column is-one-quarter is-offset-three-quarters\">\n          <div\n            className=\"card\"\n            style={{ pointerEvents: 'all', overflowX: 'auto', width: '100%' }}\n          >\n            <header className=\"card-header\">\n              <p className=\"card-header-title\">{node.label}</p>\n            </header>\n            <section className=\"card-content\">\n              <Math>{node.description}</Math>\n            </section>\n            <header className=\"card-header\">\n              <p className=\"card-header-title\">\n                dependencies: {dependencies.length}\n              </p>\n            </header>\n            <section className=\"card-content\">\n              <ul className=\"buttons are-small\">\n                {dependencies.map(dependency => (\n                  <li\n                    onClick={() => onSelectNode(dependency.uri)}\n                    key={dependency.uri}\n                    className=\"button is-link is-inverted\"\n                  >\n                    {dependency.label}\n                  </li>\n                ))}\n              </ul>\n            </section>\n            <header className=\"card-header\">\n              <p className=\"card-header-title\">\n                dependents: {dependents.length}\n              </p>\n            </header>\n            <section className=\"card-content\">\n              <ul className=\"buttons are-small\">\n                {dependents.map(dependent => (\n                  <li\n                    onClick={() => onSelectNode(dependent.uri)}\n                    key={dependent.uri}\n                    className=\"button is-link is-inverted\"\n                  >\n                    {dependent.label}\n                  </li>\n                ))}\n              </ul>\n            </section>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Statement\n","import { fetch } from '@inrupt/solid-client-authn-browser'\nimport {\n  getSolidDataset,\n  getTerm,\n  getThing,\n  getThingAll,\n  getTermAll,\n  IriString,\n} from '@inrupt/solid-client'\nimport { solid, foaf } from 'rdf-namespaces'\n\n// following https://github.com/solid/solid/blob/main/proposals/data-discovery.md to discover math documents of a user\nexport const findMathDocumentsOfPerson = async (\n  webId: IriString,\n): Promise<IriString[]> => {\n  if (webId) {\n    const dataset = await getSolidDataset(webId, { fetch })\n    const me = getThing(dataset, webId)\n    if (me) {\n      const publicTypeIndex = getTerm(me, solid.publicTypeIndex)?.value\n      if (publicTypeIndex) {\n        const index = await getSolidDataset(publicTypeIndex, { fetch })\n        const things = getThingAll(index)\n        const mathDocuments = things\n          .filter(thing =>\n            getTermAll(thing, solid.forClass)\n              .map(a => a.value)\n              .includes('https://terms.math.livegraph.org#concept'),\n          )\n          .map(thing => getTermAll(thing, solid.instance))\n          .flat()\n          .map(a => a.value)\n        return mathDocuments\n      }\n    }\n  }\n  return ['https://mrkvon.solidcommunity.net/public/math/index.ttl']\n}\n\nexport const findFriends = async (webId: IriString): Promise<IriString[]> => {\n  if (webId) {\n    const dataset = await getSolidDataset(getResourceUrl(webId), { fetch })\n    const person = getThing(dataset, webId)\n    if (person) {\n      const friends = getTermAll(person, foaf.knows).map(a => a.value)\n      return friends\n    }\n  }\n\n  return []\n}\n\ntype BFSPerson = {\n  uri: IriString\n  visited: boolean\n}\n\n// We'll need to figure out how to stop this\nexport const BFSFriends = async (\n  webId: IriString,\n  onChange: (people: IriString[]) => void,\n): Promise<void> => {\n  webId = fixUri(webId)\n  const timbl = 'https://timbl.solidcommunity.net/profile/card#me'\n  const people: { [iri: string]: BFSPerson } = {\n    [webId]: { uri: webId, visited: false },\n    [timbl]: { uri: timbl, visited: false },\n  }\n\n  let length = Object.keys(people).length\n  onChange(Object.keys(people))\n\n  while (\n    Object.values(people)\n      .map(person => person.visited)\n      .includes(false)\n  ) {\n    // take a first unvisited person\n    const unvisitedPerson = Object.values(people).find(\n      person => !person.visited,\n    )\n    if (unvisitedPerson) {\n      // set them visited\n      unvisitedPerson.visited = true\n      // fetch their friends\n      try {\n        const friends = await findFriends(unvisitedPerson.uri)\n        // add their friends\n        friends.forEach(uri => {\n          uri = fixUri(uri)\n          people[uri] = people?.[uri] ?? { uri, visited: false }\n        })\n      } catch (e) {\n        e\n      } finally {\n        if (length !== Object.keys(people).length) {\n          onChange(Object.keys(people))\n          length = Object.keys(people).length\n        }\n      }\n    } else break\n  }\n}\n\nconst getResourceUrl = (url: string): string => {\n  const resourceUrl = new URL(url)\n  resourceUrl.hash = ''\n  return resourceUrl.href\n}\n\nconst fixUri = (uri: IriString) => {\n  const regex = /^(.+)\\.solid.community(.*)$/\n  const match = uri.match(regex)\n  if (match) {\n    const [, begin, end] = match\n    uri = `${begin}.solidcommunity.net${end}`\n  }\n\n  return uri\n}\n","import React, { useEffect, useState, useContext } from 'react'\nimport Visualization from './Visualization'\nimport useGraph, { Graph, GraphNode } from '../hooks/graph'\nimport Simulation, { SimulationLinkExt } from '../simulation'\nimport { SimulationNode, SimulationLink } from '../simulation/types'\nimport { Vector } from '../helpers/draw'\nimport { SessionContext } from '../contexts/session'\nimport { Grid } from '../helpers/draw'\nimport { prune as pruneGraph } from '../algorithms'\nimport numeric from 'numeric'\nimport Statement from './Statement'\n// import useSimulation from '../hooks/simulation'\nimport { findMathDocumentsOfPerson, findFriends } from '../dataTest'\nimport { UrlString } from '@inrupt/solid-client'\n\nconst transform = (matrix: number[][], vector: Vector): Vector => {\n  const raw = numeric.dot(\n    matrix,\n    numeric.transpose([[...vector, 1]]),\n  ) as number[][]\n  const [[x], [y]] = raw\n  return [x, y]\n}\n\ntype VisualizationNode = {\n  x: number\n  y: number\n  r: number\n  uri: string\n  label: string\n  style: string\n}\n\nfunction nodeRadius(node: GraphNode) {\n  let count = Object.entries(node.dependents).length ?? 0\n  count = count < 1 ? 1 : count\n  return count ** 0.42 * 5\n}\n\ntype VisualizationLink = {\n  source: VisualizationNode\n  target: VisualizationNode\n}\n\nexport type VisualizationGraph = {\n  nodes: VisualizationNode[]\n  links: VisualizationLink[]\n}\n\ninterface SimulationGraph {\n  nodes: SimulationNode[]\n  links: SimulationLinkExt[]\n}\n\nconst basicGrid: Grid = {\n  origin: [0, 0],\n  distance: 20,\n  highlight: 5,\n}\n\nconst transformGrid = (matrix: number[][], grid: Grid): Grid => {\n  let distance = grid.distance * matrix[0][0]\n  while (distance < 20) {\n    distance *= 5\n  }\n  return {\n    origin: transform(matrix, grid.origin),\n    distance,\n    highlight: grid.highlight,\n  }\n}\n\nconst transformLayout = (\n  matrix: number[][],\n  graph: SimulationGraph,\n  highlighted: string | undefined,\n  selected: string | undefined,\n  selectedDependencies: string[],\n): VisualizationGraph => {\n  const transformedNodesDict = Object.fromEntries(\n    graph.nodes.map(node => {\n      const [x, y] = transform(matrix, [node.x, node.y])\n      const r = matrix[0][0] * node.r\n      return [node.uri, { ...node, x, y, r, style: '' }]\n    }),\n  )\n\n  if (highlighted) {\n    transformedNodesDict[highlighted].style = 'accent'\n  }\n\n  if (selected) {\n    transformedNodesDict[selected].style = 'focus'\n  }\n\n  selectedDependencies.forEach(\n    uri => (transformedNodesDict[uri].style = 'accent'),\n  )\n\n  const links = graph.links.map(link => {\n    const sourceUri =\n      typeof link.source === 'string'\n        ? link.source\n        : typeof link.source === 'number'\n        ? graph.nodes[link.source].uri\n        : link.source.uri\n    const targetUri =\n      typeof link.target === 'string'\n        ? link.target\n        : typeof link.target === 'number'\n        ? graph.nodes[link.target].uri\n        : link.target.uri\n    const source = transformedNodesDict[sourceUri]\n    const target = transformedNodesDict[targetUri]\n    return { source, target }\n  })\n\n  return { nodes: Object.values(transformedNodesDict), links }\n}\n\nconst selectNodeDependencies = (\n  selectedNodeUri: string | undefined,\n  graph: Graph,\n): string[] => {\n  if (!selectedNodeUri) return []\n  return Object.values(graph[selectedNodeUri]?.dependencies ?? {}).map(\n    node => node.uri,\n  )\n}\n\nconst VisualizationContainer: React.FC = props => {\n  const [simulation] = useState(new Simulation())\n  const [documents, setDocuments] = useState<UrlString[]>([\n    'https://mrkvon.solidcommunity.net/public/math/index.ttl',\n  ])\n\n  const [layout, setLayout] = useState<SimulationGraph>({\n    nodes: [],\n    links: [],\n  })\n\n  const [highlightedNode, setHighlightedNode] = useState<string | undefined>()\n  const [selectedNode, setSelectedNode] = useState<string | undefined>()\n\n  const [info] = useContext(SessionContext)\n  // abstract graph\n  const graph = useGraph(documents)\n\n  useEffect(() => {\n    findMathDocumentsOfPerson(info?.webId ?? '').then(docs => {\n      setDocuments(docs)\n    })\n    findFriends(info?.webId ?? '').then(console.log)\n  }, [info])\n\n  // transformation matrix\n  const [matrix, setMatrix] = useState<number[][]>([\n    [1, 0, 0],\n    [0, 1, 0],\n    [0, 0, 1],\n  ])\n\n  // initialize simulation\n  useEffect(() => {\n    let lastUpdate = Date.now() - 20\n    simulation.start({\n      nodes: [],\n      links: [],\n      onTick: ({ nodes, links }) => {\n        const now = Date.now()\n        if (now > lastUpdate + 20) {\n          setLayout({ nodes: [...nodes], links: [...links] })\n          lastUpdate = now\n        }\n      },\n    })\n    return () => {\n      simulation.stop()\n    }\n  }, [simulation])\n\n  /*/ refetch graph data when user gets logged in or out\n  useEffect(() => {\n    ;(async () => {\n      await revalidate()\n    })()\n  }, [info, revalidate])\n  */\n\n  // when graph changes, update simulation\n  useEffect(() => {\n    let prunedOrFullGraph\n    try {\n      prunedOrFullGraph = pruneGraph(graph)\n    } catch {\n      prunedOrFullGraph = graph\n    }\n\n    const nodes = Object.values(prunedOrFullGraph).map(node => ({\n      label: node.label,\n      x: Math.random() * 400,\n      y: Math.random() * 400,\n      r: nodeRadius(node),\n      uri: node.uri,\n    }))\n\n    const links = Object.values(prunedOrFullGraph).reduce(\n      (nodes, { uri: source, dependencies }) => {\n        Object.keys(dependencies).forEach(target =>\n          nodes.push({ source, target }),\n        )\n        return nodes\n      },\n      [] as SimulationLink[],\n    )\n\n    simulation.update({ nodes, links })\n  }, [graph, simulation])\n\n  const handleTransform = (matrix: number[][]): void => {\n    setMatrix(prevMatrix => numeric.dot(matrix, prevMatrix) as number[][])\n  }\n\n  const withNode = (action: (uri: string) => unknown) => {\n    return (position: Vector): void => {\n      // first transform to local coordinates\n      const [x, y] = transform(numeric.inv(matrix), position)\n      // then find the node in simulation\n      action(simulation.selectNode({ x, y })?.uri)\n    }\n  }\n\n  const handleHover = withNode(setHighlightedNode)\n  const handleSelect = withNode(setSelectedNode)\n\n  const selectedNodeDependencies = selectNodeDependencies(selectedNode, graph)\n  // transform layout to TransformedLayout\n  const transformedLayout = transformLayout(\n    matrix,\n    layout,\n    highlightedNode,\n    selectedNode,\n    selectedNodeDependencies,\n  )\n\n  const grid = transformGrid(matrix, basicGrid)\n\n  return (\n    <>\n      <Visualization\n        graph={transformedLayout}\n        grid={grid}\n        onTransform={handleTransform}\n        onHover={handleHover}\n        onSelectNode={handleSelect}\n        {...props}\n      />\n\n      {selectedNode && (\n        <Statement\n          node={graph[selectedNode]}\n          onSelectNode={uri => setSelectedNode(uri)}\n        />\n      )}\n    </>\n  )\n}\n\nexport default VisualizationContainer\n","import React, { createContext, useContext, useState, useEffect } from 'react'\nimport { SessionContext } from '../contexts/session'\nimport { /*BFSFriends,*/ findMathDocumentsOfPerson } from '../dataTest'\nimport { IriString } from '@inrupt/solid-client'\n\nexport const PeopleContext = createContext<string[]>([])\n\ninterface Props {\n  children: React.ReactNode\n}\n\ntype MathDocument = {\n  uri: IriString\n  owner: IriString\n  access: string\n}\n\nexport const DocumentsContext = createContext<MathDocument[]>([])\n\nconst DataContainer = ({ children }: Props) => {\n  const [info] = useContext(SessionContext)\n  const [people, setPeople] = useState<string[]>([])\n  const [mathDocuments, setMathDocuments] = useState<MathDocument[]>([])\n\n  useEffect(() => {\n    // here we lookup people connected to us\n    if (info?.isLoggedIn) {\n      // BFSFriends(info.webId, setPeople)\n      setPeople([info.webId])\n    } else {\n      setPeople([])\n    }\n  }, [info])\n\n  // we lookup math documents of found people\n  useEffect(() => {\n    people.forEach(person =>\n      findMathDocumentsOfPerson(person)\n        .then(documents =>\n          setMathDocuments(state => {\n            const notAddedYet = documents.filter(\n              doc => !state.find(stateDoc => doc === stateDoc.uri),\n            )\n            if (notAddedYet.length > 0) {\n              return [\n                ...state,\n                ...notAddedYet.map(uri => ({ uri, owner: person, access: '' })),\n              ]\n            } else return state\n          }),\n        )\n        .catch(e => {\n          e\n        }),\n    )\n  }, [people])\n\n  useEffect(() => {\n    console.log(\n      'documents',\n      mathDocuments.map(doc => doc.uri),\n    )\n  }, [mathDocuments])\n\n  return (\n    <DocumentsContext.Provider value={mathDocuments}>\n      <PeopleContext.Provider value={people}>{children}</PeopleContext.Provider>\n    </DocumentsContext.Provider>\n  )\n}\n\nexport default DataContainer\n","import React, { useContext } from 'react'\nimport { PeopleContext } from './DataContainer'\n\ninterface Props {\n  people: string[]\n}\n\nexport const PeopleList = ({ people, ...props }: Props) => (\n  <div {...props}>\n    <div>{people.length}</div>\n    {/*\n    <ul>\n      {people.map(person => (\n        <li key={person}>{person}</li>\n      ))}\n    </ul>*/}\n  </div>\n)\n\ntype ULProps = Partial<React.HTMLAttributes<HTMLUListElement>>\n\nexport const PeopleListContainer = (props: ULProps) => {\n  const people = useContext(PeopleContext)\n  return <PeopleList people={people} {...props} />\n}\n","import React from 'react'\nimport Login from './Login'\nimport VisualizationContainer from './VisualizationContainer'\nimport styled from 'styled-components'\nimport { PeopleListContainer } from './PeopleList'\n\nconst PositionedLogin = styled(Login)`\n  position: fixed;\n  top: 1em;\n  right: 1em;\n  display: block;\n`\n\nconst PositionedPeopleList = styled(PeopleListContainer)`\n  position: fixed;\n  top: 1em;\n  left: 1em;\n  display: block;\n  background-color: white;\n  padding: 0.25rem;\n`\n\nconst FullSizeVisualization = styled(VisualizationContainer)`\n  height: 100vh;\n  width: 100vw;\n  display: block;\n`\n\nconst Layout: React.FC = () => {\n  return (\n    <>\n      <PositionedPeopleList />\n\n      <PositionedLogin />\n\n      <FullSizeVisualization />\n    </>\n  )\n}\n\nexport default Layout\n","import React from 'react'\nimport Layout from './components/Layout'\nimport DataContainer from './components/DataContainer'\n\nconst App: React.FC = () => (\n  <DataContainer>\n    <Layout />\n  </DataContainer>\n)\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React, { useState, ReactNode } from 'react'\nimport { SessionContext, SessionInfo } from '../contexts/session'\n\ninterface Props {\n  children: ReactNode\n}\n\nconst SessionProvider: React.FC<Props> = (props: Props) => {\n  const [sessionInfo, setSessionInfo] = useState<SessionInfo | null>(null)\n\n  return (\n    <SessionContext.Provider value={[sessionInfo, setSessionInfo]}>\n      {props.children}\n    </SessionContext.Provider>\n  )\n}\n\nexport default SessionProvider\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport SessionProvider from './components/SessionProvider'\nimport Modal from 'react-modal'\n\nif (typeof document === 'object') {\n  const appElement = document.querySelector('#root') as HTMLElement\n\n  Modal.setAppElement(appElement)\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <SessionProvider>\n      <App />\n    </SessionProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}