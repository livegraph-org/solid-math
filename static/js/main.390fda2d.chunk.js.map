{"version":3,"sources":["features/login/LoginPrompt.tsx","app/hooks.ts","features/math/algorithms.ts","features/math/visualization/Visualization.tsx","features/math/mathAPI.ts","features/math/mathSlice.ts","features/login/loginAPI.ts","features/login/loginSlice.ts","features/login/Login.tsx","features/math/visualization/helpers/draw.ts","features/math/visualization/simulation/index.ts","features/math/visualization/simulation/gravity.ts","features/math/Math.tsx","features/math/Statement.tsx","features/search/searchSlice.ts","features/search/Search.tsx","features/math/InfoContainer.tsx","features/math/visualization/helpers/transform.ts","features/math/visualization/VisualizationContainer.tsx","components/About.tsx","components/Layout.tsx","App.tsx","app/store.ts","reportWebVitals.ts","index.tsx"],"names":["LoginPrompt","onLogin","props","useState","promptOpen","setPromptOpen","localStorage","getItem","idp","setIdp","isOpen","onRequestClose","contentLabel","overlayClassName","base","afterOpen","beforeClose","className","closeTimeoutMS","onClick","onSubmit","e","preventDefault","setItem","id","type","value","onChange","newValue","currentTarget","placeholder","useAppDispatch","useDispatch","useAppSelector","useSelector","old","prune","input","graph","graphlib","Graph","Object","values","forEach","node","setNode","uri","dependencies","dependency","setEdge","output","fromEntries","entries","map","alg","isAcyclic","Error","edges","edge","removeEdge","dijkstra","v","w","distance","Infinity","pruneCore","source","target","fetchGraph","a","getSolidDataset","fetch","dataset","things","getThingAll","nodes","links","thing","asUrl","getTerm","rdf","description","label","rdfs","push","en","dependents","examples","created","updated","proofs","getTermAll","findMathDocumentsOfPerson","webId","me","getThing","publicTypeIndex","solid","index","mathDocuments","filter","forClass","includes","instance","flat","addDocuments","createAsyncThunk","dispatch","api","documents","doc","addGraph","mathSlice","createSlice","name","initialState","entities","byId","allIds","document","ui","highlighted","selected","reducers","highlight","state","action","payload","select","extraReducers","builder","addCase","fulfilled","dependent","actions","selectGraph","createSelector","math","enrichedNodes","enrichedNode","selectPrunedGraph","selectHighlighted","selectSelected","selectSelectedNodeDependencies","selectSelectedNode","init","handleIncomingRedirect","url","window","location","href","restorePreviousSession","sessionInfo","login","oidcIssuer","solidLogin","redirectUrl","clientName","alert","removeItem","logout","solidLogout","isLoggedIn","status","_","response","loginSlice","pending","selectSession","selectLoginStatus","Login","info","commonProps","disabled","drawText","context","text","options","x","y","font","textBaseline","textAlign","assign","fillText","drawCircle","radius","beginPath","arc","Math","PI","fill","drawLine","start","end","moveTo","lineTo","stroke","Visualization","grid","onTransform","onHover","onSelectNode","canvasEl","useRef","width","height","setVisualizationSize","useEffect","current","getContext","offset","save","translate","clearRect","strokeStyle","min1","max1","min0","max0","getLineWidth","i","origin","lineWidth","drawGrid","link","s","t","numeric","sub","size","sqrt","div","add","mul","r","color","accented","style","focused","focused2","rest","fillStyle","drawGraph","restore","updateCanvasSize","elementRef","clientHeight","clientWidth","getElementSize","addEventListener","removeEventListener","call","drag","clickDistance","on","dx","dy","zoom","scaleExtent","transform","k","dot","inv","withCanvasPosition","func","rect","getBoundingClientRect","clientX","left","clientY","top","handleMouseMove","handleClick","ref","onMouseMove","onMouseOut","classnames","Simulation","runs","simulation","forceSimulation","alphaDecay","force","forceLink","strength","alpha","d","vy","optimumDifference","forceGravity","forceManyBody","distanceMax","forceX","forceY","forceCollide","forceCenter","stop","onTick","restart","update","thisNodeDict","updatedNodes","random","selectNode","find","Styler","styled","children","remarkPlugins","remarkMath","rehypePlugins","rehypeKatex","NodeList","title","length","onMouseEnter","onMouseLeave","Statement","searchSlice","query","setSearch","selectSearch","search","selectSearchResults","toLowerCase","sort","b","slice","Search","ICOutside","ICInside","InfoContainer","matrix","vector","raw","transpose","nodeRadius","count","basicGrid","VisualizationContainer","prunedGraph","highlightedNode","selectedNode","selectedNodeDependencies","layout","setLayout","setMatrix","lastUpdate","Date","now","reduce","keys","withNode","position","handleHover","handleSelect","transformedLayout","selectedDependencies","transformedNodesDict","sourceUri","targetUri","transformLayout","transformGrid","prevMatrix","Link","Footer","footer","About","PositionedLogin","PositionedAbout","FullSizeVisualization","Layout","App","initLogin","store","configureStore","reducer","loginReducer","mathReducer","searchReducer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","appElement","querySelector","Modal","setAppElement","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.390fda2d.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport Modal from 'react-modal'\n\ninterface Props {\n  onLogin: (oidcIssuer: string) => void\n}\n\nconst LoginPrompt: React.FC<Props> = ({ onLogin, ...props }: Props) => {\n  const [promptOpen, setPromptOpen] = useState(false)\n  const [idp, setIdp] = useState(\n    localStorage.getItem('idp') ?? 'https://solidcommunity.net',\n  )\n\n  const onSubmit: React.FormEventHandler = e => {\n    e.preventDefault()\n    localStorage.setItem('idp', idp)\n    onLogin(idp)\n  }\n\n  const onChangeInput = (e: React.FormEvent<HTMLInputElement>) => {\n    e.preventDefault()\n    const newValue = e.currentTarget.value\n    setIdp(newValue)\n  }\n\n  if (!promptOpen) {\n    return (\n      <>\n        <button\n          {...props}\n          onClick={e => {\n            e.preventDefault()\n            setPromptOpen(true)\n          }}\n        >\n          Login\n        </button>\n      </>\n    )\n  }\n\n  return (\n    <>\n      <Modal\n        isOpen={promptOpen}\n        onRequestClose={() => setPromptOpen(false)}\n        contentLabel=\"Connect your Solid Pod\"\n        overlayClassName={{\n          base: 'modal modal-background is-active',\n          afterOpen: '',\n          beforeClose: '',\n        }}\n        className={{\n          base: 'modal-content',\n          afterOpen: '',\n          beforeClose: '',\n        }}\n        closeTimeoutMS={50}\n      >\n        <button className=\"modal-close\" onClick={() => setPromptOpen(false)}>\n          close\n        </button>\n\n        <div className=\"card\">\n          <header className=\"card-header\">\n            <p className=\"card-header-title\">\n              Select your Solid identity provider\n            </p>\n          </header>\n          <div className=\"card-content\">\n            <form onSubmit={onSubmit}>\n              <div className=\"field\">\n                <div className=\"control\">\n                  <input\n                    id=\"idp\"\n                    className=\"input\"\n                    type=\"url\"\n                    value={idp}\n                    onChange={onChangeInput}\n                    placeholder=\"Where is your Solid Pod?\"\n                  />\n                </div>\n              </div>\n              <div className=\"field\">\n                <div className=\"control\">\n                  <input\n                    type=\"submit\"\n                    value=\"Connect\"\n                    className=\"button is-link\"\n                  />\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </Modal>\n    </>\n  )\n}\n\nexport default LoginPrompt\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport type { RootState, AppDispatch } from './store'\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\n","import graphlib, { Graph } from 'graphlib'\n// import { Dependency } from './simulation/types'\n// import findCyclesAdjacency from 'elementary-circuits-directed-graph'\nimport { Graph as AbstractGraph } from './types'\n\nfunction pruneCore(graph: Graph) {\n  if (!graphlib.alg.isAcyclic(graph)) {\n    // const cycles = graphlib.alg.findCycles(graph);\n    throw new Error('pruning is possible on DAG only')\n  }\n  const edges = graph.edges()\n  edges.forEach(edge => {\n    // remove edge\n    graph.removeEdge(edge)\n    // see if another path exists\n    const paths = graphlib.alg.dijkstra(graph, edge.v)\n    // if the other path doesn't exist, add the node back\n    if (paths[edge.w].distance === Infinity) {\n      graph.setEdge(edge)\n    }\n  })\n  return graph\n}\n\nexport const prune = (input: AbstractGraph): AbstractGraph => {\n  const graph = new graphlib.Graph()\n\n  Object.values(input).forEach(node => {\n    graph.setNode(node.uri)\n\n    Object.values(node.dependencies).forEach(dependency =>\n      graph.setEdge(node.uri, dependency.uri),\n    )\n  })\n\n  const output: AbstractGraph = Object.fromEntries(\n    Object.entries(input).map(([uri, node]) => [\n      uri,\n      { ...node, dependencies: {} },\n    ]),\n  )\n\n  const prunedEdges = pruneCore(graph)\n    .edges()\n    .map(({ v: source, w: target }) => ({ source, target }))\n\n  prunedEdges.forEach(({ source, target }) => {\n    output[source].dependencies[target] = output[target]\n  })\n\n  return output\n}\n\n/*\nexport function getCycles(dependencies: Dependency[]): Dependency[][] {\n  const nodes = Array.from(\n    new Set([\n      ...dependencies.map(d => d.dependent),\n      ...dependencies.map(d => d.dependency),\n    ]),\n  )\n  const nodeIndexes = Object.fromEntries(\n    Object.entries(nodes).map(([key, value]) => [value, +key]),\n  )\n\n  const adjacency = Array(nodes.length)\n    .fill(null)\n    .map(() => [] as number[])\n  dependencies.forEach(({ dependent, dependency }) => {\n    const dependentIndex = nodeIndexes[dependent]\n    const dependencyIndex = nodeIndexes[dependency]\n    adjacency[dependentIndex].push(dependencyIndex)\n  })\n\n  // try to detect loops (cycles of length 1)\n  // this is due to the limits of the findCyclesAdjacency, which fails to detect loops\n  // https://github.com/antoinerg/elementary-circuits-directed-graph/issues/13\n  // @TODO remove loop detection when the issue is fixed\n  const loops = adjacency.reduce((loops, adj, i) => {\n    if (adj.includes(i)) loops.push([i, i])\n    return loops\n  }, [] as number[][])\n\n  const rawCycles = loops.length > 0 ? loops : findCyclesAdjacency(adjacency)\n\n  const simpleCycles = rawCycles.map(cycle =>\n    cycle.slice(0, -1).map(i => nodes[i]),\n  )\n\n  return simpleCycles\n    .map(cycle => simpleCycleToCycle(cycle, dependencies))\n    .sort((a, b) => a.length - b.length)\n    .slice(0, 5)\n}\n\nfunction simpleCycleToCycle(\n  simpleCycle: string[],\n  dependencies: Dependency[],\n): Dependency[] {\n  return simpleCycle.map((uri, index) => {\n    const dependent = simpleCycle[index]\n    const dependency = simpleCycle[(index + 1) % simpleCycle.length]\n    return (\n      dependencies.find(\n        d => d.dependency === dependency && d.dependent === dependent,\n      ) || {\n        dependent,\n        dependency,\n        doc: '',\n      }\n    )\n  })\n  }\n  */\n","import React, { useRef, useEffect, useState } from 'react'\nimport { drawGrid, drawGraph } from './helpers/draw'\nimport classnames from 'classnames'\nimport { drag } from 'd3-drag'\nimport { zoom } from 'd3-zoom'\nimport { select } from 'd3-selection'\nimport numeric from 'numeric'\nimport { VisualizationGraph, Vector, Grid, Matrix } from './types'\n\ntype Props = Partial<React.CanvasHTMLAttributes<HTMLCanvasElement>> & {\n  graph: VisualizationGraph\n  grid: Grid\n  onTransform: (matrix: Matrix) => void\n  onHover: (position: Vector) => void\n  onSelectNode: (position: Vector) => void\n}\n\nlet old: Matrix\n\nconst Visualization: React.FC<Props> = ({\n  graph,\n  grid,\n  onTransform,\n  onHover,\n  onSelectNode,\n  ...props\n}: Props) => {\n  const canvasEl = useRef<HTMLCanvasElement>(null)\n  const [{ width, height }, setVisualizationSize] = useState({\n    width: 0,\n    height: 0,\n  })\n\n  useEffect(() => {\n    if (canvasEl && canvasEl.current) {\n      const context = canvasEl.current.getContext('2d')\n      if (context) {\n        const offset: Vector = [width / 2, height / 2]\n        context.save()\n        context.translate(...offset)\n        context.clearRect(-offset[0], -offset[1], width, height)\n        drawGrid(context, grid, width, height, offset)\n        drawGraph(context, graph)\n        return () => context.restore()\n      }\n    }\n  }, [width, height, graph, canvasEl, grid])\n\n  useEffect(() => {\n    const updateCanvasSize = () => {\n      if (canvasEl && canvasEl.current) {\n        const size = getElementSize(canvasEl)\n        setVisualizationSize(size)\n      }\n    }\n\n    updateCanvasSize()\n    window.addEventListener('load', updateCanvasSize)\n    window.addEventListener('resize', updateCanvasSize)\n\n    return () => {\n      window.removeEventListener('resize', updateCanvasSize)\n      window.removeEventListener('load', updateCanvasSize)\n    }\n  }, [width, height, canvasEl])\n\n  useEffect(() => {\n    if (canvasEl && canvasEl.current) {\n      select(canvasEl.current).call(\n        drag<HTMLCanvasElement, unknown>()\n          .clickDistance(2)\n          //.on('start', console.log)\n          .on('drag', e => {\n            onTransform([\n              [1, 0, e.dx],\n              [0, 1, e.dy],\n              [0, 0, 1],\n            ])\n          }),\n        //.on('end', console.log),\n      )\n\n      select(canvasEl.current).call(\n        zoom<HTMLCanvasElement, unknown>()\n          .clickDistance(2)\n          .scaleExtent([0.05, 3])\n          .on('zoom', e => {\n            old = old ?? [\n              [1, 0, -width / 2],\n              [0, 1, -height / 2],\n              [0, 0, 1],\n            ]\n            const { x, y, k } = e.transform\n\n            const zoom = [\n              [k, 0, x - width / 2],\n              [0, k, y - height / 2],\n              [0, 0, 1],\n            ]\n\n            const transform = numeric.dot(zoom, numeric.inv(old)) as Matrix\n            old = zoom\n\n            onTransform(transform)\n          }),\n      )\n    }\n  }, [canvasEl, onTransform, height, width])\n\n  const withCanvasPosition =\n    (\n      func: (position: Vector) => void,\n    ): React.MouseEventHandler<HTMLCanvasElement> =>\n    e => {\n      // https://stackoverflow.com/a/42111623\n      if (canvasEl && canvasEl.current) {\n        const rect = canvasEl.current.getBoundingClientRect()\n        const x = e.clientX - rect.left //x position within the element.\n        const y = e.clientY - rect.top //y position within the element.\n        func([x - width / 2, y - height / 2])\n      }\n    }\n\n  const handleMouseMove = withCanvasPosition(onHover)\n  const handleClick = withCanvasPosition(onSelectNode)\n\n  return (\n    <canvas\n      {...props}\n      ref={canvasEl}\n      onMouseMove={handleMouseMove}\n      // @TODO this piece is very inefficient, we search for a nonexistent node, just to unhighlight everything; but it works\n      onMouseOut={() => onHover([Infinity, Infinity])}\n      width={width}\n      height={height}\n      className={classnames(props.className, 'has-background-dark')}\n      onClick={handleClick}\n    />\n  )\n}\n\nexport default Visualization\n\nfunction getElementSize(elementRef: React.RefObject<HTMLCanvasElement>) {\n  if (elementRef && elementRef.current) {\n    const { clientHeight: height, clientWidth: width } = elementRef.current\n    return { height, width }\n  } else return { height: 0, width: 0 }\n}\n","import {\n  getSolidDataset,\n  UrlString,\n  getThingAll,\n  getTermAll,\n  getTerm,\n  getThing,\n  asUrl,\n} from '@inrupt/solid-client'\nimport { fetch } from '@inrupt/solid-client-authn-browser'\nimport { rdf, rdfs, solid } from 'rdf-namespaces'\nimport { Definition, Statement } from './types'\n\ninterface Graph {\n  nodes: (Definition | Statement)[]\n  links: [string, string][]\n}\n\nexport const fetchGraph = async (uri: UrlString): Promise<Graph> => {\n  const dataset = await getSolidDataset(uri, { fetch })\n  const things = getThingAll(dataset)\n  const graph: Graph = { nodes: [], links: [] }\n  things.forEach(thing => {\n    const uri = asUrl(thing)\n    const type = getTerm(thing, rdf.type)?.value ?? ''\n    const description = getTerm(thing, rdf.value)?.value ?? ''\n    const label = getTerm(thing, rdfs.label)?.value ?? ''\n    switch (type) {\n      case 'https://terms.math.livegraph.org#Definition':\n        graph.nodes.push({\n          id: uri,\n          type: 'definition',\n          label: { en: label },\n          description: { en: description },\n          dependencies: [],\n          dependents: [],\n          examples: [],\n          created: 0,\n          updated: 0,\n        })\n        break\n      case 'https://terms.math.livegraph.org#Statement':\n        graph.nodes.push({\n          id: uri,\n          type: 'statement',\n          label: { en: label },\n          description: { en: description },\n          dependencies: [],\n          dependents: [],\n          examples: [],\n          proofs: [],\n          created: 0,\n          updated: 0,\n        })\n        break\n      default:\n        break\n    }\n    getTermAll(thing, 'https://terms.math.livegraph.org#dependsOn').forEach(\n      dependency => {\n        graph.links.push([uri, dependency.value])\n      },\n    )\n  })\n  return graph\n}\n\nexport const findMathDocumentsOfPerson = async (\n  webId: string,\n): Promise<string[]> => {\n  if (webId) {\n    const dataset = await getSolidDataset(webId, { fetch })\n    const me = getThing(dataset, webId)\n    if (me) {\n      const publicTypeIndex = getTerm(me, solid.publicTypeIndex)?.value\n      if (publicTypeIndex) {\n        const index = await getSolidDataset(publicTypeIndex, { fetch })\n        const things = getThingAll(index)\n        const mathDocuments = things\n          .filter(thing =>\n            getTermAll(thing, solid.forClass)\n              .map(a => a.value)\n              .includes('https://terms.math.livegraph.org#Definition'),\n          )\n          .map(thing => getTermAll(thing, solid.instance))\n          .flat()\n          .map(a => a.value)\n        return mathDocuments\n      }\n    }\n  }\n  return ['https://mrkvon.solidcommunity.net/public/math/graph-theory.ttl']\n}\n","import {\n  createSlice,\n  createAsyncThunk,\n  createSelector,\n  PayloadAction,\n} from '@reduxjs/toolkit'\nimport { prune } from './algorithms'\nimport { RootState } from '../../app/store'\nimport * as api from './mathAPI'\nimport { Definition, Statement, Graph, MathDocument } from './types'\nimport { Entity } from '../../types'\n\nexport interface MathState {\n  entities: {\n    node: Entity<Definition | Statement>\n    document: Entity<MathDocument>\n    // we'll add examples and proofs and citations here\n  }\n  ui: {\n    highlighted: string\n    selected: string\n  }\n}\n\nconst initialState: MathState = {\n  entities: {\n    node: {\n      byId: {},\n      allIds: [],\n    },\n    document: {\n      byId: {},\n      allIds: [],\n    },\n  },\n  ui: {\n    highlighted: '',\n    selected: '',\n  },\n}\n\n// Thunks\nexport const addDocuments = createAsyncThunk(\n  'math/addDocuments',\n  async (webId: string, { dispatch }) => {\n    const documents = await api.findMathDocumentsOfPerson(webId)\n    documents.forEach(doc => dispatch(addGraph(doc)))\n    return documents\n  },\n)\n\nexport const addGraph = createAsyncThunk(\n  'math/addGraph',\n  async (uri: string) => {\n    return await api.fetchGraph(uri)\n  },\n)\n\nexport const mathSlice = createSlice({\n  name: 'math',\n  initialState,\n  reducers: {\n    highlight: (state, action: PayloadAction<string>) => {\n      state.ui.highlighted = action.payload\n    },\n    select: (state, action: PayloadAction<string>) => {\n      state.ui.selected = action.payload\n    },\n  },\n  extraReducers: builder => {\n    builder\n      .addCase(addDocuments.fulfilled, (state, action) => {\n        state.entities.document = {\n          byId: Object.fromEntries(action.payload.map(id => [id, { id }])),\n          allIds: action.payload,\n        }\n      })\n      .addCase(addGraph.fulfilled, (state, action) => {\n        const { nodes, links } = action.payload\n        nodes.forEach(node => {\n          state.entities.node.byId[node.id] = node\n          state.entities.node.allIds.push(node.id)\n        })\n        links.forEach(([dependent, dependency]) => {\n          state.entities.node.byId[dependent].dependencies.push(dependency)\n          state.entities.node.byId[dependency].dependents.push(dependent)\n        })\n      })\n  },\n})\n\nexport const { highlight, select } = mathSlice.actions\n\n// Selectors\nconst selectGraphNodes = (state: RootState) => state.math.entities.node\n\nexport const selectGraph = createSelector(selectGraphNodes, ({ byId }) => {\n  const enrichedNodes: Graph = Object.fromEntries(\n    Object.entries(byId).map(([id, { id: uri, ...node }]) => [\n      id,\n      {\n        ...node,\n        uri,\n        dependencies: {},\n        dependents: {},\n      },\n    ]),\n  )\n\n  Object.entries(enrichedNodes).forEach(([id, enrichedNode]) => {\n    enrichedNode.dependencies = Object.fromEntries(\n      byId[id].dependencies.map(id => [id, enrichedNodes[id]]),\n    )\n    enrichedNode.dependents = Object.fromEntries(\n      byId[id].dependents.map(id => [id, enrichedNodes[id]]),\n    )\n  })\n\n  return enrichedNodes\n})\n\nexport const selectPrunedGraph = createSelector(selectGraph, graph =>\n  prune(graph),\n)\n\nexport const selectHighlighted = (state: RootState) => state.math.ui.highlighted\nexport const selectSelected = (state: RootState) => state.math.ui.selected\n\nconst selectNodeDependencies = (uri: string, graph: Graph): string[] =>\n  uri ? Object.values(graph[uri]?.dependencies ?? {}).map(node => node.uri) : []\n\nexport const selectSelectedNodeDependencies = createSelector(\n  selectSelected,\n  selectGraph,\n  selectNodeDependencies,\n)\n\nexport const selectSelectedNode = createSelector(\n  selectSelected,\n  selectGraph,\n  (uri, graph) => graph[uri],\n)\n\nexport default mathSlice.reducer\n","import {\n  login as solidLogin,\n  logout as solidLogout,\n  handleIncomingRedirect,\n} from '@inrupt/solid-client-authn-browser'\n\nexport const init = async () => {\n  const sessionInfo = await handleIncomingRedirect({\n    url: window.location.href,\n    restorePreviousSession: true,\n  })\n  return sessionInfo\n}\n\nexport const login = async (oidcIssuer: string) => {\n  try {\n    await solidLogin({\n      oidcIssuer,\n      redirectUrl: window.location.href,\n      clientName: 'Friends Crawler',\n    })\n  } catch (error) {\n    alert(`Could not find a Solid Pod at ${oidcIssuer}`)\n    localStorage.removeItem('idp')\n  }\n}\n\nexport const logout = async () => {\n  await solidLogout()\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { RootState } from '../../app/store'\nimport { addDocuments } from '../math/mathSlice'\nimport * as api from './loginAPI'\n\n// State\nexport interface LoginState {\n  webId: string\n  isLoggedIn: boolean\n  status: 'idle' | 'loading' | 'failed'\n}\n\nconst initialState: LoginState = {\n  webId: '',\n  isLoggedIn: false,\n  status: 'idle',\n}\n\n// Thunks\nexport const init = createAsyncThunk('login/init', async (_, { dispatch }) => {\n  const response = await api.init()\n  const webId = response?.webId ?? ''\n  const isLoggedIn = response?.isLoggedIn ?? false\n  dispatch(addDocuments(webId))\n  return { webId, isLoggedIn }\n})\n\nexport const login = createAsyncThunk(\n  'login/login',\n  async (oidcIssuer: string) => {\n    await api.login(oidcIssuer)\n  },\n)\n\nexport const logout = createAsyncThunk('login/logout', async () => {\n  await api.logout()\n})\n\n// Slice\nexport const loginSlice = createSlice({\n  name: 'login',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder\n      .addCase(init.pending, state => {\n        state.status = 'loading'\n      })\n      .addCase(init.fulfilled, (state, action) => {\n        state.status = 'idle'\n        state.webId = action.payload.webId\n        state.isLoggedIn = action.payload.isLoggedIn\n      })\n      .addCase(login.pending, state => {\n        state.status = 'loading'\n      })\n      .addCase(login.fulfilled, state => {\n        state.status = 'idle'\n      })\n      .addCase(logout.pending, state => {\n        state.status = 'loading'\n      })\n      .addCase(logout.fulfilled, () => {\n        return initialState\n      })\n  },\n})\n\n// Selectors\nexport const selectSession = (state: RootState) => ({\n  webId: state.login.webId,\n  isLoggedIn: state.login.isLoggedIn,\n})\n\nexport const selectLoginStatus = (state: RootState) => state.login.status\n\nexport default loginSlice.reducer\n","import React from 'react'\nimport LoginPrompt from './LoginPrompt'\nimport { useAppDispatch, useAppSelector } from '../../app/hooks'\nimport { login, logout, selectLoginStatus, selectSession } from './loginSlice'\n\ninterface Props {\n  className?: string\n}\n\nconst Login: React.FC<Props> = (\n  { className, ...props }: Props = { className: '' },\n) => {\n  const dispatch = useAppDispatch()\n  const info = useAppSelector(selectSession)\n  const status = useAppSelector(selectLoginStatus)\n\n  const commonProps = {\n    ...props,\n    className: `${className} button`,\n  }\n\n  return status === 'loading' ? (\n    <button {...commonProps} disabled>\n      Loading\n    </button>\n  ) : info.isLoggedIn ? (\n    <button {...commonProps} onClick={() => dispatch(logout())}>\n      {info.webId} Logout\n    </button>\n  ) : (\n    <LoginPrompt\n      {...commonProps}\n      onLogin={oidcIssuer => dispatch(login(oidcIssuer))}\n    />\n  )\n}\n\nexport default Login\n","import { Vector, Grid, VisualizationGraph } from '../types'\nimport numeric from 'numeric'\n\ntype Options = Partial<CanvasRenderingContext2D>\n\nconst drawText = (\n  context: CanvasRenderingContext2D,\n  [x, y]: Vector,\n  text: string,\n  options: Options,\n) => {\n  context.font = '20px Arial'\n  context.textBaseline = 'middle'\n  context.textAlign = 'left'\n  // context.fillStyle = '#fff7'\n  Object.assign(context, options)\n  context.fillText(text, x, y)\n}\n\nconst drawCircle = (\n  context: CanvasRenderingContext2D,\n  [x, y]: Vector,\n  radius: number,\n  options: Options,\n) => {\n  Object.assign(context, options)\n  context.beginPath()\n  context.arc(x, y, radius, 0, 2 * Math.PI)\n  context.fill()\n}\n\nconst drawLine = (\n  context: CanvasRenderingContext2D,\n  start: Vector,\n  end: Vector,\n  options: Options,\n) => {\n  Object.assign(context, options)\n\n  context.beginPath()\n  context.moveTo(...start)\n  context.lineTo(...end)\n  context.stroke()\n}\n\nexport const drawGraph = (\n  context: CanvasRenderingContext2D,\n  graph: VisualizationGraph,\n) => {\n  graph.links.forEach(link => {\n    // we're counting a unit vector to make links that don't overlap nodes\n    // source point\n    const s = [link.source.x, link.source.y]\n    // target point\n    const t = [link.target.x, link.target.y]\n    // vector\n    const v = numeric.sub(t, s)\n    // vector size\n    const size = Math.sqrt(v[0] ** 2 + v[1] ** 2)\n    // unit vector\n    const i = numeric.div(v, size)\n    drawLine(\n      context,\n      // links don't overlap circles\n      numeric.add(s, numeric.mul(i, link.source.r)) as Vector,\n      numeric.sub(t, numeric.mul(i, link.target.r)) as Vector,\n      {\n        strokeStyle: 'white',\n        lineWidth: 0.5,\n      },\n    )\n  })\n\n  const color = {\n    accent: 'violet',\n    focus: 'red',\n    focus2: 'pink',\n    rest: {\n      node: '#fff8',\n      label: '#fff4',\n    },\n  }\n\n  const accented = graph.nodes.filter(({ style }) => style === 'accent')\n  const focused = graph.nodes.filter(({ style }) => style === 'focus')\n  const focused2 = graph.nodes.filter(({ style }) => style === 'focus2')\n  const rest = graph.nodes.filter(({ style }) => !style)\n\n  // draw all the nodes which are not special\n  rest.forEach(({ x, y, r }) =>\n    drawCircle(context, [x, y], r, { fillStyle: color.rest.node }),\n  )\n\n  rest.forEach(({ x, y, r, label }) =>\n    drawText(context, [x + r + 5, y], label, {\n      fillStyle: color.rest.label,\n    }),\n  )\n\n  // draw focused nodes\n  focused2.forEach(({ x, y, r }) =>\n    drawCircle(context, [x, y], r, { fillStyle: color.focus2 }),\n  )\n\n  focused2.forEach(({ x, y, r, label }) =>\n    drawText(context, [x + r + 5, y], label, { fillStyle: color.focus2 }),\n  )\n\n  // draw focused nodes\n  focused.forEach(({ x, y, r }) =>\n    drawCircle(context, [x, y], r, { fillStyle: color.focus }),\n  )\n\n  focused.forEach(({ x, y, r, label }) =>\n    drawText(context, [x + r + 5, y], label, { fillStyle: color.focus }),\n  )\n\n  // draw accented nodes\n  accented.forEach(({ x, y, r }) =>\n    drawCircle(context, [x, y], r, { fillStyle: color.accent }),\n  )\n\n  accented.forEach(({ x, y, r, label }) =>\n    drawText(context, [x + r + 5, y], label, {\n      fillStyle: color.accent,\n    }),\n  )\n}\n\nexport const drawGrid = (\n  context: CanvasRenderingContext2D,\n  grid: Grid,\n  width: number,\n  height: number,\n  offset: Vector = [0, 0],\n) => {\n  const strokeStyle = '#fff2'\n  const min1 = -offset[1]\n  const max1 = height - offset[1]\n  const min0 = -offset[0]\n  const max0 = width - offset[0]\n\n  const getLineWidth = (i: number) =>\n    i === 0 ? 2 : i % grid.highlight === 0 ? 1 : 0.5\n\n  let i = 0\n  while (i * grid.distance + grid.origin[0] <= max0) {\n    const x = i * grid.distance + grid.origin[0]\n    if (x >= min0) {\n      drawLine(context, [x, min1], [x, max1], {\n        strokeStyle,\n        lineWidth: getLineWidth(i),\n      })\n    }\n    i++\n  }\n\n  i = -1\n  while (i * grid.distance + grid.origin[0] >= min0) {\n    const x = i * grid.distance + grid.origin[0]\n    if (x <= max0) {\n      drawLine(context, [x, min1], [x, max1], {\n        strokeStyle,\n        lineWidth: getLineWidth(i),\n      })\n    }\n    i--\n  }\n\n  i = 0\n  while (i * grid.distance + grid.origin[1] <= max1) {\n    const y = i * grid.distance + grid.origin[1]\n    if (y >= min1) {\n      drawLine(context, [min0, y], [max0, y], {\n        strokeStyle,\n        lineWidth: getLineWidth(i),\n      })\n    }\n    i++\n  }\n\n  i = -1\n  while (i * grid.distance + grid.origin[1] >= min1) {\n    const y = i * grid.distance + grid.origin[1]\n    if (y <= max1) {\n      drawLine(context, [min0, y], [max0, y], {\n        strokeStyle,\n        lineWidth: getLineWidth(i),\n      })\n    }\n    i--\n  }\n}\n","import {\n  forceSimulation,\n  forceCollide,\n  forceLink,\n  forceManyBody,\n  forceCenter,\n  forceX,\n  forceY,\n  ForceLink,\n} from 'd3-force'\nimport { Dictionary } from '../../../../types'\nimport forceGravity from './gravity'\nimport {\n  Coords,\n  SimulationNode,\n  SimulationLink,\n  Node,\n  SimulationNodeExt,\n  SimulationLinkExt,\n} from './types'\n\nexport default class Simulation {\n  nodes: SimulationNodeExt[] = []\n  links: SimulationLinkExt[] = []\n\n  runs = false\n\n  simulation = forceSimulation()\n    .alphaDecay(0.005)\n    .force(\n      'link',\n      forceLink()\n        .id(node => (node as SimulationNodeExt).uri)\n        .distance(50)\n        .strength(0.1),\n    )\n    .force('linkGravity', forceGravity().strength(50))\n    .force('charge', forceManyBody().strength(-150).distanceMax(500))\n    .force('gravityX', forceX(0).strength(0.01))\n    .force('gravityY', forceY(0).strength(0.01))\n    .force(\n      'collide',\n      forceCollide(({ r }: SimulationNodeExt) => r + 5),\n    )\n    .force('center', forceCenter(0, 0))\n    .stop()\n\n  start = ({\n    nodes,\n    links,\n    onTick,\n  }: {\n    nodes: SimulationNode[]\n    links: SimulationLink[]\n    onTick: (simulation: {\n      nodes: SimulationNode[]\n      links: SimulationLinkExt[]\n    }) => void\n  }) => {\n    this.nodes = nodes as SimulationNodeExt[]\n    this.links = links.map(link => ({ ...link })) as SimulationLinkExt[]\n\n    this.simulation.nodes(this.nodes)\n    ;(\n      this.simulation.force('link') as ForceLink<\n        SimulationNodeExt,\n        SimulationLinkExt\n      >\n    ).links(this.links)\n    ;(\n      this.simulation.force('linkGravity') as ForceLink<\n        SimulationNodeExt,\n        SimulationLinkExt\n      >\n    ).links(this.links)\n\n    this.simulation.on('tick', () => {\n      onTick({\n        nodes: this.nodes as SimulationNode[],\n        links: this.links,\n      })\n    })\n\n    this.simulation.restart()\n    this.runs = true\n  }\n\n  stop = () => {\n    this.runs = false\n    return this.simulation.stop()\n  }\n\n  update = ({ nodes, links }: { nodes: Node[]; links: SimulationLink[] }) => {\n    this.simulation.stop()\n    // combine current nodes and the old nodes\n    const thisNodeDict: Dictionary<SimulationNodeExt> = Object.fromEntries(\n      this.nodes.map(node => [node.uri, node]),\n    )\n    const updatedNodes: SimulationNodeExt[] = nodes.map(node => ({\n      ...node,\n      x: (0.5 - Math.random()) * 800,\n      y: (0.5 - Math.random()) * 800,\n      ...thisNodeDict[node.uri],\n      r: node.r,\n    }))\n    this.nodes = updatedNodes\n    this.links = links.map(link => ({ ...link })) as SimulationLinkExt[]\n\n    this.simulation.nodes(this.nodes)\n    ;(\n      this.simulation.force('link') as ForceLink<\n        SimulationNodeExt,\n        SimulationLinkExt\n      >\n    ).links(this.links)\n    ;(\n      this.simulation.force('linkGravity') as ForceLink<\n        SimulationNodeExt,\n        SimulationLinkExt\n      >\n    ).links(this.links)\n\n    this.simulation.alpha(1).restart()\n  }\n\n  selectNode = ({ x, y }: Coords) =>\n    this.simulation.find(x, y, 40) as SimulationNodeExt\n}\n","import { SimulationLinkExt } from './types'\n\nexport default function gravity() {\n  let links: SimulationLinkExt[] = []\n  let strength = 3\n  function force(alpha: number) {\n    const k = strength * alpha\n    links.forEach(function (d) {\n      //// this works\n      // d.source.y = Math.max(d.target.y + 50, d.source.y);\n      //// this is original\n      // d.source.vy += k;\n      // d.target.vy -= k;\n      //\n      //// this works with velocities, so the graph looks less layered\n      const { source, target } = d\n      if (typeof source === 'object' && typeof target === 'object') {\n        if (\n          source.y &&\n          target.y &&\n          source.vy &&\n          target.vy &&\n          source.y < target.y + 50\n        ) {\n          const optimumDifference = (target.y + 50 - source.y) / 50\n          source.vy += k * optimumDifference\n          target.vy -= k * optimumDifference\n        }\n      }\n    })\n  }\n\n  force.links = (_: SimulationLinkExt[]) => {\n    links = _\n    return force\n  }\n\n  force.strength = (_: number) => {\n    strength = _\n    return force\n  }\n\n  return force\n}\n","/*\n * based on the following example\n * https://github.com/rexxars/react-markdown/issues/10#issuecomment-347763068\n */\n\nimport React from 'react'\nimport 'katex/dist/katex.min.css'\nimport ReactMarkdown from 'react-markdown'\nimport remarkMath from 'remark-math'\nimport styled from 'styled-components'\nimport rehypeKatex from 'rehype-katex'\n\nconst Styler = styled.div`\n  img {\n    max-width: 100%;\n  }\n`\n\nexport default function Math({ children }: { children: string }) {\n  const props = {\n    children,\n    remarkPlugins: [remarkMath],\n    rehypePlugins: [rehypeKatex],\n  }\n  return (\n    <Styler>\n      <ReactMarkdown {...props} />\n    </Styler>\n  )\n}\n","import React from 'react'\nimport { highlight, select, selectSelectedNode } from './mathSlice'\nimport Math from './Math'\nimport { useAppDispatch, useAppSelector } from '../../app/hooks'\nimport { GraphNode } from './types'\n\ninterface NodeListProps {\n  title: string\n  nodes: GraphNode[]\n}\n\nconst NodeList: React.FC<NodeListProps> = ({ title, nodes }: NodeListProps) => {\n  const dispatch = useAppDispatch()\n  return (\n    <>\n      <header className=\"card-header\">\n        <p className=\"card-header-title\">\n          {title}: {nodes.length}\n        </p>\n      </header>\n      <section className=\"card-content\">\n        <ul className=\"buttons are-small\">\n          {nodes.map(node => (\n            <li\n              onClick={() => dispatch(select(node.uri))}\n              onMouseEnter={() => dispatch(highlight(node.uri))}\n              onMouseLeave={() => dispatch(highlight(''))}\n              key={node.uri}\n              className=\"button is-link is-inverted\"\n            >\n              {node.label.en}\n            </li>\n          ))}\n        </ul>\n      </section>\n    </>\n  )\n}\n\nconst Statement = () => {\n  const dispatch = useAppDispatch()\n  const onSelectNode = (uri: string) => dispatch(select(uri))\n  const node = useAppSelector(selectSelectedNode)\n\n  const dependencies: GraphNode[] = Object.values(node.dependencies)\n  const dependents: GraphNode[] = Object.values(node.dependents)\n\n  return (\n    <div className=\"card\">\n      <header className=\"card-header\">\n        <p className=\"card-header-title\">\n          <a href={node.uri}>{node.label.en}</a>\n        </p>\n        <span className=\"card-header-icon\">\n          <button\n            className=\"delete\"\n            aria-label=\"close\"\n            onClick={() => onSelectNode('')}\n          >\n            close\n          </button>\n        </span>\n      </header>\n      <section className=\"card-content\">\n        <Math>{node.description.en}</Math>\n      </section>\n      <NodeList title=\"dependencies\" nodes={dependencies} />\n      <NodeList title=\"dependents\" nodes={dependents} />\n    </div>\n  )\n}\n\nexport default Statement\n","import { createSelector, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { RootState } from '../../app/store'\nimport { selectGraph } from '../math/mathSlice'\nimport { Graph } from '../math/types'\n\ninterface SearchState {\n  query: string\n}\n\nconst initialState: SearchState = {\n  query: '',\n}\n\nexport const searchSlice = createSlice({\n  name: 'search',\n  initialState,\n  reducers: {\n    setSearch: (state, action: PayloadAction<string>) => {\n      state.query = action.payload\n    },\n  },\n})\n\nexport const { setSearch } = searchSlice.actions\n\n// Selectors\nexport const selectSearch = (state: RootState) => state.search.query\n\nexport const selectSearchResults = createSelector(\n  selectSearch,\n  selectGraph,\n  (query: string, graph: Graph): { label: string; value: string }[] => {\n    if (query.length < 2) return []\n    return Object.values(graph)\n      .filter(\n        ({ label }) => label.en.toLowerCase().includes(query.toLowerCase()),\n        //*|| uri.toLowerCase().includes(query.toLowerCase()),\n      )\n      .sort(\n        ({ dependents: a }, { dependents: b }) =>\n          Object.values(b).length - Object.values(a).length,\n      )\n      .map(({ uri, label: { en: label } }) => ({ value: uri, label }))\n      .slice(0, 10)\n  },\n)\n\nexport default searchSlice.reducer\n","import React from 'react'\nimport { useAppDispatch, useAppSelector } from '../../app/hooks'\nimport { highlight, select } from '../math/mathSlice'\nimport { selectSearch, selectSearchResults, setSearch } from './searchSlice'\n\nconst Search: React.FC = ({ ...props }) => {\n  const value = useAppSelector(selectSearch)\n  const options = useAppSelector(selectSearchResults)\n  const dispatch = useAppDispatch()\n\n  return (\n    <div {...props} className=\"box p-0\">\n      <input\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search\"\n        value={value}\n        onChange={e => dispatch(setSearch(e.target.value))}\n      />\n      <div className=\"menu\">\n        <ul className=\"menu-list\">\n          {options.map(({ value, label }) => (\n            <li\n              key={value}\n              title={value}\n              onMouseEnter={() => dispatch(highlight(value))}\n              onMouseLeave={() => dispatch(highlight(''))}\n            >\n              <a\n                onClick={() => {\n                  dispatch(select(value))\n                  dispatch(setSearch(''))\n                }}\n              >\n                {label}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  )\n}\n\nexport default Search\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst ICOutside = styled.div`\n  position: fixed;\n  width: 100%;\n  top: 0;\n  bottom: 0;\n  pointer-events: none;\n  overflow-x: hidden;\n  overflow-y: auto;\n`\nconst ICInside = styled.div`\n  pointer-events: all;\n  overflow-x: auto;\n  width: 100%;\n`\n\nconst InfoContainer = ({ children }: { children: React.ReactNode }) => (\n  <ICOutside>\n    <div className=\"columns mr-1 mt-6\">\n      <div className=\"column is-one-quarter is-offset-three-quarters\">\n        <ICInside>{children}</ICInside>\n      </div>\n    </div>\n  </ICOutside>\n)\n\nexport default InfoContainer\n","import { Grid, Matrix, Vector } from '../types'\nimport { VisualizationGraph } from '../types'\nimport { GraphNode } from '../../types'\nimport { SimulationGraph } from '../simulation/types'\nimport numeric from 'numeric'\n\nexport const transform = (matrix: Matrix, vector: Vector): Vector => {\n  const raw = numeric.dot(matrix, numeric.transpose([[...vector, 1]])) as Matrix\n  const [[x], [y]] = raw\n  return [x, y]\n}\n\nexport const nodeRadius = (node: GraphNode): number => {\n  let count = Object.entries(node.dependents).length ?? 0\n  count = count < 1 ? 1 : count\n  return count ** 0.42 * 5\n}\n\nexport const basicGrid: Grid = {\n  origin: [0, 0],\n  distance: 20,\n  highlight: 5,\n}\n\nexport const transformGrid = (matrix: Matrix, grid: Grid): Grid => {\n  let distance = grid.distance * matrix[0][0]\n  while (distance < 20) {\n    distance *= 5\n  }\n  return {\n    origin: transform(matrix, grid.origin),\n    distance,\n    highlight: grid.highlight,\n  }\n}\n\nexport const transformLayout = (\n  matrix: Matrix,\n  graph: SimulationGraph,\n  highlighted: string,\n  selected: string,\n  selectedDependencies: string[],\n): VisualizationGraph => {\n  const transformedNodesDict = Object.fromEntries(\n    graph.nodes.map(node => {\n      const [x, y] = transform(matrix, [node.x, node.y])\n      const r = matrix[0][0] * node.r\n      return [node.uri, { ...node, x, y, r, style: '' }]\n    }),\n  )\n\n  selectedDependencies.forEach(\n    uri => (transformedNodesDict[uri].style = 'focus2'),\n  )\n\n  if (highlighted) {\n    transformedNodesDict[highlighted].style = 'accent'\n  }\n\n  if (selected) {\n    transformedNodesDict[selected].style = 'focus'\n  }\n\n  const links = graph.links.map(link => {\n    const sourceUri =\n      typeof link.source === 'string'\n        ? link.source\n        : typeof link.source === 'number'\n        ? graph.nodes[link.source].uri\n        : link.source.uri\n    const targetUri =\n      typeof link.target === 'string'\n        ? link.target\n        : typeof link.target === 'number'\n        ? graph.nodes[link.target].uri\n        : link.target.uri\n    const source = transformedNodesDict[sourceUri]\n    const target = transformedNodesDict[targetUri]\n    return { source, target }\n  })\n\n  return { nodes: Object.values(transformedNodesDict), links }\n}\n","import React, { useEffect, useState } from 'react'\nimport Visualization from './Visualization'\nimport {\n  highlight,\n  select,\n  selectHighlighted,\n  selectSelected,\n  selectSelectedNodeDependencies,\n} from '../mathSlice'\nimport Simulation from './simulation'\nimport { SimulationGraph, SimulationLink } from './simulation/types'\nimport { Matrix, Vector } from './types'\nimport numeric from 'numeric'\nimport Statement from '../Statement'\nimport Search from '../../search/Search'\nimport { useAppDispatch, useAppSelector } from '../../../app/hooks'\nimport { selectPrunedGraph } from '../mathSlice'\nimport InfoContainer from '../InfoContainer'\nimport {\n  basicGrid,\n  nodeRadius,\n  transform,\n  transformGrid,\n  transformLayout,\n} from './helpers/transform'\n\nconst VisualizationContainer: React.FC = props => {\n  const prunedGraph = useAppSelector(selectPrunedGraph)\n  const highlightedNode = useAppSelector(selectHighlighted)\n  const selectedNode = useAppSelector(selectSelected)\n  const selectedNodeDependencies = useAppSelector(\n    selectSelectedNodeDependencies,\n  )\n  const dispatch = useAppDispatch()\n\n  const [simulation] = useState(new Simulation())\n  const [layout, setLayout] = useState<SimulationGraph>({\n    nodes: [],\n    links: [],\n  })\n  // transformation matrix\n  const [matrix, setMatrix] = useState<Matrix>([\n    [1, 0, 0],\n    [0, 1, 0],\n    [0, 0, 1],\n  ])\n\n  // initialize simulation\n  useEffect(() => {\n    let lastUpdate = Date.now() - 20\n    simulation.start({\n      nodes: [],\n      links: [],\n      onTick: ({ nodes, links }) => {\n        const now = Date.now()\n        if (now > lastUpdate + 20) {\n          setLayout({ nodes: [...nodes], links: [...links] })\n          lastUpdate = now\n        }\n      },\n    })\n    return () => {\n      simulation.stop()\n    }\n  }, [simulation])\n\n  // when graph changes, update simulation\n  useEffect(() => {\n    const nodes = Object.values(prunedGraph).map(node => ({\n      label: node.label.en,\n      x: Math.random() * 400,\n      y: Math.random() * 400,\n      r: nodeRadius(node),\n      uri: node.uri,\n    }))\n\n    const links: SimulationLink[] = Object.values(prunedGraph).reduce(\n      (links, { uri: source, dependencies }) => {\n        Object.keys(dependencies).forEach(target =>\n          links.push({ source, target }),\n        )\n        return links\n      },\n      [] as SimulationLink[],\n    )\n\n    simulation.update({ nodes, links })\n  }, [prunedGraph, simulation])\n\n  const handleTransform = (matrix: Matrix): void => {\n    setMatrix(prevMatrix => numeric.dot(matrix, prevMatrix) as Matrix)\n  }\n\n  const withNode = (action: (uri: string) => unknown) => {\n    return (position: Vector): void => {\n      // first transform to local coordinates\n      const [x, y] = transform(numeric.inv(matrix), position)\n      // then find the node in simulation\n      action(simulation.selectNode({ x, y })?.uri)\n    }\n  }\n\n  const handleHover = withNode(uri => dispatch(highlight(uri)))\n  const handleSelect = withNode(uri => dispatch(select(uri)))\n\n  // transform layout to TransformedLayout\n  const transformedLayout = transformLayout(\n    matrix,\n    layout,\n    highlightedNode,\n    selectedNode,\n    selectedNodeDependencies,\n  )\n\n  const grid = transformGrid(matrix, basicGrid)\n\n  return (\n    <>\n      <Visualization\n        graph={transformedLayout}\n        grid={grid}\n        onTransform={handleTransform}\n        onHover={handleHover}\n        onSelectNode={handleSelect}\n        {...props}\n      />\n\n      {\n        // @TODO maybe move this stuff out, it's more of a Layout component\n      }\n      <InfoContainer>{selectedNode ? <Statement /> : <Search />}</InfoContainer>\n    </>\n  )\n}\n\nexport default VisualizationContainer\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Link = styled.a`\n  color: lightgray;\n  &:hover {\n    color: white;\n  }\n`\nconst Footer = styled.footer`\n  color: gray;\n`\n\nconst About: React.FC = props => (\n  <div {...props}>\n    <Footer>\n      powered by <Link href=\"https://solidproject.org\">Solid</Link> &middot;{' '}\n      <Link href=\"https://github.com/livegraph-org/solid-math\">source</Link>\n    </Footer>\n  </div>\n)\n\nexport default About\n","import React from 'react'\nimport Login from '../features/login/Login'\nimport VisualizationContainer from '../features/math/visualization/VisualizationContainer'\nimport styled from 'styled-components'\nimport About from './About'\n\nconst PositionedLogin = styled(Login)`\n  position: fixed;\n  top: 1rem;\n  right: 1rem;\n  display: block;\n`\n\nconst PositionedAbout = styled(About)`\n  position: fixed;\n  bottom: 1rem;\n  right: 1rem;\n`\n\nconst FullSizeVisualization = styled(VisualizationContainer)`\n  height: 100vh;\n  width: 100vw;\n  display: block;\n`\n\nconst Layout: React.FC = () => {\n  return (\n    <>\n      <PositionedLogin />\n\n      <PositionedAbout />\n\n      <FullSizeVisualization />\n    </>\n  )\n}\n\nexport default Layout\n","import React, { useEffect } from 'react'\nimport Layout from './components/Layout'\nimport { init as initLogin } from './features/login/loginSlice'\nimport { useAppDispatch } from './app/hooks'\n\nconst App: React.FC = () => {\n  const dispatch = useAppDispatch()\n  useEffect(() => {\n    dispatch(initLogin())\n  }, [dispatch])\n\n  return <Layout />\n}\n\nexport default App\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit'\nimport loginReducer from '../features/login/loginSlice'\nimport mathReducer from '../features/math/mathSlice'\nimport searchReducer from '../features/search/searchSlice'\n\nexport const store = configureStore({\n  reducer: {\n    login: loginReducer,\n    math: mathReducer,\n    search: searchReducer,\n  },\n})\n\nexport type AppDispatch = typeof store.dispatch\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport App from './App'\nimport { store } from './app/store'\nimport reportWebVitals from './reportWebVitals'\nimport { Provider } from 'react-redux'\nimport Modal from 'react-modal'\n\nif (typeof document === 'object') {\n  const appElement = document.querySelector('#root') as HTMLElement\n\n  Modal.setAppElement(appElement)\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}