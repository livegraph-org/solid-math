{"version":3,"sources":["components/AppButton.tsx","components/withModal.tsx","features/login/LoginPrompt.tsx","app/hooks.ts","features/info/infoSlice.ts","features/math/algorithms.ts","features/document/documentSlice.ts","features/math/mathAPI.ts","features/math/mathSlice.ts","features/document/documentAPI.ts","features/login/loginAPI.ts","features/login/loginSlice.ts","components/withMenu.tsx","features/login/Login.tsx","features/math/visualization/helpers/transform.ts","features/math/visualization/useFullSize.ts","features/math/visualization/simulation/index.ts","features/math/visualization/simulation/gravity.ts","features/math/visualization/useSimulation.ts","features/math/visualization/helpers/draw.ts","features/math/visualization/useVisualization.ts","features/math/visualization/VisualizationContainer.tsx","components/About.tsx","features/control/AddButtonWithMenu.tsx","features/document/AddDocument.tsx","features/document/DocumentList.tsx","features/control/DocumentControl.tsx","features/control/ControlPanel.tsx","features/search/searchSlice.ts","features/search/Search.tsx","features/info/Info.tsx","features/math/Math.tsx","features/math/statement/NodeDescription.tsx","features/math/statement/NodeLabel.tsx","features/math/statement/NodeList.tsx","features/math/statement/NodeType.tsx","features/math/statement/StatementEdit.tsx","features/math/statement/StatementView.tsx","features/math/statement/Statement.tsx","features/math/InfoContainer.tsx","components/Layout.tsx","App.tsx","app/store.ts","reportWebVitals.ts","index.tsx"],"names":["AppButton","styled","children","className","props","classNames","getDisplayName","WrappedComponent","displayName","name","withModal","Button","Content","title","HOC","buttonProps","contentProps","dynamicTitle","rest","useState","promptOpen","setPromptOpen","finalTitle","onClick","e","preventDefault","isOpen","onRequestClose","contentLabel","overlayClassName","base","afterOpen","beforeClose","closeTimeoutMS","onFinish","LoginPrompt","onLogin","localStorage","getItem","idp","setIdp","onSubmit","setItem","id","type","value","onChange","newValue","currentTarget","placeholder","useAppDispatch","useDispatch","useAppSelector","useSelector","initialState","message","setTemporaryInfo","info","dispatch","getState","a","setInfo","Promise","resolve","setTimeout","currentInfo","selectInfo","clearInfo","infoSlice","createSlice","reducers","state","action","payload","actions","access","prune","input","graph","graphlib","Graph","Object","values","forEach","node","setNode","uri","dependencies","dependency","setEdge","output","fromEntries","entries","map","dependents","prunedEdges","alg","isAcyclic","Error","edges","edge","removeEdge","dijkstra","v","w","distance","Infinity","pruneCore","source","target","getCycles","indexes","keys","sort","adjacencyList","Array","length","fill","i","id2","findIndex","graph2adjacency","loops","filter","includes","findLoops","otherCycles","findCircuits","cycle","slice","cycle2edges","removeEdges","b","addEdges","term","definition","statement","dependsOn","fetchGraph","documentUri","getSolidDataset","fetch","dataset","things","getThingAll","nodes","links","thing","thingToNode","push","getTermAll","updateNode","document","getThing","newThing","label","setStringWithLocale","rdfs","en","setUrl","rdf","description","removeAll","depUri","addUrl","newDataset","setThing","saveSolidDatasetAt","createNode","getUnusedUri","newThingBuilder","buildThing","url","build","initialUri","toLowerCase","trim","replace","label2uri","getUri","deleteNode","thingsWithoutDependency","getUrl","removeUrl","removeThing","asUrl","getTerm","getUrlAll","examples","created","updated","proofs","addGraph","createAsyncThunk","api","mathSlice","entities","byId","allIds","ui","highlighted","selected","create","highlight","select","createMath","extraReducers","builder","addCase","fulfilled","dependent","duri","newDependencies","u","addMatcher","isAnyOf","oldDependencies","original","deletedDependencies","d","selectGraph","createSelector","math","nodeDict","documentDict","enrichedNodes","enrichedNode","selectPrunedGraphAndCycles","cloneDeep","cycles","flat","c","dag","prunedDag","pruneWithCycles","selectHighlighted","selectSelected","selectCreateMath","selectSelectedNodeDependencies","selectSelectedNode","findMathDocumentsOfPerson","webId","documentUris","getTypeIndexes","publicTypeIndex","public","index","mathDocuments","solid","forClass","instance","all","rights","getEffectiveAccess","accesses","createMathDocument","isPublic","createSolidDataset","mathDocument","typeIndexes","typeIndex","private","indexThing","createThing","thingUrl","Date","now","dct","references","file","TypeRegistration","updatedDataset","me","response","privateTypeIndex","addDocuments","documents","doc","createDocument","selectWebId","newDocument","documentSlice","selectDocument","selectDocuments","selectWriteAppendDocuments","some","user","selectSelectedDocument","init","handleIncomingRedirect","window","location","href","restorePreviousSession","sessionInfo","login","oidcIssuer","solidLogin","redirectUrl","clientName","alert","removeItem","logout","solidLogout","_","isLoggedIn","loginSlice","status","pending","selectSession","selectIsLoggedIn","selectNaiveStorage","exec","groups","storage","selectLoginStatus","withMenu","Menu","menuProps","open","setOpen","style","position","flexDirection","display","alignItems","zIndex","onMouseLeave","onBlur","event","contains","relatedTarget","onMouseEnter","onFocus","width","height","visibility","right","overflow","onClickClose","UserWithMenu","onLogout","Login","disabled","transform","matrix","vector","raw","numeric","dot","transpose","nodeRadius","count","basicGrid","origin","useFullSize","elementRef","setSize","updateSize","useCallback","size","current","clientHeight","clientWidth","getElementSize","useEffect","addEventListener","removeEventListener","Simulation","runs","simulation","forceSimulation","alphaDecay","force","forceLink","strength","alpha","k","y","vy","optimumDifference","forceGravity","forceManyBody","distanceMax","forceX","forceY","forceCollide","r","forceCenter","stop","start","onTick","link","on","restart","update","thisNodeDict","updatedNodes","x","Math","random","selectNode","find","useSimulation","layout","setLayout","lastUpdate","reduce","drawText","context","text","options","font","textBaseline","textAlign","assign","fillText","drawCircle","radius","beginPath","arc","PI","drawLine","end","moveTo","lineTo","stroke","useVisualization","grid","onTransform","canvasRef","getContext","save","clearRect","strokeStyle","max1","max0","getLineWidth","lineWidth","drawGrid","s","t","sub","sqrt","div","add","mul","color","accented","focused","focused2","fillStyle","drawGraph","restore","call","zoom","clickDistance","scaleExtent","func","rect","getBoundingClientRect","clientX","left","clientY","top","VisualizationContainer","prunedGraph","highlightedNode","selectedNode","selectedNodeDependencies","canvasEl","useRef","setMatrix","transformedMatrix","handleTransform","withNode","inv","handleHover","handleSelect","transformedLayout","selectedDependencies","transformedNodesDict","errorEdges","sourceUri","targetUri","transformLayout","transformGrid","withCanvasPosition","handleMouseMove","handleClick","ref","onMouseMove","onMouseOut","classnames","Link","Footer","footer","About","AddDocumentButton","setIsPublic","filename","setFilename","AddButtonWithMenu","onAddMath","getSingleAccessString","read","write","append","getAccessString","DocumentList","selectedDocument","DocumentControl","ControlPanel","searchSlice","query","queryAutocomplete","setSearch","setAutocomplete","selectSearch","search","selectSearchResults","selectAutocompleteResults","Search","clear","handleEsc","key","autoFocus","Info","onClose","notiStyle","InfoContainer","Styler","remarkPlugins","remarkMath","rehypePlugins","rehypeKatex","NodeDescription","NodeDescriptionEdit","NodeLabelEdit","NodeLabel","NodeList","NodeListEdit","onAddNode","onRemoveNode","tags","suggestionsRaw","suggestions","onInput","onAddition","tag","fullTag","onDelete","placeholderText","removeButtonText","root","rootFocused","selectedTag","selectedTagName","searchInput","suggestionActive","suggestionDisabled","allowBackspace","tagComponent","TagComponent","NodeTypeEdit","NodeType","removeCommonPart","ba","split","ia","join","StatementEdit","isNew","availableDocuments","setType","setLabel","setDescription","setDependencies","isValid","setInitial","handleSave","handleCancel","hidden","deps","n","DeleteButtonWithModal","code","URL","hash","String","setValue","isDisabled","maxLength","StatementView","onEdit","console","log","isEditable","Statement","edit","setEdit","createNew","ICOutside","ICInside","PositionedAbout","PositionedInfo","FullSizeVisualization","TopNav","nav","PositionedStatement","Layout","App","initLogin","store","configureStore","reducer","loginReducer","mathReducer","searchReducer","documentReducer","infoReducer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","appElement","querySelector","Modal","setAppElement","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ee0f27e5.chunk.js","sourcesContent":["/** These are the main buttons of the application */\n\nimport React from 'react'\nimport styled from 'styled-components'\nimport classNames from 'classnames'\n\ntype ButtonProps = React.ButtonHTMLAttributes<HTMLButtonElement>\n\nconst Button: React.FC<ButtonProps> = ({\n  children,\n  className,\n  ...props\n}: ButtonProps) => {\n  return (\n    <button className={classNames(className, 'button')} {...props}>\n      {children}\n    </button>\n  )\n}\n\nconst AppButton = styled(Button)`\n  &:not(:hover) {\n    background-color: #0000;\n    border-color: #0000;\n    color: #fff;\n  }\n  &:hover {\n  }\n  &:active {\n    background-color: #eee;\n  }\n`\n\nexport default AppButton\n","import classNames from 'classnames'\nimport React from 'react'\nimport { useState } from 'react'\nimport Modal from 'react-modal'\n\n// TODO maybe we don't need to use react-modal,\n// maybe bulma modal will be sufficient\n\ntype WithModalHOC = <ButtonProps, ContentProps>(\n  Button: React.FC<ButtonProps>,\n  Content: React.FC<ContentProps>,\n  title?: string,\n) => React.FC<\n  React.HTMLAttributes<HTMLDivElement> & {\n    buttonProps?: ButtonProps\n    contentProps?: ContentProps\n    title?: string\n  }\n>\n\nconst withModal: WithModalHOC = <\n  ButtonProps extends React.HTMLAttributes<HTMLElement>,\n  ContentProps extends React.HTMLAttributes<HTMLElement>,\n>(\n  Button: React.FC<ButtonProps>,\n  Content: React.FC<ContentProps>,\n  title = '',\n) => {\n  const HOC = ({\n    buttonProps = {} as ButtonProps,\n    contentProps = {} as ContentProps,\n    title: dynamicTitle = '',\n    ...rest\n  }: {\n    buttonProps?: ButtonProps\n    contentProps?: ContentProps\n    title?: string\n  } & React.HTMLAttributes<HTMLElement>) => {\n    const [promptOpen, setPromptOpen] = useState(false)\n\n    const finalTitle = dynamicTitle || title || ''\n\n    return (\n      <>\n        <Button\n          {...buttonProps}\n          {...rest}\n          className={classNames(buttonProps?.className, rest?.className)}\n          onClick={e => {\n            e.preventDefault()\n            setPromptOpen(true)\n            if (buttonProps.onClick) buttonProps.onClick(e)\n          }}\n        />\n\n        {promptOpen && (\n          <Modal\n            isOpen={promptOpen}\n            onRequestClose={() => setPromptOpen(false)}\n            contentLabel={finalTitle}\n            overlayClassName={{\n              base: 'modal modal-background is-active',\n              afterOpen: '',\n              beforeClose: '',\n            }}\n            className={{\n              base: 'modal-content',\n              afterOpen: '',\n              beforeClose: '',\n            }}\n            closeTimeoutMS={50}\n          >\n            <button\n              className=\"modal-close\"\n              onClick={() => setPromptOpen(false)}\n            >\n              close\n            </button>\n\n            <div className=\"card\">\n              <header className=\"card-header\">\n                <p className=\"card-header-title\">{finalTitle}</p>\n              </header>\n              <div className=\"card-content\">\n                <Content\n                  {...contentProps}\n                  onFinish={() => setPromptOpen(false)}\n                />\n              </div>\n            </div>\n          </Modal>\n        )}\n      </>\n    )\n  }\n\n  HOC.displayName = `WithModal(${getDisplayName(Button)})`\n  return HOC\n}\n\nfunction getDisplayName<T>(WrappedComponent: React.FC<T>) {\n  return WrappedComponent.displayName || WrappedComponent.name || 'Component'\n}\n\nexport default withModal\n","import React, { useState } from 'react'\nimport AppButton from '../../components/AppButton'\nimport withModal from '../../components/withModal'\n\ninterface LoginFormProps {\n  onLogin: (oidcIssuer: string) => void\n}\n\nconst LoginButton = ({ ...props }) => <AppButton {...props}>Login</AppButton>\n\nconst LoginForm = ({ onLogin }: LoginFormProps) => {\n  const [idp, setIdp] = useState(\n    localStorage.getItem('idp') ?? 'https://solidcommunity.net',\n  )\n\n  const onSubmit: React.FormEventHandler = e => {\n    e.preventDefault()\n    localStorage.setItem('idp', idp)\n    onLogin(idp)\n  }\n\n  const onChangeInput = (e: React.FormEvent<HTMLInputElement>) => {\n    e.preventDefault()\n    const newValue = e.currentTarget.value\n    setIdp(newValue)\n  }\n  return (\n    <form onSubmit={onSubmit}>\n      <div className=\"field\">\n        <div className=\"control\">\n          <input\n            id=\"idp\"\n            className=\"input\"\n            type=\"url\"\n            value={idp}\n            onChange={onChangeInput}\n            placeholder=\"Where is your Solid Pod?\"\n          />\n        </div>\n      </div>\n      <div className=\"field\">\n        <div className=\"control\">\n          <input type=\"submit\" value=\"Connect\" className=\"button is-link\" />\n        </div>\n      </div>\n    </form>\n  )\n}\n\nconst LoginPrompt = withModal(\n  LoginButton,\n  LoginForm,\n  'Select your Solid identity provider',\n)\n\nexport default LoginPrompt\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport type { RootState, AppDispatch } from './store'\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { AppThunk, RootState } from '../../app/store'\n\nexport interface InfoState {\n  message: string\n  type: 'success' | 'error' | 'info'\n}\n\nconst initialState: InfoState = {\n  message: '',\n  type: 'info',\n}\n\nexport const setTemporaryInfo =\n  (info: InfoState): AppThunk =>\n  async (dispatch, getState) => {\n    dispatch(setInfo(info))\n    await new Promise(resolve => {\n      setTimeout(resolve, 5000)\n    })\n    const currentInfo = selectInfo(getState())\n    if (\n      currentInfo.message === info.message &&\n      currentInfo.type === info.type\n    ) {\n      dispatch(clearInfo())\n    }\n  }\n\nexport const infoSlice = createSlice({\n  name: 'info',\n  initialState,\n  reducers: {\n    setInfo: (state, action: PayloadAction<InfoState>) => {\n      return action.payload\n    },\n    clearInfo: () => {\n      return initialState\n    },\n  },\n})\n\nexport const { setInfo, clearInfo } = infoSlice.actions\n\nexport const selectInfo = (state: RootState): InfoState => state.info\n\nexport default infoSlice.reducer\n","import graphlib from 'graphlib'\nimport findCircuits from 'elementary-circuits-directed-graph'\nimport { Graph } from './types'\nimport cloneDeep from 'lodash.clonedeep'\n\nfunction pruneCore(graph: graphlib.Graph) {\n  if (!graphlib.alg.isAcyclic(graph)) {\n    throw new Error('pruning is possible on DAG only')\n  }\n  const edges = graph.edges()\n  edges.forEach(edge => {\n    // remove edge\n    graph.removeEdge(edge)\n    // see if another path exists\n    const paths = graphlib.alg.dijkstra(graph, edge.v)\n    // if the other path doesn't exist, add the node back\n    if (paths[edge.w].distance === Infinity) {\n      graph.setEdge(edge)\n    }\n  })\n  return graph\n}\n\nexport const prune = (input: Graph): Graph => {\n  const graph = new graphlib.Graph()\n\n  Object.values(input).forEach(node => {\n    graph.setNode(node.uri)\n\n    Object.values(node.dependencies).forEach(dependency =>\n      graph.setEdge(node.uri, dependency.uri),\n    )\n  })\n\n  const output: Graph = Object.fromEntries(\n    Object.entries(input).map(([uri, node]) => [\n      uri,\n      { ...node, dependencies: {}, dependents: {} },\n    ]),\n  )\n\n  const prunedEdges = pruneCore(graph)\n    .edges()\n    .map(({ v: source, w: target }) => ({ source, target }))\n\n  prunedEdges.forEach(({ source, target }) => {\n    output[source].dependencies[target] = output[target]\n    output[target].dependents[source] = output[source]\n  })\n\n  return output\n}\n\n// convert Graph to adjacency list, so we can feed it into the library\n// elementary-circuits-directed-graph\nconst graph2adjacency = (graph: Graph): [AdjacencyList, string[]] => {\n  const indexes = Object.keys(graph).sort()\n\n  const adjacencyList = Array(indexes.length)\n    .fill(null)\n    .map(() => [] as number[])\n\n  indexes.forEach((id, i) => {\n    adjacencyList[i] = Object.keys(graph[id].dependencies).map(id2 =>\n      indexes.findIndex(a => a === id2),\n    )\n  })\n\n  return [adjacencyList, indexes]\n}\n\ntype AdjacencyList = number[][]\ntype Cycle = number[]\ntype UriCycle = string[]\n\nconst findLoops = (adjacencyList: AdjacencyList): Cycle[] => {\n  return (\n    adjacencyList\n      // save the index along with value\n      .map((a, i) => [a, i] as [number[], number])\n      // filter every adjacencyList item with loop\n      .filter(([a, i]) => a.includes(i))\n      // return simple loop\n      .map(([, i]) => [i])\n  )\n}\n\nexport const getCycles = (graph: Graph): UriCycle[] => {\n  // first convert graph into a simple adjacency matrix\n  const [adjacencyList, indexes] = graph2adjacency(graph)\n\n  // try to detect loops (cycles of length 1)\n  // this is due to the limits of the findCyclesAdjacency, which fails to detect loops\n  // https://github.com/antoinerg/elementary-circuits-directed-graph/issues/13\n  // @TODO remove loop detection when the issue is fixed\n  const loops = findLoops(adjacencyList)\n  // get all the other loops\n  const otherCycles = findCircuits(adjacencyList)\n    // filter out loops, so we avoid duplicates (see the above-linked issue)\n    .filter(a => a.length > 2)\n    // and remove the last element of each cycle\n    // because the library spits them out in the form [[0, 1, 0], [0, 1, 2, 4, 3, 0]]\n    .map(cycle => cycle.slice(0, -1))\n\n  const cycles = [...loops, ...otherCycles].map(cycle =>\n    cycle.map(i => indexes[i]),\n  )\n\n  return cycles\n}\n\nexport const pruneWithCycles = (graph: Graph): [Graph, UriCycle[]] => {\n  // clone the graph\n  graph = cloneDeep(graph)\n  // first detect cycles\n  const cycles = getCycles(graph)\n  const edges = cycles\n    // collect edges from all cycles\n    .map(cycle => cycle2edges(cycle))\n    .flat()\n    // and filter out duplicates\n    .filter(\n      ([a, b], i, edges) =>\n        edges.findIndex(([c, d]) => a === c && b === d) === i,\n    )\n  // then remove all edges that are part of cycles\n  const dag = removeEdges(graph, edges)\n  // then prune the remaining graph\n  const prunedDag = prune(dag)\n  // then add the cycles back\n  const prunedGraph = addEdges(prunedDag, edges)\n  // and return\n  return [prunedGraph, cycles]\n}\n\ntype Edge = [string, string]\n\nexport const cycle2edges = (cycle: UriCycle): Edge[] =>\n  cycle.map((uri, i, cycle) => [cycle[i], cycle[(i + 1) % cycle.length]])\n\nconst removeEdges = (graph: Graph, edges: Edge[]): Graph => {\n  edges.forEach(([a, b]) => {\n    delete graph[a].dependencies[b]\n    delete graph[b].dependents[a]\n  })\n  return graph\n}\n\nconst addEdges = (graph: Graph, edges: Edge[]): Graph => {\n  edges.forEach(([a, b]) => {\n    graph[a].dependencies[b] = graph[b]\n    graph[b].dependents[a] = graph[a]\n  })\n  return graph\n}\n","import {\n  createAsyncThunk,\n  createSelector,\n  createSlice,\n  PayloadAction,\n} from '@reduxjs/toolkit'\nimport { AppDispatch, RootState } from '../../app/store'\nimport { Entity } from '../../types'\nimport { setTemporaryInfo } from '../info/infoSlice'\nimport { selectWebId } from '../login/loginSlice'\nimport { addGraph } from '../math/mathSlice'\nimport { MathDocument } from '../math/types'\nimport * as api from './documentAPI'\n\nexport interface DocumentState {\n  entities: {\n    document: Entity<MathDocument>\n  }\n  selected: string\n}\n\nconst initialState: DocumentState = {\n  entities: {\n    document: {\n      byId: {},\n      allIds: [],\n    },\n  },\n  selected: '',\n}\n\n// Thunks\nexport const addDocuments = createAsyncThunk(\n  'math/addDocuments',\n  async (webId: string, { dispatch }) => {\n    const documents = await api.findMathDocumentsOfPerson(webId)\n    documents.forEach(doc => dispatch(addGraph(doc.uri)))\n    return documents\n  },\n)\n\nexport const createDocument = createAsyncThunk<\n  MathDocument,\n  { uri: string; isPublic: boolean },\n  {\n    dispatch: AppDispatch\n    getState: () => RootState\n  }\n>('math/createDocument', async ({ uri, isPublic }, { getState, dispatch }) => {\n  const webId = selectWebId(getState() as RootState)\n  try {\n    dispatch(\n      setTemporaryInfo({ type: 'info', message: 'creating a new document' }),\n    )\n    const newDocument = await api.createMathDocument(uri, webId, isPublic)\n    dispatch(\n      setTemporaryInfo({ type: 'success', message: 'created a new document' }),\n    )\n\n    return newDocument\n  } catch (error) {\n    if (error instanceof Error) {\n      dispatch(setTemporaryInfo({ type: 'error', message: error.message }))\n    }\n    throw error\n  }\n})\n\nexport const documentSlice = createSlice({\n  name: 'document',\n  initialState,\n  reducers: {\n    selectDocument: (state, action: PayloadAction<string>) => {\n      state.selected = action.payload\n    },\n  },\n  extraReducers: builder => {\n    builder\n      .addCase(addDocuments.fulfilled, (state, action) => {\n        state.entities.document = {\n          byId: Object.fromEntries(action.payload.map(doc => [doc.id, doc])),\n          allIds: action.payload.map(doc => doc.id),\n        }\n      })\n      .addCase(createDocument.fulfilled, (state, action) => {\n        state.entities.document.allIds.push(action.payload.id)\n        state.entities.document.byId[action.payload.id] = action.payload\n      })\n  },\n})\n\nexport const { selectDocument } = documentSlice.actions\n\nconst selectDocumentEntities = (state: RootState) =>\n  state.document.entities.document\n\nexport const selectDocuments = createSelector(\n  selectDocumentEntities,\n  ({ byId, allIds }) => allIds.map(id => byId[id]),\n)\n\n// this is a factory function\n// say what type of access you want to select documents with\n// and it returns the correct selector\nexport const createSelectDocumentsWithAccess = (\n  access: (keyof MathDocument['access']['user'])[],\n) => {\n  return createSelector(selectDocuments, documents =>\n    documents.filter(doc => access.some(a => doc.access.user[a])),\n  )\n}\n\n// select documents that are editable and appendable\nexport const selectWriteAppendDocuments = createSelectDocumentsWithAccess([\n  'write',\n  'append',\n])\n\nexport const selectSelectedDocument = (state: RootState) =>\n  state.document.selected\n\nexport default documentSlice.reducer\n","import {\n  addUrl,\n  asUrl,\n  buildThing,\n  getSolidDataset,\n  getTerm,\n  getTermAll,\n  getThing,\n  getThingAll,\n  getUrl,\n  getUrlAll,\n  removeAll,\n  removeThing,\n  removeUrl,\n  saveSolidDatasetAt,\n  setStringWithLocale,\n  setThing,\n  setUrl,\n  SolidDataset,\n  Thing,\n  ThingPersisted,\n  UrlString,\n} from '@inrupt/solid-client'\nimport { fetch } from '@inrupt/solid-client-authn-browser'\nimport { rdf, rdfs } from 'rdf-namespaces'\nimport { Definition, GraphNode, NewNode, PartialNode, Statement } from './types'\n\ninterface Graph {\n  nodes: (Definition | Statement)[]\n  links: [string, string][]\n}\n\nconst term = {\n  definition: 'https://terms.math.livegraph.org#Definition',\n  statement: 'https://terms.math.livegraph.org#Statement',\n  dependsOn: 'https://terms.math.livegraph.org#dependsOn',\n}\n\nexport const fetchGraph = async (documentUri: UrlString): Promise<Graph> => {\n  const dataset = await getSolidDataset(documentUri, { fetch })\n  const things = getThingAll(dataset)\n  const graph: Graph = { nodes: [], links: [] }\n  things.forEach(thing => {\n    const node = thingToNode(thing, documentUri)\n    graph.nodes.push(node)\n    getTermAll(thing, term.dependsOn).forEach(dependency => {\n      graph.links.push([node.id, dependency.value])\n    })\n  })\n  return graph\n}\n\nexport const updateNode = async (\n  node: PartialNode,\n): Promise<Definition | Statement> => {\n  // we want to save any partial data that are provided\n\n  const dataset = await getSolidDataset(node.document, { fetch })\n  const thing = getThing(dataset, node.id) as ThingPersisted\n  if (thing) {\n    let newThing = thing\n    if (node.label) {\n      newThing = setStringWithLocale(newThing, rdfs.label, node.label.en, 'en')\n    }\n\n    if (node.type) {\n      newThing = setUrl(newThing, rdf.type, term[node.type])\n    }\n\n    if (node.description) {\n      newThing = setStringWithLocale(\n        newThing,\n        rdf.value,\n        node.description.en,\n        'en',\n      )\n    }\n\n    if (node.dependencies) {\n      newThing = removeAll(newThing, term.dependsOn)\n      node.dependencies.forEach(depUri => {\n        newThing = addUrl(newThing, term.dependsOn, depUri)\n      })\n    }\n\n    if (newThing !== thing) {\n      const newDataset = setThing(dataset, newThing)\n      await saveSolidDatasetAt(node.document, newDataset, { fetch })\n    }\n    return thingToNode(newThing, node.document)\n  }\n  throw new Error('node to update not found')\n}\n\nexport const createNode = async (\n  node: NewNode,\n): Promise<Definition | Statement> => {\n  const dataset = await getSolidDataset(node.document, { fetch })\n\n  const uri = getUnusedUri(node.document, dataset, node.label.en)\n\n  const newThingBuilder = buildThing({ url: uri })\n    .setStringWithLocale(rdfs.label, node.label.en, 'en')\n    .setUrl(rdf.type, term[node.type])\n    .setStringWithLocale(rdf.value, node.description.en, 'en')\n\n  node.dependencies.forEach(depUri => {\n    newThingBuilder.addUrl(term.dependsOn, depUri)\n  })\n\n  const newThing = newThingBuilder.build()\n\n  const newDataset = setThing(dataset, newThing)\n  await saveSolidDatasetAt(node.document, newDataset, { fetch })\n  return thingToNode(newThing, node.document)\n}\n\nconst label2uri = (label: string) =>\n  label\n    .toLowerCase()\n    .trim()\n    .replace(/[^a-z0-9.\\s_-]/g, '')\n    .trim()\n    .replace(/\\s/g, '_')\n    .replace(/\\./g, '_')\n\nconst getUnusedUri = (\n  document: string,\n  dataset: SolidDataset,\n  label: string,\n) => {\n  const initialUri = `${document}#${label2uri(label)}`\n  const getUri = (i: number) => (i > 0 ? `${initialUri}_${i}` : initialUri)\n  let i = 0\n  while (getThing(dataset, getUri(i))) {\n    i++\n  }\n  return getUri(i)\n}\n\nexport const deleteNode = async (node: GraphNode): Promise<void> => {\n  const dataset = await getSolidDataset(node.document.uri, { fetch })\n\n  // thing to delete\n  const thing = getThing(dataset, node.uri)\n  // all things that depend on the thing\n  const thingsWithoutDependency = getThingAll(dataset)\n    .filter(thing => thing.url !== node.uri)\n    .filter(thing => getUrl(thing, term.dependsOn))\n    .map(thing => removeUrl(thing, term.dependsOn, node.uri))\n\n  if (thing) {\n    // remove thing\n    let newDataset = removeThing(dataset, thing)\n    // remove thing as dependency of all that depend on it\n    thingsWithoutDependency.forEach(thing => {\n      newDataset = setThing(newDataset, thing)\n    })\n\n    await saveSolidDatasetAt(node.document.uri, newDataset, { fetch })\n  }\n}\n\nconst thingToNode = (\n  thing: Thing,\n  document: string,\n): Definition | Statement => {\n  const uri = asUrl(thing)\n  const type = getTerm(thing, rdf.type)?.value ?? ''\n  const description = getTerm(thing, rdf.value)?.value ?? ''\n  const label = getTerm(thing, rdfs.label)?.value ?? ''\n  const dependencies = getUrlAll(thing, term.dependsOn)\n  switch (type) {\n    case term.definition:\n      return {\n        id: uri,\n        type: 'definition',\n        label: { en: label },\n        description: { en: description },\n        dependencies,\n        dependents: [],\n        examples: [],\n        created: 0,\n        updated: 0,\n        document,\n      }\n    case term.statement:\n      return {\n        id: uri,\n        type: 'statement',\n        label: { en: label },\n        description: { en: description },\n        dependencies,\n        dependents: [],\n        examples: [],\n        proofs: [],\n        created: 0,\n        updated: 0,\n        document,\n      }\n    default:\n      throw new Error('thing is not a Definition or Statement')\n  }\n}\n","import {\n  createAsyncThunk,\n  createSelector,\n  createSlice,\n  isAnyOf,\n  original,\n  PayloadAction,\n} from '@reduxjs/toolkit'\nimport { AppDispatch, RootState } from '../../app/store'\nimport { Entity } from '../../types'\nimport { setTemporaryInfo } from '../info/infoSlice'\nimport { prune, pruneWithCycles } from './algorithms'\nimport * as api from './mathAPI'\nimport {\n  Definition,\n  Graph,\n  GraphNode,\n  NewNode,\n  PartialNode,\n  Statement,\n} from './types'\n\nexport interface MathState {\n  entities: {\n    node: Entity<Definition | Statement>\n    // we'll add examples and proofs and citations here\n  }\n  ui: {\n    highlighted: string\n    selected: string\n    create: boolean\n  }\n}\n\nconst initialState: MathState = {\n  entities: {\n    node: {\n      byId: {},\n      allIds: [],\n    },\n  },\n  ui: {\n    highlighted: '',\n    selected: '',\n    create: false,\n  },\n}\n\n// Thunks\nexport const addGraph = createAsyncThunk(\n  'math/addGraph',\n  async (uri: string) => {\n    return await api.fetchGraph(uri)\n  },\n)\n\nexport const updateNode = createAsyncThunk<\n  Definition | Statement,\n  PartialNode,\n  { dispatch: AppDispatch }\n>(\n  'math/updateNode',\n  async (node: PartialNode, { dispatch }): Promise<Definition | Statement> => {\n    dispatch(setTemporaryInfo({ type: 'info', message: 'saving ...' }))\n    try {\n      const updated = await api.updateNode(node)\n      dispatch(setTemporaryInfo({ type: 'success', message: '... saved' }))\n      return updated\n    } catch (error) {\n      let message = 'updating failed'\n      if (error instanceof Error) {\n        message += `: ${error.message}`\n      }\n      dispatch(setTemporaryInfo({ type: 'error', message }))\n      throw error\n    }\n  },\n)\n\nexport const createNode = createAsyncThunk<\n  Definition | Statement,\n  NewNode,\n  { dispatch: AppDispatch }\n>(\n  'math/createNode',\n  async (node: NewNode, { dispatch }): Promise<Definition | Statement> => {\n    dispatch(setTemporaryInfo({ type: 'info', message: 'saving ...' }))\n    try {\n      const created = await api.createNode(node)\n      dispatch(setTemporaryInfo({ type: 'success', message: '... saved' }))\n      return created\n    } catch (error) {\n      let message = 'creating failed'\n      if (error instanceof Error) {\n        message += `: ${error.message}`\n      }\n      dispatch(setTemporaryInfo({ type: 'error', message }))\n      throw error\n    }\n  },\n)\n\nexport const deleteNode = createAsyncThunk<\n  Definition | Statement,\n  GraphNode,\n  { dispatch: AppDispatch }\n>('math/deleteNode', async (node: GraphNode, { dispatch }) => {\n  dispatch(setTemporaryInfo({ type: 'info', message: 'deleting ...' }))\n  try {\n    await api.deleteNode(node)\n    dispatch(setTemporaryInfo({ type: 'success', message: '... deleted' }))\n    return {\n      ...node,\n      id: node.uri,\n      dependencies: Object.keys(node.dependencies),\n      dependents: Object.keys(node.dependents),\n      document: node.document.uri,\n    }\n  } catch (error) {\n    let message = 'deleting failed'\n    if (error instanceof Error) {\n      message += `: ${error.message}`\n    }\n    dispatch(setTemporaryInfo({ type: 'error', message }))\n    throw error\n  }\n})\n\nexport const mathSlice = createSlice({\n  name: 'math',\n  initialState,\n  reducers: {\n    highlight: (state, action: PayloadAction<string>) => {\n      state.ui.highlighted = action.payload\n    },\n    select: (state, action: PayloadAction<string>) => {\n      state.ui.selected = action.payload\n    },\n    createMath: (state, action: PayloadAction<boolean>) => {\n      state.ui.create = action.payload\n    },\n  },\n  extraReducers: builder => {\n    builder\n      .addCase(addGraph.fulfilled, (state, action) => {\n        const { nodes, links } = action.payload\n        nodes.forEach(node => {\n          state.entities.node.byId[node.id] = {\n            ...node,\n            dependencies: [],\n          }\n          state.entities.node.allIds.push(node.id)\n        })\n        // add dependents to dependencies\n        links.forEach(([dependent, dependency]) => {\n          // @TODO make links to inexistent things better\n          // now they just disappear\n          // we'd like to have ghost nodes: the ones that were not found\n          if (\n            state.entities.node.byId[dependency] &&\n            state.entities.node.byId[dependent]\n          ) {\n            state.entities.node.byId[dependency].dependents.push(dependent)\n            state.entities.node.byId[dependent].dependencies.push(dependency)\n          }\n        })\n      })\n      .addCase(deleteNode.fulfilled, (state, action) => {\n        const { dependents, dependencies, id: uri } = action.payload\n\n        // remove this node as dependency from all dependents\n        dependents.forEach(duri => {\n          const newDependencies = state.entities.node.byId[\n            duri\n          ].dependencies.filter(u => u !== uri)\n          state.entities.node.byId[duri].dependencies = newDependencies\n        })\n        // remove this node as dependent from all dependencies\n        dependencies.forEach(duri => {\n          state.entities.node.byId[duri].dependents = state.entities.node.byId[\n            duri\n          ].dependents.filter(u => u !== uri)\n        })\n        // remove this node\n        delete state.entities.node.byId[uri]\n        state.entities.node.allIds = state.entities.node.allIds.filter(\n          i => i !== uri,\n        )\n        state.ui.selected = ''\n      })\n      .addMatcher(\n        isAnyOf(updateNode.fulfilled, createNode.fulfilled),\n        (state, action) => {\n          const node = action.payload\n          if (!state.entities.node.allIds.includes(node.id)) {\n            state.entities.node.allIds.push(node.id)\n            state.entities.node.byId[node.id] = node\n          }\n          state.entities.node.byId[node.id].label = node.label\n          state.entities.node.byId[node.id].type = node.type\n          state.entities.node.byId[node.id].description = node.description\n          state.entities.node.byId[node.id].dependencies = node.dependencies\n          // replace dependencies\n          const oldDependencies =\n            original(state)?.entities.node.byId[node.id]?.dependencies ?? []\n          // fix dependents\n          const deletedDependencies = oldDependencies.filter(\n            d => !node.dependencies.includes(d),\n          )\n          const addedDependencies = node.dependencies.filter(\n            d => !oldDependencies.includes(d),\n          )\n          addedDependencies.forEach(d => {\n            state.entities.node.byId[d].dependents.push(node.id)\n          })\n          deletedDependencies.forEach(d => {\n            state.entities.node.byId[d].dependents = state.entities.node.byId[\n              d\n            ].dependents.filter(a => a !== node.id)\n          })\n          state.ui.selected = node.id\n        },\n      )\n  },\n})\n\nexport const { highlight, select, createMath } = mathSlice.actions\n\n// Selectors\nconst selectGraphNodes = (state: RootState) => state.math.entities.node\n\n// this is a repeated code because of circular dependencies\n// @TODO fix - dry (reappears in documentSlice)\nconst selectDocumentEntities = (state: RootState) =>\n  state.document.entities.document\n\nexport const selectGraph = createSelector(\n  selectGraphNodes,\n  selectDocumentEntities,\n  ({ byId: nodeDict }, { byId: documentDict }) => {\n    const enrichedNodes: Graph = Object.fromEntries(\n      Object.entries(nodeDict).map(([id, { id: uri, document, ...node }]) => [\n        id,\n        {\n          ...node,\n          uri,\n          dependencies: {},\n          dependents: {},\n          document: documentDict[document],\n        },\n      ]),\n    )\n\n    Object.entries(enrichedNodes).forEach(([id, enrichedNode]) => {\n      enrichedNode.dependencies = Object.fromEntries(\n        nodeDict[id].dependencies.map(id => [id, enrichedNodes[id]]),\n      )\n      enrichedNode.dependents = Object.fromEntries(\n        nodeDict[id].dependents.map(id => [id, enrichedNodes[id]]),\n      )\n    })\n\n    return enrichedNodes\n  },\n)\n\nexport const selectPrunedGraphAndCycles = createSelector(selectGraph, graph =>\n  pruneWithCycles(graph),\n)\n\nexport const selectPrunedGraph = createSelector(selectGraph, graph =>\n  prune(graph),\n)\n\nexport const selectHighlighted = (state: RootState) => state.math.ui.highlighted\nexport const selectSelected = (state: RootState) => state.math.ui.selected\nexport const selectCreateMath = (state: RootState) => state.math.ui.create\n\nconst selectNodeDependencies = (uri: string, graph: Graph): string[] =>\n  uri ? Object.values(graph[uri]?.dependencies ?? {}).map(node => node.uri) : []\n\nexport const selectSelectedNodeDependencies = createSelector(\n  selectSelected,\n  selectGraph,\n  selectNodeDependencies,\n)\n\nexport const selectSelectedNode = createSelector(\n  selectSelected,\n  selectGraph,\n  (uri, graph) => graph[uri],\n)\n\nexport default mathSlice.reducer\n","import {\n  buildThing,\n  createSolidDataset,\n  createThing,\n  getEffectiveAccess,\n  getSolidDataset,\n  getTerm,\n  getTermAll,\n  getThing,\n  getThingAll,\n  saveSolidDatasetAt,\n  setThing,\n} from '@inrupt/solid-client'\nimport { fetch } from '@inrupt/solid-client-authn-browser'\nimport { EffectiveAccess } from '@inrupt/solid-client/dist/interfaces'\nimport { dct, rdf, solid } from 'rdf-namespaces'\nimport { MathDocument } from '../math/types'\n\nexport const findMathDocumentsOfPerson = async (\n  webId: string,\n): Promise<MathDocument[]> => {\n  let documentUris: string[] = []\n  if (webId) {\n    const { public: publicTypeIndex } = await getTypeIndexes(webId)\n    if (publicTypeIndex) {\n      const index = await getSolidDataset(publicTypeIndex, { fetch })\n      const things = getThingAll(index)\n      const mathDocuments = things\n        .filter(thing =>\n          getTermAll(thing, solid.forClass)\n            .map(a => a.value)\n            .includes('https://terms.math.livegraph.org#Definition'),\n        )\n        .map(thing => getTermAll(thing, solid.instance))\n        .flat()\n        .map(a => a.value)\n\n      documentUris = mathDocuments\n    }\n  }\n  if (documentUris.length === 0)\n    documentUris = [\n      'https://mrkvon.solidcommunity.net/public/math/graph-theory.ttl',\n    ]\n\n  const accesses: Record<string, EffectiveAccess> = Object.fromEntries(\n    await Promise.all(\n      documentUris.map(async uri => {\n        const dataset = await getSolidDataset(uri, { fetch })\n        const rights = getEffectiveAccess(dataset)\n        return [uri, rights]\n      }),\n    ),\n  )\n\n  return documentUris.map(uri => ({ id: uri, uri, access: accesses[uri] }))\n}\n\nexport const createMathDocument = async (\n  uri: string,\n  webId: string,\n  isPublic: boolean,\n): Promise<MathDocument> => {\n  try {\n    await getSolidDataset(uri, { fetch })\n  } catch (error) {\n    // save the solid dataset to the new place\n    await saveSolidDatasetAt(uri, createSolidDataset(), {\n      fetch,\n    })\n\n    // fetch it to obtain access info\n    const newDataset = await getSolidDataset(uri, { fetch })\n\n    const mathDocument: MathDocument = {\n      id: uri,\n      uri,\n      access: getEffectiveAccess(newDataset),\n    }\n\n    // save the info to the publicTypeIndex or privateTypeIndex of logged user\n    const typeIndexes = await getTypeIndexes(webId)\n\n    const typeIndex = isPublic ? typeIndexes.public : typeIndexes.private\n\n    if (typeIndex) {\n      const dataset = await getSolidDataset(typeIndex, { fetch })\n\n      const indexThing =\n        getThing(dataset, typeIndex) ?? createThing({ url: typeIndex })\n\n      const thingUrl = `${typeIndex}#${Date.now()}` // @TODO could be more expressive, like filename\n\n      const index = buildThing(indexThing)\n        .addUrl(dct.references, thingUrl)\n        .build()\n\n      const file = buildThing(createThing({ url: thingUrl }))\n        .addUrl(rdf.type, solid.TypeRegistration)\n        .addUrl(solid.forClass, 'https://terms.math.livegraph.org#Definition')\n        .addUrl(solid.forClass, 'https://terms.math.livegraph.org#Statement')\n        .addUrl(solid.instance, uri)\n        .build()\n\n      const updatedDataset = setThing(setThing(dataset, index), file)\n      await saveSolidDatasetAt(typeIndex, updatedDataset, {\n        fetch,\n      })\n    }\n    return mathDocument\n  }\n  throw new Error('document already exists')\n}\n\ninterface TypeIndexes {\n  public: string\n  private: string\n}\n\nconst getTypeIndexes = async (webId: string): Promise<TypeIndexes> => {\n  const dataset = await getSolidDataset(webId, { fetch })\n  const me = getThing(dataset, webId)\n  const response: TypeIndexes = {\n    public: '',\n    private: '',\n  }\n  if (me) {\n    response.public = getTerm(me, solid.publicTypeIndex)?.value ?? ''\n    response.private = getTerm(me, solid.privateTypeIndex)?.value ?? ''\n  }\n\n  return response\n}\n","import {\n  login as solidLogin,\n  logout as solidLogout,\n  handleIncomingRedirect,\n} from '@inrupt/solid-client-authn-browser'\n\nexport const init = async () => {\n  const sessionInfo = await handleIncomingRedirect({\n    url: window.location.href,\n    restorePreviousSession: true,\n  })\n  return sessionInfo\n}\n\nexport const login = async (oidcIssuer: string) => {\n  try {\n    await solidLogin({\n      oidcIssuer,\n      redirectUrl: window.location.href,\n      clientName: 'Friends Crawler',\n    })\n  } catch (error) {\n    alert(`Could not find a Solid Pod at ${oidcIssuer}`)\n    localStorage.removeItem('idp')\n  }\n}\n\nexport const logout = async () => {\n  await solidLogout()\n}\n","import { createAsyncThunk, createSelector, createSlice } from '@reduxjs/toolkit'\nimport { RootState } from '../../app/store'\nimport { addDocuments } from '../document/documentSlice'\nimport * as api from './loginAPI'\n\n// State\nexport interface LoginState {\n  webId: string\n  isLoggedIn: boolean\n  status: 'idle' | 'loading' | 'failed'\n}\n\nconst initialState: LoginState = {\n  webId: '',\n  isLoggedIn: false,\n  status: 'loading',\n}\n\n// Thunks\nexport const init = createAsyncThunk('login/init', async (_, { dispatch }) => {\n  const response = await api.init()\n  const webId = response?.webId ?? ''\n  const isLoggedIn = response?.isLoggedIn ?? false\n  dispatch(addDocuments(webId))\n  return { webId, isLoggedIn }\n})\n\nexport const login = createAsyncThunk(\n  'login/login',\n  async (oidcIssuer: string) => {\n    await api.login(oidcIssuer)\n  },\n)\n\nexport const logout = createAsyncThunk('login/logout', async () => {\n  await api.logout()\n})\n\n// Slice\nexport const loginSlice = createSlice({\n  name: 'login',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder\n      .addCase(init.pending, state => {\n        state.status = 'loading'\n      })\n      .addCase(init.fulfilled, (state, action) => {\n        state.status = 'idle'\n        state.webId = action.payload.webId\n        state.isLoggedIn = action.payload.isLoggedIn\n      })\n      .addCase(login.pending, state => {\n        state.status = 'loading'\n      })\n      .addCase(login.fulfilled, state => {\n        state.status = 'idle'\n      })\n      .addCase(logout.pending, state => {\n        state.status = 'loading'\n      })\n      .addCase(logout.fulfilled, state => {\n        state.status = 'idle'\n        state.webId = ''\n        state.isLoggedIn = false\n      })\n  },\n})\n\n// Selectors\nexport const selectSession = (state: RootState) => ({\n  webId: state.login.webId,\n  isLoggedIn: state.login.isLoggedIn,\n})\n\nexport const selectWebId = (state: RootState) => state.login.webId\nexport const selectIsLoggedIn = (state: RootState) => state.login.isLoggedIn\n\nexport const selectNaiveStorage = createSelector(selectWebId, webId => {\n  const output = /^(?<storage>.*)profile\\/card#me$/g.exec(webId)\n  const storage = output?.groups ? output.groups.storage : ''\n  return storage\n})\n\nexport const selectLoginStatus = (state: RootState) => state.login.status\n\nexport default loginSlice.reducer\n","import React from 'react'\nimport { useState } from 'react'\n\ntype WithMenuHOC = <ButtonProps, MenuProps>(\n  Button: React.FC<ButtonProps>,\n  Menu: React.FC<MenuProps & CloseHandler>,\n) => React.FC<\n  React.HTMLAttributes<HTMLDivElement> & {\n    buttonProps: ButtonProps\n    menuProps: MenuProps\n  }\n>\n\ninterface CloseHandler {\n  onClickClose: () => void\n}\n\nconst withMenu: WithMenuHOC = <\n  ButtonProps extends React.HTMLAttributes<HTMLElement>,\n  MenuProps extends React.HTMLAttributes<HTMLElement>,\n>(\n  Button: React.FC<ButtonProps>,\n  Menu: React.FC<MenuProps & CloseHandler>,\n) => {\n  const HOC = ({\n    buttonProps,\n    menuProps,\n    ...props\n  }: {\n    buttonProps: ButtonProps\n    menuProps: MenuProps\n  }) => {\n    const [open, setOpen] = useState(false)\n\n    return (\n      <div\n        {...props}\n        style={{\n          position: 'relative',\n          flexDirection: 'column',\n          display: 'inline-flex',\n          alignItems: 'end',\n          zIndex: 3,\n        }}\n        onMouseLeave={() => setOpen(false)}\n        onBlur={event => {\n          // https://stackoverflow.com/a/60094794\n          // make sure the blur works when leaving the whole thing only\n          if (!event.currentTarget.contains(event.relatedTarget as Node)) {\n            setOpen(false)\n          }\n        }}\n      >\n        <Button\n          {...buttonProps}\n          onMouseEnter={() => setOpen(true)}\n          onFocus={() => setOpen(true)}\n        />\n        <div\n          style={{\n            position: 'relative',\n            width: 0,\n            height: 0,\n            visibility: open ? 'visible' : 'hidden',\n          }}\n        >\n          <div\n            className=\"box p-0\"\n            style={{ position: 'absolute', right: 0, overflow: 'hidden' }}\n          >\n            <Menu {...menuProps} onClickClose={() => setOpen(false)} />\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  HOC.displayName = `WithMenu(${getDisplayName(Button)})`\n  return HOC\n}\n\nfunction getDisplayName<T>(WrappedComponent: React.FC<T>) {\n  return WrappedComponent.displayName || WrappedComponent.name || 'Component'\n}\n\nexport default withMenu\n","import React from 'react'\nimport LoginPrompt from './LoginPrompt'\nimport { useAppDispatch, useAppSelector } from '../../app/hooks'\nimport { login, logout, selectLoginStatus, selectSession } from './loginSlice'\nimport AppButton from '../../components/AppButton'\nimport withMenu from '../../components/withMenu'\n\ninterface User {\n  webId: string\n}\n\nconst Menu = ({ user, onLogout }: { user: User; onLogout: () => void }) => (\n  <div className=\"menu box p-0\">\n    <ul className=\"menu-list\">\n      <li>\n        <a className=\"disabled\">{user.webId}</a>\n      </li>\n      <li>\n        <a onClick={onLogout}>Logout</a>\n      </li>\n    </ul>\n  </div>\n)\n\nconst UserButton = ({ ...props }) => (\n  <AppButton {...props}>\n    <i className=\"icon icon-user\" />\n  </AppButton>\n)\n\nconst UserWithMenu = withMenu(UserButton, Menu)\n\nconst Login = ({ ...props }) => {\n  const dispatch = useAppDispatch()\n  const info = useAppSelector(selectSession)\n  const status = useAppSelector(selectLoginStatus)\n\n  return status === 'loading' ? (\n    <AppButton {...props} disabled>\n      <i className=\"icon icon-spinner animate-pulse\" />\n    </AppButton>\n  ) : info.isLoggedIn ? (\n    <UserWithMenu\n      menuProps={{ user: info, onLogout: () => dispatch(logout()) }}\n      buttonProps={props}\n    />\n  ) : (\n    <LoginPrompt\n      {...props}\n      contentProps={{\n        onLogin: (oidcIssuer: string) => {\n          dispatch(login(oidcIssuer))\n        },\n      }}\n      buttonProps={{}}\n    />\n  )\n}\n\nexport default Login\n","import numeric from 'numeric'\nimport { cycle2edges } from '../../algorithms'\nimport { GraphNode } from '../../types'\nimport { SimulationGraph } from '../simulation/types'\nimport { Grid, Matrix, Vector, VisualizationGraph } from '../types'\n\nexport const transform = (matrix: Matrix, vector: Vector): Vector => {\n  const raw = numeric.dot(matrix, numeric.transpose([[...vector, 1]])) as Matrix\n  const [[x], [y]] = raw\n  return [x, y]\n}\n\nexport const nodeRadius = (node: GraphNode): number => {\n  let count = Object.entries(node.dependents).length ?? 0\n  count = count < 1 ? 1 : count\n  return count ** 0.42 * 5\n}\n\nexport const basicGrid: Grid = {\n  origin: [0, 0],\n  distance: 20,\n  highlight: 5,\n}\n\nexport const transformGrid = (matrix: Matrix, grid: Grid): Grid => {\n  let distance = grid.distance * matrix[0][0]\n  while (distance < 20) {\n    distance *= 5\n  }\n  return {\n    origin: transform(matrix, grid.origin),\n    distance,\n    highlight: grid.highlight,\n  }\n}\n\nexport const transformLayout = (\n  matrix: Matrix,\n  graph: SimulationGraph,\n  highlighted: string,\n  selected: string,\n  selectedDependencies: string[],\n  cycles: string[][],\n): VisualizationGraph => {\n  const transformedNodesDict = Object.fromEntries(\n    graph.nodes.map(node => {\n      const [x, y] = transform(matrix, [node.x, node.y])\n      const r = matrix[0][0] * node.r\n      return [\n        node.uri,\n        { ...node, x, y, r, style: '' } as VisualizationGraph['nodes'][0],\n      ]\n    }),\n  )\n\n  selectedDependencies.forEach(\n    uri => (transformedNodesDict[uri].style = 'focus2'),\n  )\n\n  if (highlighted && transformedNodesDict[highlighted]) {\n    transformedNodesDict[highlighted].style = 'accent'\n  }\n\n  if (selected && transformedNodesDict[selected]) {\n    transformedNodesDict[selected].style = 'focus'\n  }\n\n  // highlight cycles as errors\n  // so first we collect the cycle edges\n  const errorEdges = cycles.map(cycle => cycle2edges(cycle)).flat()\n\n  const links = graph.links.map(link => {\n    const sourceUri =\n      typeof link.source === 'string'\n        ? link.source\n        : typeof link.source === 'number'\n        ? graph.nodes[link.source].uri\n        : link.source.uri\n    const targetUri =\n      typeof link.target === 'string'\n        ? link.target\n        : typeof link.target === 'number'\n        ? graph.nodes[link.target].uri\n        : link.target.uri\n    const source = transformedNodesDict[sourceUri]\n    const target = transformedNodesDict[targetUri]\n    const style = errorEdges.some(\n      ([a, b]) => a === source.uri && b === target.uri,\n    )\n      ? 'error'\n      : ''\n    return { source, target, style } as VisualizationGraph['links'][0]\n  })\n\n  return { nodes: Object.values(transformedNodesDict), links }\n}\n","import React, { useCallback, useEffect, useState } from 'react'\n\nconst useFullSize = <T extends HTMLElement>(elementRef: React.RefObject<T>) => {\n  const [{ width, height }, setSize] = useState({\n    width: 0,\n    height: 0,\n  })\n\n  const updateSize = useCallback(() => {\n    const size = getElementSize(elementRef)\n    setSize(size)\n  }, [elementRef])\n\n  useEffect(() => {\n    updateSize()\n    window.addEventListener('load', updateSize)\n    window.addEventListener('resize', updateSize)\n\n    return () => {\n      window.removeEventListener('resize', updateSize)\n      window.removeEventListener('load', updateSize)\n    }\n  }, [width, height, updateSize])\n\n  return { width, height }\n}\n\nexport default useFullSize\n\nfunction getElementSize<T extends HTMLElement>(elementRef: React.RefObject<T>) {\n  if (elementRef && elementRef.current) {\n    const { clientHeight: height, clientWidth: width } = elementRef.current\n    return { height, width }\n  } else return { height: 0, width: 0 }\n}\n","import {\n  forceSimulation,\n  forceCollide,\n  forceLink,\n  forceManyBody,\n  forceCenter,\n  forceX,\n  forceY,\n  ForceLink,\n} from 'd3-force'\nimport { Dictionary } from '../../../../types'\nimport forceGravity from './gravity'\nimport {\n  Coords,\n  SimulationNode,\n  SimulationLink,\n  Node,\n  SimulationNodeExt,\n  SimulationLinkExt,\n} from './types'\n\nexport default class Simulation {\n  nodes: SimulationNodeExt[] = []\n  links: SimulationLinkExt[] = []\n\n  runs = false\n\n  simulation = forceSimulation()\n    .alphaDecay(0.005)\n    .force(\n      'link',\n      forceLink()\n        .id(node => (node as SimulationNodeExt).uri)\n        .distance(50)\n        .strength(0.1),\n    )\n    .force('linkGravity', forceGravity().strength(50))\n    .force('charge', forceManyBody().strength(-150).distanceMax(500))\n    .force('gravityX', forceX(0).strength(0.01))\n    .force('gravityY', forceY(0).strength(0.01))\n    .force(\n      'collide',\n      forceCollide(({ r }: SimulationNodeExt) => r + 5),\n    )\n    .force('center', forceCenter(0, 0))\n    .stop()\n\n  start = ({\n    nodes,\n    links,\n    onTick,\n  }: {\n    nodes: SimulationNode[]\n    links: SimulationLink[]\n    onTick: (simulation: {\n      nodes: SimulationNode[]\n      links: SimulationLinkExt[]\n    }) => void\n  }) => {\n    this.nodes = nodes as SimulationNodeExt[]\n    this.links = links.map(link => ({ ...link })) as SimulationLinkExt[]\n\n    this.simulation.nodes(this.nodes)\n    ;(\n      this.simulation.force('link') as ForceLink<\n        SimulationNodeExt,\n        SimulationLinkExt\n      >\n    ).links(this.links)\n    ;(\n      this.simulation.force('linkGravity') as ForceLink<\n        SimulationNodeExt,\n        SimulationLinkExt\n      >\n    ).links(this.links)\n\n    this.simulation.on('tick', () => {\n      onTick({\n        nodes: this.nodes as SimulationNode[],\n        links: this.links,\n      })\n    })\n\n    this.simulation.restart()\n    this.runs = true\n  }\n\n  stop = () => {\n    this.runs = false\n    return this.simulation.stop()\n  }\n\n  update = ({ nodes, links }: { nodes: Node[]; links: SimulationLink[] }) => {\n    this.simulation.stop()\n    // combine current nodes and the old nodes\n    const thisNodeDict: Dictionary<SimulationNodeExt> = Object.fromEntries(\n      this.nodes.map(node => [node.uri, node]),\n    )\n    const updatedNodes: SimulationNodeExt[] = nodes.map(node => ({\n      ...node,\n      x: (0.5 - Math.random()) * 800,\n      y: (0.5 - Math.random()) * 800,\n      ...thisNodeDict[node.uri],\n      r: node.r,\n    }))\n    this.nodes = updatedNodes\n    this.links = links.map(link => ({ ...link })) as SimulationLinkExt[]\n\n    this.simulation.nodes(this.nodes)\n    ;(\n      this.simulation.force('link') as ForceLink<\n        SimulationNodeExt,\n        SimulationLinkExt\n      >\n    ).links(this.links)\n    ;(\n      this.simulation.force('linkGravity') as ForceLink<\n        SimulationNodeExt,\n        SimulationLinkExt\n      >\n    ).links(this.links)\n\n    this.simulation.alpha(1).restart()\n  }\n\n  selectNode = ({ x, y }: Coords) =>\n    this.simulation.find(x, y, 40) as SimulationNodeExt\n}\n","import { SimulationLinkExt } from './types'\n\nexport default function gravity() {\n  let links: SimulationLinkExt[] = []\n  let strength = 3\n  function force(alpha: number) {\n    const k = strength * alpha\n    links.forEach(function (d) {\n      //// this works\n      // d.source.y = Math.max(d.target.y + 50, d.source.y);\n      //// this is original\n      // d.source.vy += k;\n      // d.target.vy -= k;\n      //\n      //// this works with velocities, so the graph looks less layered\n      const { source, target } = d\n      if (typeof source === 'object' && typeof target === 'object') {\n        if (\n          source.y &&\n          target.y &&\n          source.vy &&\n          target.vy &&\n          source.y < target.y + 50\n        ) {\n          const optimumDifference = (target.y + 50 - source.y) / 50\n          source.vy += k * optimumDifference\n          target.vy -= k * optimumDifference\n        }\n      }\n    })\n  }\n\n  force.links = (_: SimulationLinkExt[]) => {\n    links = _\n    return force\n  }\n\n  force.strength = (_: number) => {\n    strength = _\n    return force\n  }\n\n  return force\n}\n","import { useEffect, useState } from 'react'\nimport { Graph } from '../types'\nimport { nodeRadius } from './helpers/transform'\nimport Simulation from './simulation'\nimport { SimulationGraph, SimulationLink } from './simulation/types'\n\nconst useSimulation = (graph: Graph) => {\n  const [simulation] = useState(new Simulation())\n  const [layout, setLayout] = useState<SimulationGraph>({\n    nodes: [],\n    links: [],\n  })\n\n  // initialize simulation\n  useEffect(() => {\n    let lastUpdate = Date.now() - 20\n    simulation.start({\n      nodes: [],\n      links: [],\n      onTick: ({ nodes, links }) => {\n        const now = Date.now()\n        if (now > lastUpdate + 20) {\n          setLayout({ nodes: [...nodes], links: [...links] })\n          lastUpdate = now\n        }\n      },\n    })\n    return () => {\n      simulation.stop()\n    }\n  }, [simulation])\n\n  // when graph changes, update simulation\n  useEffect(() => {\n    const nodes = Object.values(graph).map(node => ({\n      label: node.label.en,\n      x: Math.random() * 400,\n      y: Math.random() * 400,\n      r: nodeRadius(node),\n      uri: node.uri,\n    }))\n\n    const links: SimulationLink[] = Object.values(graph).reduce(\n      (links, { uri: source, dependencies }) => {\n        Object.keys(dependencies).forEach(target =>\n          links.push({ source, target }),\n        )\n        return links\n      },\n      [] as SimulationLink[],\n    )\n\n    simulation.update({ nodes, links })\n  }, [graph, simulation])\n\n  return { simulation, layout }\n}\n\nexport default useSimulation\n","import { Vector, Grid, VisualizationGraph } from '../types'\nimport numeric from 'numeric'\n\ntype Options = Partial<CanvasRenderingContext2D>\n\nconst drawText = (\n  context: CanvasRenderingContext2D,\n  [x, y]: Vector,\n  text: string,\n  options: Options,\n) => {\n  context.font = '20px Arial'\n  context.textBaseline = 'middle'\n  context.textAlign = 'left'\n  // context.fillStyle = '#fff7'\n  Object.assign(context, options)\n  context.fillText(text, x, y)\n}\n\nconst drawCircle = (\n  context: CanvasRenderingContext2D,\n  [x, y]: Vector,\n  radius: number,\n  options: Options,\n) => {\n  Object.assign(context, options)\n  context.beginPath()\n  context.arc(x, y, radius, 0, 2 * Math.PI)\n  context.fill()\n}\n\nconst drawLine = (\n  context: CanvasRenderingContext2D,\n  start: Vector,\n  end: Vector,\n  options: Options,\n) => {\n  Object.assign(context, options)\n\n  context.beginPath()\n  context.moveTo(...start)\n  context.lineTo(...end)\n  context.stroke()\n}\n\nexport const drawGraph = (\n  context: CanvasRenderingContext2D,\n  graph: VisualizationGraph,\n) => {\n  graph.links.forEach(link => {\n    // we're counting a unit vector to make links that don't overlap nodes\n    // source point\n    const s = [link.source.x, link.source.y]\n    // target point\n    const t = [link.target.x, link.target.y]\n    // vector\n    const v = numeric.sub(t, s)\n    // vector size\n    const size = Math.sqrt(v[0] ** 2 + v[1] ** 2)\n    // unit vector\n    const i = numeric.div(v, size)\n    drawLine(\n      context,\n      // links don't overlap circles\n      numeric.add(s, numeric.mul(i, link.source.r)) as Vector,\n      numeric.sub(t, numeric.mul(i, link.target.r)) as Vector,\n      {\n        strokeStyle: link.style === 'error' ? 'red' : 'white',\n        lineWidth: 0.5,\n      },\n    )\n  })\n\n  const color = {\n    accent: 'violet',\n    focus: 'red',\n    focus2: 'pink',\n    rest: {\n      node: '#fff8',\n      label: '#fff4',\n    },\n  }\n\n  const accented = graph.nodes.filter(({ style }) => style === 'accent')\n  const focused = graph.nodes.filter(({ style }) => style === 'focus')\n  const focused2 = graph.nodes.filter(({ style }) => style === 'focus2')\n  const rest = graph.nodes.filter(({ style }) => !style)\n\n  // draw all the nodes which are not special\n  rest.forEach(({ x, y, r }) =>\n    drawCircle(context, [x, y], r, { fillStyle: color.rest.node }),\n  )\n\n  rest.forEach(({ x, y, r, label }) =>\n    drawText(context, [x + r + 5, y], label, {\n      fillStyle: color.rest.label,\n    }),\n  )\n\n  // draw focused nodes\n  focused2.forEach(({ x, y, r }) =>\n    drawCircle(context, [x, y], r, { fillStyle: color.focus2 }),\n  )\n\n  focused2.forEach(({ x, y, r, label }) =>\n    drawText(context, [x + r + 5, y], label, { fillStyle: color.focus2 }),\n  )\n\n  // draw focused nodes\n  focused.forEach(({ x, y, r }) =>\n    drawCircle(context, [x, y], r, { fillStyle: color.focus }),\n  )\n\n  focused.forEach(({ x, y, r, label }) =>\n    drawText(context, [x + r + 5, y], label, { fillStyle: color.focus }),\n  )\n\n  // draw accented nodes\n  accented.forEach(({ x, y, r }) =>\n    drawCircle(context, [x, y], r, { fillStyle: color.accent }),\n  )\n\n  accented.forEach(({ x, y, r, label }) =>\n    drawText(context, [x + r + 5, y], label, {\n      fillStyle: color.accent,\n    }),\n  )\n}\n\nexport const drawGrid = (\n  context: CanvasRenderingContext2D,\n  grid: Grid,\n  width: number,\n  height: number,\n) => {\n  const strokeStyle = '#fff2'\n  const min1 = 0\n  const max1 = height\n  const min0 = 0\n  const max0 = width\n\n  const getLineWidth = (i: number) =>\n    i === 0 ? 2 : i % grid.highlight === 0 ? 1 : 0.5\n\n  let i = 0\n  while (i * grid.distance + grid.origin[0] <= max0) {\n    const x = i * grid.distance + grid.origin[0]\n    if (x >= min0) {\n      drawLine(context, [x, min1], [x, max1], {\n        strokeStyle,\n        lineWidth: getLineWidth(i),\n      })\n    }\n    i++\n  }\n\n  i = -1\n  while (i * grid.distance + grid.origin[0] >= min0) {\n    const x = i * grid.distance + grid.origin[0]\n    if (x <= max0) {\n      drawLine(context, [x, min1], [x, max1], {\n        strokeStyle,\n        lineWidth: getLineWidth(i),\n      })\n    }\n    i--\n  }\n\n  i = 0\n  while (i * grid.distance + grid.origin[1] <= max1) {\n    const y = i * grid.distance + grid.origin[1]\n    if (y >= min1) {\n      drawLine(context, [min0, y], [max0, y], {\n        strokeStyle,\n        lineWidth: getLineWidth(i),\n      })\n    }\n    i++\n  }\n\n  i = -1\n  while (i * grid.distance + grid.origin[1] >= min1) {\n    const y = i * grid.distance + grid.origin[1]\n    if (y <= max1) {\n      drawLine(context, [min0, y], [max0, y], {\n        strokeStyle,\n        lineWidth: getLineWidth(i),\n      })\n    }\n    i--\n  }\n}\n","import { select } from 'd3-selection'\nimport { zoom } from 'd3-zoom'\nimport React, { useCallback, useEffect } from 'react'\nimport { drawGraph, drawGrid } from './helpers/draw'\nimport { Grid, Matrix, Vector, VisualizationGraph } from './types'\n\ntype Props = Partial<React.CanvasHTMLAttributes<HTMLCanvasElement>> & {\n  graph: VisualizationGraph\n  grid: Grid\n  onTransform: (matrix: Matrix) => void\n  canvasRef: React.RefObject<HTMLCanvasElement>\n  width: number\n  height: number\n}\n\nconst useVisualization = ({\n  graph,\n  grid,\n  onTransform,\n  canvasRef,\n  width,\n  height,\n}: Props) => {\n  useEffect(() => {\n    if (canvasRef && canvasRef.current) {\n      const context = canvasRef.current.getContext('2d')\n      if (context) {\n        context.save()\n        context.clearRect(0, 0, width, height)\n        drawGrid(context, grid, width, height)\n        drawGraph(context, graph)\n        return () => context.restore()\n      }\n    }\n  }, [width, height, graph, canvasRef, grid])\n\n  useEffect(() => {\n    if (canvasRef && canvasRef.current) {\n      select(canvasRef.current).call(\n        zoom<HTMLCanvasElement, unknown>()\n          .clickDistance(2)\n          .scaleExtent([0.05, 3])\n          .on('zoom', e => {\n            const { x, y, k } = e.transform\n\n            const zoom = [\n              [k, 0, x],\n              [0, k, y],\n              [0, 0, 1],\n            ]\n\n            onTransform(zoom)\n          }),\n      )\n    }\n  }, [canvasRef, onTransform, height, width])\n\n  const withCanvasPosition = useCallback(\n    (\n        func: (position: Vector) => void,\n      ): React.MouseEventHandler<HTMLCanvasElement> =>\n      e => {\n        // https://stackoverflow.com/a/42111623\n        if (canvasRef && canvasRef.current) {\n          const rect = canvasRef.current.getBoundingClientRect()\n          const x = e.clientX - rect.left //x position within the element.\n          const y = e.clientY - rect.top //y position within the element.\n\n          func([x, y])\n        }\n      },\n    [canvasRef],\n  )\n\n  return withCanvasPosition\n}\n\nexport default useVisualization\n","import classnames from 'classnames'\nimport numeric from 'numeric'\nimport React, { useCallback, useRef, useState } from 'react'\nimport { useAppDispatch, useAppSelector } from '../../../app/hooks'\nimport {\n  highlight,\n  select,\n  selectHighlighted,\n  selectPrunedGraphAndCycles,\n  selectSelected,\n  selectSelectedNodeDependencies,\n} from '../mathSlice'\nimport {\n  basicGrid,\n  transform,\n  transformGrid,\n  transformLayout,\n} from './helpers/transform'\nimport { Matrix, Vector } from './types'\nimport useFullSize from './useFullSize'\nimport useSimulation from './useSimulation'\nimport useVisualization from './useVisualization'\n\nconst VisualizationContainer: React.FC<\n  Partial<React.HTMLAttributes<HTMLElement>>\n> = props => {\n  const [prunedGraph, cycles] = useAppSelector(selectPrunedGraphAndCycles)\n  const highlightedNode = useAppSelector(selectHighlighted)\n  const selectedNode = useAppSelector(selectSelected)\n  const selectedNodeDependencies = useAppSelector(\n    selectSelectedNodeDependencies,\n  )\n  const dispatch = useAppDispatch()\n\n  const { simulation, layout } = useSimulation(prunedGraph)\n\n  const canvasEl = useRef<HTMLCanvasElement>(null)\n  const { width, height } = useFullSize(canvasEl)\n\n  // transformation matrix\n  const [matrix, setMatrix] = useState<Matrix>([\n    [1, 0, 0],\n    [0, 1, 0],\n    [0, 0, 1],\n  ])\n\n  const transformedMatrix = numeric.dot(matrix, [\n    [1, 0, width / 2],\n    [0, 1, height / 2],\n    [0, 0, 1],\n  ]) as Matrix\n\n  const handleTransform = useCallback((matrix: Matrix): void => {\n    setMatrix(matrix)\n  }, [])\n\n  const withNode = (action: (uri: string) => unknown) => {\n    return (position: Vector): void => {\n      // first transform to local coordinates\n      const [x, y] = transform(numeric.inv(transformedMatrix), position)\n      // then find the node in simulation\n      action(simulation.selectNode({ x, y })?.uri)\n    }\n  }\n\n  const handleHover = withNode(\n    // limit the amount of highlight actions\n    // fire only when there is a uri change\n    uri => highlightedNode !== uri && dispatch(highlight(uri)),\n  )\n  const handleSelect = withNode(\n    uri => selectedNode !== uri && dispatch(select(uri)),\n  )\n\n  // transform layout to TransformedLayout\n  const transformedLayout = transformLayout(\n    transformedMatrix,\n    layout,\n    highlightedNode,\n    selectedNode,\n    selectedNodeDependencies,\n    cycles,\n  )\n\n  const grid = transformGrid(transformedMatrix, basicGrid)\n\n  const withCanvasPosition = useVisualization({\n    graph: transformedLayout,\n    grid,\n    onTransform: handleTransform,\n    canvasRef: canvasEl,\n    width,\n    height,\n  })\n\n  const handleMouseMove = withCanvasPosition(handleHover)\n  const handleClick = withCanvasPosition(handleSelect)\n\n  return (\n    <canvas\n      {...props}\n      ref={canvasEl}\n      onMouseMove={handleMouseMove}\n      // @TODO this piece is very inefficient, we search for a nonexistent node, just to unhighlight everything; but it works\n      onMouseOut={() => handleHover([Infinity, Infinity])}\n      width={width}\n      height={height}\n      className={classnames(props.className, 'has-background-dark')}\n      onClick={handleClick}\n    />\n  )\n}\n\nexport default VisualizationContainer\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Link = styled.a`\n  color: lightgray;\n  &:hover {\n    color: white;\n  }\n`\nconst Footer = styled.footer`\n  color: gray;\n`\n\nconst About: React.FC = props => (\n  <div {...props}>\n    <Footer>\n      powered by <Link href=\"https://solidproject.org\">Solid</Link> &middot;{' '}\n      <Link href=\"https://github.com/livegraph-org/solid-math\">source</Link>\n    </Footer>\n  </div>\n)\n\nexport default About\n","import React from 'react'\nimport withMenu from '../../components/withMenu'\nimport AppButton from '../../components/AppButton'\nimport withModal from '../../components/withModal'\nimport AddDocument from '../document/AddDocument'\n\nconst AddButton = ({ ...props }) => (\n  <AppButton {...props}>\n    <i className=\"icon icon-plus\" aria-label=\"add\" />\n  </AppButton>\n)\n\ninterface MenuProps {\n  onAddMath: () => void\n}\n\nconst Button = ({ ...props }) => <a {...props}>Add Document</a>\n\nconst AddDocumentButton = withModal(Button, AddDocument, 'Add a document')\n\nconst Menu = ({\n  onAddMath,\n  onClickClose,\n}: MenuProps & { onClickClose: () => void }) => (\n  <div className=\"menu box p-0\">\n    <ul className=\"menu-list\">\n      <li>\n        <AddDocumentButton buttonProps={{ onClick: onClickClose }} />\n      </li>\n      <li>\n        <a\n          onClick={() => {\n            onClickClose()\n            onAddMath()\n          }}\n        >\n          Add Math\n        </a>\n      </li>\n    </ul>\n  </div>\n)\n\nconst AddButtonWithMenu = withMenu<Record<string, never>, MenuProps>(\n  AddButton,\n  Menu,\n)\n\nexport default AddButtonWithMenu\n","import React, { useState } from 'react'\nimport { useAppDispatch, useAppSelector } from '../../app/hooks'\nimport { selectNaiveStorage } from '../login/loginSlice'\nimport { createDocument } from './documentSlice'\n\nconst AddDocument = ({\n  onFinish = () => undefined,\n}: {\n  onFinish?: () => void\n}) => {\n  const storage = useAppSelector(selectNaiveStorage)\n  const dispatch = useAppDispatch()\n  const [isPublic, setIsPublic] = useState(true)\n  const [filename, setFilename] = useState('')\n  return (\n    <section>\n      <form\n        onSubmit={e => {\n          e.preventDefault()\n          dispatch(\n            createDocument({\n              uri: `${storage}${\n                isPublic ? 'public' : 'private'\n              }/math/${filename}.ttl`,\n              isPublic,\n            }),\n          )\n          onFinish()\n        }}\n      >\n        <div className=\"field buttons are-small has-addons\">\n          <input\n            className={`button${isPublic ? ' is-success' : ''}`}\n            type=\"button\"\n            value=\"Public\"\n            onClick={() => setIsPublic(true)}\n          />\n          <input\n            className={`button${isPublic ? '' : ' is-warning'}`}\n            type=\"button\"\n            value=\"Private\"\n            onClick={() => setIsPublic(false)}\n          />\n        </div>\n        <div className=\"field\">\n          {storage}\n          {isPublic ? 'public' : 'private'}/math/\n          <input\n            type=\"text\"\n            value={filename}\n            placeholder=\"set-theory\"\n            onChange={e => setFilename(e.target.value)}\n          />\n          .ttl\n        </div>\n        <div className=\"field buttons\">\n          <input className=\"button is-success\" type=\"submit\" value=\"Create\" />\n          <input\n            className=\"button is-danger\"\n            type=\"reset\"\n            value=\"Cancel\"\n            onClick={onFinish}\n          />\n        </div>\n      </form>\n    </section>\n  )\n}\n\nexport default AddDocument\n","import { EffectiveAccess } from '@inrupt/solid-client/dist/interfaces'\nimport classNames from 'classnames'\nimport React from 'react'\nimport { useAppDispatch, useAppSelector } from '../../app/hooks'\nimport {\n  selectDocument,\n  selectDocuments,\n  selectSelectedDocument,\n} from './documentSlice'\n\nconst DocumentList = () => {\n  const documents = useAppSelector(selectDocuments)\n  const selectedDocument = useAppSelector(selectSelectedDocument)\n  const dispatch = useAppDispatch()\n  return (\n    <ul>\n      {documents.map(({ uri, access }) => (\n        <li key={uri}>\n          <button\n            className={classNames(\n              'button is-small',\n              uri === selectedDocument && 'is-success',\n            )}\n            disabled={!(access.user.write || access.user.append)}\n            onClick={() => dispatch(selectDocument(uri))}\n          >\n            {uri} {getAccessString(access)}\n          </button>\n        </li>\n      ))}\n    </ul>\n  )\n}\n\n/* little utility functions to say what access there is */\nconst getSingleAccessString = (access: {\n  read: boolean\n  write: boolean\n  append: boolean\n}) => {\n  let response = ''\n  if (access.read) response += 'R'\n  if (access.write) response += 'W'\n  if (access.append) response += 'A'\n  return response\n}\n\nconst getAccessString = (access: EffectiveAccess): string => {\n  let response = getSingleAccessString(access.user)\n\n  if (access.public) {\n    response += ' '\n    response += getSingleAccessString(access.public)\n  }\n\n  return response || 'none'\n}\n\nexport default DocumentList\n","import React from 'react'\nimport AppButton from '../../components/AppButton'\nimport withModal from '../../components/withModal'\nimport DocumentList from '../document/DocumentList'\n\nconst Button = ({ ...props }) => (\n  <AppButton {...props}>\n    <i className=\"icon icon-document\" aria-label=\"Math Documents\" />\n  </AppButton>\n)\n\nconst DocumentControl = withModal(Button, DocumentList, 'Math Documents')\n\nexport default DocumentControl\n","import React from 'react'\nimport { useAppDispatch, useAppSelector } from '../../app/hooks'\nimport AppButton from '../../components/AppButton'\nimport { selectIsLoggedIn } from '../login/loginSlice'\nimport { createMath } from '../math/mathSlice'\nimport AddButtonWithMenu from './AddButtonWithMenu'\nimport DocumentControl from './DocumentControl'\n\nconst ControlPanel: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({\n  ...props\n}) => {\n  const dispatch = useAppDispatch()\n  const isLoggedIn = useAppSelector(selectIsLoggedIn)\n  return (\n    <div {...props}>\n      <AppButton\n        aria-label=\"people\"\n        onClick={() => alert('people control not implemented')}\n      >\n        <i className=\"icon icon-users\" />\n      </AppButton>\n\n      <DocumentControl />\n\n      {isLoggedIn && (\n        <AddButtonWithMenu\n          buttonProps={{}}\n          menuProps={{\n            onAddMath: () => dispatch(createMath(true)),\n          }}\n        />\n      )}\n    </div>\n  )\n}\n\nexport default ControlPanel\n","import { createSelector, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { RootState } from '../../app/store'\nimport { selectGraph } from '../math/mathSlice'\nimport { Graph, GraphNode } from '../math/types'\n\ninterface SearchState {\n  query: string\n  queryAutocomplete: string\n}\n\nconst initialState: SearchState = {\n  query: '',\n  queryAutocomplete: '',\n}\n\nexport const searchSlice = createSlice({\n  name: 'search',\n  initialState,\n  reducers: {\n    setSearch: (state, action: PayloadAction<string>) => {\n      state.query = action.payload\n    },\n    setAutocomplete: (state, action: PayloadAction<string>) => {\n      state.queryAutocomplete = action.payload\n    },\n  },\n})\n\nexport const { setSearch, setAutocomplete } = searchSlice.actions\n\n// Selectors\nexport const selectSearch = (state: RootState) => state.search.query\nexport const selectAutocomplete = (state: RootState) =>\n  state.search.queryAutocomplete\n\nconst search = (\n  query: string,\n  graph: Graph,\n): { label: string; value: string }[] => {\n  if (query.length < 2) return []\n  return Object.values(graph)\n    .filter(\n      ({ label }) => label.en.toLowerCase().includes(query.toLowerCase()),\n      //*|| uri.toLowerCase().includes(query.toLowerCase()),\n    )\n    .sort(\n      ({ dependents: a }, { dependents: b }) =>\n        Object.values(b).length - Object.values(a).length,\n    )\n    .map(({ uri, label: { en: label } }) => ({ value: uri, label }))\n    .slice(0, 10)\n}\n\n// This just returns full GraphNodes instead of limited info\nconst searchFull = (query: string, graph: Graph): GraphNode[] => {\n  if (query.length < 2) return []\n  return Object.values(graph)\n    .filter(\n      ({ label }) => label.en.toLowerCase().includes(query.toLowerCase()),\n      //*|| uri.toLowerCase().includes(query.toLowerCase()),\n    )\n    .sort(\n      ({ dependents: a }, { dependents: b }) =>\n        Object.values(b).length - Object.values(a).length,\n    )\n    .slice(0, 10)\n}\n\nexport const selectSearchResults = createSelector(\n  selectSearch,\n  selectGraph,\n  search,\n)\n\nexport const selectAutocompleteResults = createSelector(\n  selectAutocomplete,\n  selectGraph,\n  searchFull,\n)\n\nexport default searchSlice.reducer\n","import React, { HTMLAttributes, useState } from 'react'\nimport { useCallback } from 'react'\nimport { useEffect } from 'react'\nimport { useAppDispatch, useAppSelector } from '../../app/hooks'\nimport AppButton from '../../components/AppButton'\nimport { highlight, select } from '../math/mathSlice'\nimport { selectSearch, selectSearchResults, setSearch } from './searchSlice'\n\nconst Search: React.FC<HTMLAttributes<HTMLDivElement>> = ({ ...props }) => {\n  const value = useAppSelector(selectSearch)\n  const options = useAppSelector(selectSearchResults)\n  const dispatch = useAppDispatch()\n  const [open, setOpen] = useState(false)\n\n  const clear = useCallback(() => {\n    setOpen(false)\n    dispatch(setSearch(''))\n  }, [dispatch])\n\n  useEffect(() => {\n    const handleEsc = (e: KeyboardEvent) => {\n      if (e.key === 'Escape') {\n        clear()\n      }\n    }\n    document.addEventListener('keydown', handleEsc, false)\n    return () => document.removeEventListener('keydown', handleEsc, false)\n  }, [clear])\n\n  return open ? (\n    <div {...props} className=\"box p-0\">\n      <p className=\"control has-icons-right\">\n        <input\n          autoFocus\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search\"\n          value={value}\n          onChange={e => dispatch(setSearch(e.target.value))}\n        />\n        <span className=\"icon is-right\">\n          <i className=\"icon icon-search\" />\n        </span>\n      </p>\n      <div className=\"menu\">\n        <ul className=\"menu-list\">\n          {options.map(({ value, label }) => (\n            <li\n              key={value}\n              title={value}\n              onMouseEnter={() => dispatch(highlight(value))}\n              onMouseLeave={() => dispatch(highlight(''))}\n            >\n              <a\n                onClick={() => {\n                  dispatch(select(value))\n                  clear()\n                }}\n              >\n                {label}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  ) : (\n    <AppButton onClick={() => setOpen(true)}>\n      <i className=\"icon icon-search\" />\n    </AppButton>\n  )\n}\n\nexport default Search\n","import classNames from 'classnames'\nimport React, { HTMLAttributes } from 'react'\nimport { useAppDispatch, useAppSelector } from '../../app/hooks'\nimport { clearInfo, InfoState, selectInfo } from './infoSlice'\n\ninterface InfoProps extends HTMLAttributes<HTMLDivElement> {\n  info: InfoState\n  onClose: () => void\n}\n\nconst Info = ({ info, onClose, ...props }: InfoProps) => {\n  if (!info.message) return null\n  const notiStyle =\n    info.type === 'success'\n      ? 'success'\n      : info.type === 'error'\n      ? 'danger'\n      : 'info'\n  return (\n    <div {...props}>\n      <div className={classNames('notification', `is-${notiStyle}`)}>\n        <button className=\"delete\" onClick={onClose}></button>\n        {info.message}\n      </div>\n    </div>\n  )\n}\n\nconst InfoContainer = ({ ...props }) => {\n  const info = useAppSelector(selectInfo)\n  const dispatch = useAppDispatch()\n\n  return <Info info={info} onClose={() => dispatch(clearInfo())} {...props} />\n}\n\nexport default InfoContainer\n","/*\n * based on the following example\n * https://github.com/rexxars/react-markdown/issues/10#issuecomment-347763068\n */\n\nimport React from 'react'\nimport 'katex/dist/katex.min.css'\nimport ReactMarkdown from 'react-markdown'\nimport remarkMath from 'remark-math'\nimport styled from 'styled-components'\nimport rehypeKatex from 'rehype-katex'\n\nconst Styler = styled.div`\n  img {\n    max-width: 100%;\n  }\n`\n\nexport default function Math({ children }: { children: string }) {\n  const props = {\n    children,\n    remarkPlugins: [remarkMath],\n    rehypePlugins: [rehypeKatex],\n  }\n  return (\n    <Styler>\n      <ReactMarkdown {...props} />\n    </Styler>\n  )\n}\n","import React from 'react'\nimport Math from '../Math'\nimport { GraphNode } from '../types'\n\nexport const NodeDescription = ({ node }: { node: GraphNode }) => (\n  <Math>{node.description.en}</Math>\n)\n\nexport const NodeDescriptionEdit = ({\n  value,\n  onChange,\n}: {\n  value: string\n  onChange: (value: string) => void\n}) => {\n  return (\n    <>\n      <span className=\"has-text-grey is-size-7\">\n        You can use{' '}\n        <a href=\"https://www.markdownguide.org/basic-syntax/\">Markdown</a> and{' '}\n        <a href=\"http://asciimath.org/\">AsciiMath</a> (use $inline math$ and\n        $$multiline math$$).\n      </span>\n      <textarea\n        className=\"textarea\"\n        placeholder=\"description\"\n        value={value}\n        onChange={e => onChange(e.target.value)}\n      />\n      <Math>{value}</Math>\n    </>\n  )\n}\n","import React from 'react'\n\ninterface EditProps {\n  value: string\n  onChange: (label: string) => void\n}\n\nexport const NodeLabelEdit = ({ value, onChange }: EditProps) => {\n  return (\n    <input\n      className=\"input is-small\"\n      type=\"text\"\n      placeholder=\"label\"\n      value={value}\n      onChange={e => onChange(e.target.value)}\n      size={10}\n    />\n  )\n}\n\nexport const NodeLabel = ({ uri, label }: { uri: string; label: string }) => (\n  <a href={uri}>{label}</a>\n)\n","import React from 'react'\nimport ReactTags, { TagComponentProps } from 'react-tag-autocomplete'\nimport { useAppDispatch, useAppSelector } from '../../../app/hooks'\nimport {\n  selectAutocompleteResults,\n  setAutocomplete,\n} from '../../search/searchSlice'\nimport { highlight, select } from '../mathSlice'\nimport { GraphNode } from '../types'\nimport './react-tag-autocomplete.css'\n\ninterface NodeListProps {\n  title: string\n  nodes: GraphNode[]\n}\n\nexport const NodeList: React.FC<NodeListProps> = ({\n  title,\n  nodes,\n}: NodeListProps) => {\n  const dispatch = useAppDispatch()\n  return (\n    <>\n      <header className=\"card-header\">\n        <p className=\"card-header-title\">\n          {title}: {nodes.length}\n        </p>\n      </header>\n      <section className=\"card-content\">\n        <ul className=\"buttons are-small\">\n          {nodes.map(node => (\n            <li\n              onClick={() => dispatch(select(node.uri))}\n              onMouseEnter={() => dispatch(highlight(node.uri))}\n              onMouseLeave={() => dispatch(highlight(''))}\n              key={node.uri}\n              className=\"button is-link is-inverted\"\n            >\n              {node.label.en}\n            </li>\n          ))}\n        </ul>\n      </section>\n    </>\n  )\n}\n\nexport const NodeListEdit = ({\n  title,\n  nodes,\n  onAddNode,\n  onRemoveNode,\n}: {\n  title: string\n  nodes: GraphNode[]\n  onAddNode: (node: GraphNode) => void\n  onRemoveNode: (node: GraphNode) => void\n}) => {\n  const dispatch = useAppDispatch()\n\n  const handleAdd = (tag: { id: string | number; name: string }) => {\n    const fullTag = suggestionsRaw.find(s => s.uri === tag.id)\n    if (fullTag) {\n      onAddNode(fullTag)\n    }\n  }\n\n  const handleRemove = (a: number) => {\n    onRemoveNode(nodes[a])\n  }\n\n  const tags = Object.values(nodes).map(({ uri, label }) => ({\n    id: uri,\n    name: label.en,\n  }))\n\n  const suggestionsRaw = useAppSelector(selectAutocompleteResults)\n\n  const suggestions = suggestionsRaw.map(({ label, uri }) => ({\n    id: uri,\n    name: label.en,\n  }))\n\n  return (\n    <>\n      <header className=\"card-header\">\n        <p className=\"card-header-title\">\n          {title}: {nodes.length}\n        </p>\n      </header>\n      <section className=\"card-content\">\n        <ReactTags\n          suggestions={suggestions}\n          tags={tags}\n          onInput={value => dispatch(setAutocomplete(value))}\n          onAddition={handleAdd}\n          onDelete={handleRemove}\n          placeholderText=\"Add a dependency\"\n          removeButtonText=\"Remove the dependency\"\n          classNames={{\n            root: 'react-tags',\n            rootFocused: 'is-focused',\n            selected: 'react-tags__selected tags',\n            selectedTag: 'react-tags__selected-tag',\n            selectedTagName: 'react-tags__selected-tag-name',\n            search: 'react-tags__search',\n            searchInput: 'react-tags__search-input',\n            suggestions: 'react-tags__suggestions',\n            suggestionActive: 'is-active',\n            suggestionDisabled: 'is-disabled',\n          }}\n          allowBackspace={false}\n          tagComponent={TagComponent}\n        />\n      </section>\n    </>\n  )\n}\n\nconst TagComponent = ({\n  tag,\n  removeButtonText,\n  onDelete,\n}: TagComponentProps) => {\n  return (\n    <span className=\"tag is-info\">\n      {tag.name}\n      <button\n        title={removeButtonText}\n        onClick={onDelete}\n        className=\"delete is-small\"\n      ></button>\n    </span>\n  )\n}\n","import React from 'react'\nimport { GraphNode } from '../types'\n\ninterface EditProps {\n  value: GraphNode['type'] | ''\n  onChange: (type: GraphNode['type'] | '') => void\n}\n\nexport const NodeTypeEdit = ({ value, onChange }: EditProps) => {\n  const availableTypes: GraphNode['type'][] = ['definition', 'statement']\n\n  return (\n    <div className=\"tags\">\n      {!value ? (\n        availableTypes.map(type => (\n          <span\n            key={type}\n            className=\"tag is-info is-light\"\n            onClick={() => onChange(type)}\n          >\n            {type}\n          </span>\n        ))\n      ) : (\n        <span className=\"tag is-info\">\n          {value}\n          <button\n            className=\"delete is-small\"\n            onClick={() => onChange('')}\n          ></button>\n        </span>\n      )}\n    </div>\n  )\n}\n\nexport const NodeType = ({ value }: { value: GraphNode['type'] }) => (\n  <span className=\"tag is-info\">{value}</span>\n)\n","import React, { useCallback, useEffect, useState } from 'react'\nimport { useAppDispatch, useAppSelector } from '../../../app/hooks'\nimport {\n  selectDocument,\n  selectSelectedDocument,\n  selectWriteAppendDocuments,\n} from '../../document/documentSlice'\nimport { selectWebId } from '../../login/loginSlice'\nimport {\n  createNode,\n  selectCreateMath,\n  selectSelectedNode,\n  updateNode,\n} from '../mathSlice'\nimport { GraphNode } from '../types'\nimport { NodeDescriptionEdit } from './NodeDescription'\nimport { NodeLabelEdit } from './NodeLabel'\nimport { NodeListEdit } from './NodeList'\nimport { NodeTypeEdit } from './NodeType'\n\nconst StatementEdit = ({ onFinish }: { onFinish: () => void }) => {\n  const dispatch = useAppDispatch()\n  const isNew = useAppSelector(selectCreateMath)\n  const node = useAppSelector(selectSelectedNode)\n  const availableDocuments = useAppSelector(selectWriteAppendDocuments)\n  const selectedDocument = useAppSelector(selectSelectedDocument)\n  const webId = useAppSelector(selectWebId)\n\n  const [type, setType] = useState<GraphNode['type'] | ''>(\n    isNew ? '' : node.type,\n  )\n  const [label, setLabel] = useState(isNew ? '' : node.label.en)\n  const [description, setDescription] = useState(\n    isNew ? '' : node.description.en,\n  )\n  const [dependencies, setDependencies] = useState(\n    isNew ? [] : Object.values(node.dependencies),\n  )\n\n  // @TODO validation should be better than this\n  const isValid =\n    type && label && description && (selectedDocument || node.document)\n\n  const setInitial = useCallback(() => {\n    setType(isNew ? '' : node.type)\n    setLabel(isNew ? '' : node.label.en)\n    setDescription(isNew ? '' : node.description.en)\n    setDependencies(isNew ? [] : Object.values(node.dependencies))\n  }, [node, isNew])\n\n  const handleAddNode = (node: GraphNode) => {\n    setDependencies(deps => [...deps, node])\n  }\n\n  const handleRemoveNode = (node: GraphNode) => {\n    setDependencies(deps => deps.filter(n => n.uri !== node.uri))\n  }\n\n  const handleSave = () => {\n    if (!type) throw new Error('please select a type')\n    if (!label) throw new Error('please specify a label')\n    if (!description) throw new Error('please write a description')\n    if (isNew && !selectedDocument) throw new Error('please select a document')\n    isNew\n      ? dispatch(\n          createNode({\n            type,\n            label: { en: label },\n            description: { en: description },\n            dependencies: dependencies.map(({ uri }) => uri),\n            document: selectedDocument,\n          }),\n        )\n      : dispatch(\n          updateNode({\n            type,\n            label: { en: label },\n            description: { en: description },\n            dependencies: dependencies.map(({ uri }) => uri),\n            id: node.uri,\n            document: node.document.id,\n          }),\n        )\n    handleCancel()\n  }\n\n  useEffect(() => {\n    setInitial()\n  }, [node, setInitial])\n\n  const handleCancel = () => {\n    setInitial()\n    onFinish()\n  }\n\n  return (\n    <div className=\"card\">\n      <header className=\"card-header\">\n        <div className=\"card-header-title\">\n          <div className=\"block is-flex-grow-1\">\n            <div className=\"title is-6\">\n              {isNew ? (\n                'Create a new Math'\n              ) : (\n                <>\n                  Edit a {node.type} <i>{node.label.en}</i>\n                </>\n              )}\n            </div>\n            <div className=\"field\">\n              <NodeLabelEdit value={label} onChange={setLabel} />\n            </div>\n            <div className=\"field\">\n              <NodeTypeEdit value={type} onChange={setType} />\n            </div>\n            {isNew && (\n              <div className=\"field select\">\n                <select\n                  value={selectedDocument}\n                  onChange={e => dispatch(selectDocument(e.target.value))}\n                >\n                  <option hidden disabled value=\"\">\n                    {' -- select a document to save to -- '}\n                  </option>\n                  {availableDocuments.map(doc => (\n                    <option key={doc.uri} value={doc.uri}>\n                      {removeCommonPart(doc.uri, webId)}\n                    </option>\n                  ))}\n                </select>\n              </div>\n            )}\n          </div>\n        </div>\n        <button\n          className=\"card-header-icon\"\n          aria-label=\"cancel editing\"\n          title=\"cancel editing\"\n          onClick={handleCancel}\n        >\n          <i\n            className=\"icon icon-cancel has-text-danger\"\n            aria-hidden=\"true\"\n          ></i>\n        </button>\n        <button\n          className={`card-header-icon has-text-${\n            isValid ? 'success' : 'grey-light'\n          }`}\n          aria-label=\"save changes\"\n          title=\"save changes\"\n          onClick={handleSave}\n          disabled={!isValid}\n        >\n          <i className=\"icon icon-ok\" aria-hidden=\"true\"></i>\n        </button>\n      </header>\n      <section className=\"card-content\">\n        <NodeDescriptionEdit value={description} onChange={setDescription} />\n      </section>\n      <NodeListEdit\n        title=\"dependencies\"\n        nodes={dependencies}\n        onAddNode={handleAddNode}\n        onRemoveNode={handleRemoveNode}\n      />\n      <footer className=\"card-footer\">\n        <button\n          className=\"card-header-icon card-footer-item\"\n          aria-label=\"cancel editing\"\n          title=\"cancel editing\"\n          onClick={handleCancel}\n        >\n          <i\n            className=\"icon icon-cancel has-text-danger\"\n            aria-hidden=\"true\"\n          ></i>{' '}\n          Cancel\n        </button>\n        <button\n          className={`card-header-icon card-footer-item has-text-${\n            isValid ? 'success' : 'grey-light'\n          }`}\n          aria-label=\"save changes\"\n          title=\"save changes\"\n          onClick={handleSave}\n          disabled={!isValid}\n        >\n          <i className=\"icon icon-ok\" aria-hidden=\"true\"></i> Save\n        </button>\n      </footer>\n    </div>\n  )\n}\n\nconst removeCommonPart = (input: string, base: string): string => {\n  const ba = base.split('/')\n  const ia = input.split('/')\n  const i = ia.findIndex((a, i) => a !== ba[i])\n\n  if (i < 3) return input\n  else return ia.slice(i).join('/')\n}\n\nexport default StatementEdit\n","import React, { useState } from 'react'\nimport { useAppDispatch, useAppSelector } from '../../../app/hooks'\nimport withModal from '../../../components/withModal'\nimport { deleteNode, select, selectSelectedNode } from '../mathSlice'\nimport { GraphNode } from '../types'\nimport { NodeDescription } from './NodeDescription'\nimport { NodeLabel } from './NodeLabel'\nimport { NodeList } from './NodeList'\nimport { NodeType } from './NodeType'\n\nconst DeleteButton = ({ ...props }) => (\n  <button {...props} className=\"button is-danger is-inverted\">\n    Delete Node\n  </button>\n)\n\nconst DeleteModal = ({\n  uri,\n  onFinish = () => null,\n  onDelete,\n  ...props\n}: {\n  uri: string\n  onFinish?: () => void\n  onDelete: () => void\n}) => {\n  const code = new URL(uri).hash || String(Date.now())\n  const [value, setValue] = useState('')\n\n  const isDisabled = code !== value\n\n  const handleDelete = () => {\n    onFinish()\n    onDelete()\n  }\n\n  return (\n    <div {...props}>\n      If yes, please retype the text <code>{code}</code> below.\n      <div className=\"field\">\n        <input\n          maxLength={code.length}\n          className=\"input\"\n          type=\"text\"\n          value={value}\n          onChange={e => setValue(e.target.value)}\n        />\n      </div>\n      <div className=\"buttons\">\n        <button\n          className=\"button is-danger\"\n          disabled={isDisabled}\n          onClick={handleDelete}\n        >\n          Delete\n        </button>\n        <button className=\"button is-info is-inverted\" onClick={onFinish}>\n          Cancel\n        </button>\n      </div>\n    </div>\n  )\n}\n\nconst DeleteButtonWithModal = withModal(DeleteButton, DeleteModal)\n\nconst StatementView = ({ onEdit }: { onEdit: () => void }) => {\n  const dispatch = useAppDispatch()\n  const onSelectNode = (uri: string) => dispatch(select(uri))\n  const node = useAppSelector(selectSelectedNode)\n\n  if (node.label.en === 'aa') console.log(node)\n\n  const dependencies: GraphNode[] = Object.values(node.dependencies)\n  const dependents: GraphNode[] = Object.values(node.dependents)\n\n  const isEditable = node.document.access.user.write\n\n  return (\n    <div className=\"card\">\n      <header className=\"card-header\">\n        <div className=\"card-header-title\">\n          <div>\n            <div>\n              <NodeLabel uri={node.uri} label={node.label.en} />\n            </div>\n            <div>\n              <NodeType value={node.type} />\n            </div>\n          </div>\n        </div>\n        {isEditable && (\n          <button\n            className=\"card-header-icon\"\n            aria-label=\"edit label\"\n            onClick={onEdit}\n          >\n            <i className=\"icon icon-edit\" aria-hidden=\"true\"></i>\n          </button>\n        )}\n        <span className=\"card-header-icon\">\n          <button\n            className=\"delete\"\n            aria-label=\"close\"\n            onClick={() => onSelectNode('')}\n          >\n            close\n          </button>\n        </span>\n      </header>\n      <section className=\"card-content\">\n        <NodeDescription node={node} />\n      </section>\n      <NodeList title=\"dependencies\" nodes={dependencies} />\n      <NodeList title=\"dependents\" nodes={dependents} />\n      {isEditable && (\n        <>\n          <header className=\"card-header\">\n            <p className=\"card-header-title has-text-danger\">Danger Zone</p>\n          </header>\n          <section className=\"card-content has-background-danger\">\n            <DeleteButtonWithModal\n              title={`Do you really want to delete ${node.type} ${node.label.en}?`}\n              contentProps={{\n                uri: node.uri,\n                onDelete: () => dispatch(deleteNode(node)),\n              }}\n            />\n          </section>\n        </>\n      )}\n    </div>\n  )\n}\n\nexport default StatementView\n","import React, { useEffect, useState } from 'react'\nimport { useAppDispatch, useAppSelector } from '../../../app/hooks'\nimport { createMath, selectCreateMath, selectSelected } from '../mathSlice'\nimport StatementEdit from './StatementEdit'\nimport StatementView from './StatementView'\n\n/** We show info of selected node, or edit the info */\n\nconst Statement = () => {\n  const [edit, setEdit] = useState(false)\n  const selectedNode = useAppSelector(selectSelected)\n  const createNew = useAppSelector(selectCreateMath)\n  const dispatch = useAppDispatch()\n\n  // when we switch the node, we disable editing\n  useEffect(() => {\n    setEdit(false)\n  }, [selectedNode])\n\n  if (createNew)\n    return <StatementEdit onFinish={() => dispatch(createMath(false))} />\n\n  if (!selectedNode) return null\n\n  if (edit) return <StatementEdit onFinish={() => setEdit(false)} />\n\n  return <StatementView onEdit={() => setEdit(true)} />\n}\n\nexport default Statement\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst ICOutside = styled.div`\n  position: fixed;\n  width: 100%;\n  top: 0;\n  bottom: 0;\n  pointer-events: none;\n  overflow-x: hidden;\n  overflow-y: auto;\n`\nconst ICInside = styled.div`\n  pointer-events: all;\n  overflow-x: auto;\n  width: 100%;\n`\n\nconst InfoContainer = ({ children }: { children: React.ReactNode }) => (\n  <ICOutside>\n    <div className=\"columns mr-1 mt-6\">\n      <div className=\"column is-one-quarter is-offset-three-quarters\">\n        <ICInside>{children}</ICInside>\n      </div>\n    </div>\n  </ICOutside>\n)\n\nexport default InfoContainer\n","import React from 'react'\nimport Login from '../features/login/Login'\nimport VisualizationContainer from '../features/math/visualization/VisualizationContainer'\nimport styled from 'styled-components'\nimport About from './About'\nimport ControlPanel from '../features/control/ControlPanel'\nimport Search from '../features/search/Search'\nimport Info from '../features/info/Info'\nimport Statement from '../features/math/statement/Statement'\nimport InfoContainer from '../features/math/InfoContainer'\n\nconst PositionedAbout = styled(About)`\n  position: fixed;\n  bottom: 1rem;\n  right: 1rem;\n`\n\nconst PositionedInfo = styled(Info)`\n  position: fixed;\n  bottom: 0.5rem;\n  left: 0.5rem;\n`\n\nconst FullSizeVisualization = styled(VisualizationContainer)`\n  height: 100vh;\n  width: 100vw;\n  display: block;\n`\n\nconst TopNav = styled.nav`\n  display: flex;\n  position: absolute;\n  width: 100%;\n  pointer-events: none;\n  justify-content: space-between;\n  & > * {\n    pointer-events: all;\n  }\n  padding: 1rem;\n`\n\nconst PositionedStatement = () => (\n  <InfoContainer>\n    <Statement />\n  </InfoContainer>\n)\n\nconst Layout: React.FC = () => {\n  return (\n    <>\n      <TopNav>\n        <ControlPanel />\n        <div style={{ display: 'flex' }}>\n          <Search\n            style={{\n              display: 'inline-block',\n              position: 'relative',\n              zIndex: 2,\n            }}\n          />\n          <Login />\n        </div>\n      </TopNav>\n\n      <PositionedAbout />\n\n      <PositionedInfo />\n\n      <PositionedStatement />\n\n      <FullSizeVisualization />\n    </>\n  )\n}\n\nexport default Layout\n","import React, { useEffect } from 'react'\nimport Layout from './components/Layout'\nimport { init as initLogin } from './features/login/loginSlice'\nimport { useAppDispatch } from './app/hooks'\n\nconst App: React.FC = () => {\n  const dispatch = useAppDispatch()\n  useEffect(() => {\n    dispatch(initLogin())\n  }, [dispatch])\n\n  return <Layout />\n}\n\nexport default App\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit'\nimport loginReducer from '../features/login/loginSlice'\nimport mathReducer from '../features/math/mathSlice'\nimport searchReducer from '../features/search/searchSlice'\nimport documentReducer from '../features/document/documentSlice'\nimport infoReducer from '../features/info/infoSlice'\n\nexport const store = configureStore({\n  reducer: {\n    login: loginReducer,\n    math: mathReducer,\n    search: searchReducer,\n    document: documentReducer,\n    info: infoReducer,\n  },\n})\n\nexport type AppDispatch = typeof store.dispatch\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport './fonts/fontello/css/fontello.css'\nimport './fonts/animation.css'\nimport App from './App'\nimport { store } from './app/store'\nimport reportWebVitals from './reportWebVitals'\nimport { Provider } from 'react-redux'\nimport Modal from 'react-modal'\n\nif (typeof document === 'object') {\n  const appElement = document.querySelector('#root') as HTMLElement\n\n  Modal.setAppElement(appElement)\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}