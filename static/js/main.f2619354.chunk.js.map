{"version":3,"sources":["components/Visualization.tsx","contexts/session.ts","components/Login.tsx","helpers/draw.ts","hooks/graph.ts","simulation/index.ts","simulation/gravity.ts","algorithms.ts","components/Math.tsx","components/Statement.tsx","dataTest.ts","components/VisualizationContainer.tsx","components/DataContainer.tsx","components/PeopleList.tsx","components/Layout.tsx","App.tsx","reportWebVitals.ts","components/SessionProvider.tsx","index.tsx"],"names":["old","SessionContext","createContext","Login","className","props","useState","loading","setLoading","useContext","info","setInfo","useEffect","handleIncomingRedirect","url","window","location","href","restorePreviousSession","then","newInfo","catch","e","console","log","finally","handleLogin","a","login","oidcIssuer","redirectUrl","clientName","handleLogout","logout","commonProps","isLoggedIn","onClick","webId","drawText","context","text","options","x","y","font","textBaseline","textAlign","Object","assign","fillText","drawCircle","radius","beginPath","arc","Math","PI","fill","drawLine","start","end","moveTo","lineTo","stroke","Visualization","graph","grid","onTransform","onHover","onSelectNode","canvasEl","useRef","width","height","setVisualizationSize","current","getContext","offset","save","translate","clearRect","strokeStyle","min1","max1","min0","max0","getLineWidth","i","highlight","distance","origin","lineWidth","drawGrid","links","forEach","link","source","target","accentedColor","accented","nodes","filter","style","focused","rest","fillStyle","label","restore","updateCanvasSize","size","elementRef","clientHeight","clientWidth","getElementSize","addEventListener","removeEventListener","select","call","drag","clickDistance","on","dx","dy","zoom","scaleExtent","transform","k","numeric","dot","inv","withCanvasPosition","func","rect","getBoundingClientRect","clientX","left","clientY","top","handleMouseMove","handleClick","ref","onMouseMove","onMouseOut","Infinity","classnames","ensureNode","uri","type","description","dependsOn","fetcher","getSolidDataset","fetch","Simulation","runs","simulation","forceSimulation","alphaDecay","force","forceLink","id","node","strength","alpha","d","vy","optimumDifference","_","forceGravity","forceManyBody","distanceMax","forceX","forceY","forceCollide","forceCenter","stop","onTick","map","restart","update","random","selectNode","find","prune","input","graphlib","Graph","values","setNode","dependency","setEdge","output","fromEntries","entries","alg","isAcyclic","Error","edges","edge","removeEdge","dijkstra","v","w","pruneCore","Styler","styled","div","children","remarkPlugins","remarkMath","rehypePlugins","rehypeKatex","Statement","dependencies","position","bottom","pointerEvents","overflowY","overflowX","length","findMathDocumentsOfPerson","dataset","me","getThing","publicTypeIndex","getTerm","solid","value","index","things","getThingAll","mathDocuments","thing","getTermAll","forClass","includes","instance","flat","findFriends","getResourceUrl","person","friends","foaf","knows","BFSFriends","onChange","fixUri","timbl","visited","people","keys","unvisitedPerson","resourceUrl","URL","hash","match","begin","matrix","vector","raw","transpose","basicGrid","VisualizationContainer","layout","setLayout","highlightedNode","setHighlightedNode","selectedNode","setSelectedNode","useSwr","data","revalidate","response","setResponse","asUrl","rdf","dct","rdfs","reduce","useGraph","setMatrix","lastUpdate","Date","now","prunedOrFullGraph","pruneGraph","push","withNode","action","handleHover","handleSelect","selectedNodeDependencies","selectedNodeUri","selectNodeDependencies","transformedLayout","highlighted","selected","selectedDependencies","transformedNodesDict","sourceUri","targetUri","transformLayout","transformGrid","prevMatrix","PeopleContext","DocumentsContext","DataContainer","setPeople","setMathDocuments","documents","state","notAddedYet","doc","stateDoc","owner","access","Provider","PeopleList","PositionedLogin","PositionedPeopleList","FullSizeVisualization","Layout","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","SessionProvider","sessionInfo","setSessionInfo","document","appElement","querySelector","Modal","setAppElement","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f2619354.chunk.js","sourcesContent":["import React, { useRef, useEffect, useState } from 'react'\nimport {\n  Vector,\n  Grid,\n  drawGrid,\n  drawCircle,\n  drawLine,\n  drawText,\n} from '../helpers/draw'\nimport classnames from 'classnames'\nimport { drag } from 'd3-drag'\nimport { zoom } from 'd3-zoom'\nimport { select } from 'd3-selection'\nimport numeric from 'numeric'\nimport { VisualizationGraph } from './VisualizationContainer'\n\ntype Props = Partial<React.CanvasHTMLAttributes<HTMLCanvasElement>> & {\n  graph: VisualizationGraph\n  grid: Grid\n  onTransform: (matrix: number[][]) => void\n  onHover: (position: Vector) => void\n  onSelectNode: (position: Vector) => void\n}\n\nlet old: number[][]\n\nconst Visualization: React.FC<Props> = ({\n  graph,\n  grid,\n  onTransform,\n  onHover,\n  onSelectNode,\n  ...props\n}: Props) => {\n  const canvasEl = useRef<HTMLCanvasElement>(null)\n  const [{ width, height }, setVisualizationSize] = useState({\n    width: 0,\n    height: 0,\n  })\n\n  useEffect(() => {\n    if (canvasEl && canvasEl.current) {\n      const context = canvasEl.current.getContext('2d')\n      if (context) {\n        const offset: Vector = [width / 2, height / 2]\n        context.save()\n        context.translate(...offset)\n        context.clearRect(-offset[0], -offset[1], width, height)\n        drawGrid(context, grid, width, height, offset)\n        graph.links.forEach(link => {\n          drawLine(\n            context,\n            [link.source.x, link.source.y],\n            [link.target.x, link.target.y],\n            {\n              strokeStyle: 'white',\n              lineWidth: 0.5,\n            },\n          )\n        })\n\n        const accentedColor = 'violet' // '#ff5d'\n        const focusedColor = 'red'\n        const accented = graph.nodes.filter(({ style }) => style === 'accent')\n        const focused = graph.nodes.filter(({ style }) => style === 'focus')\n        const rest = graph.nodes.filter(({ style }) => !style)\n\n        // draw all the nodes which are not special\n        rest.forEach(({ x, y }) =>\n          drawCircle(context, [x, y], 10, { fillStyle: '#fff8' }),\n        )\n\n        rest.forEach(({ x, y, label }) =>\n          drawText(context, [x + 15, y], label, { fillStyle: '#fff4' }),\n        )\n\n        // draw accented nodes\n        accented.forEach(({ x, y }) =>\n          drawCircle(context, [x, y], 10, { fillStyle: accentedColor }),\n        )\n\n        accented.forEach(({ x, y, label }) =>\n          drawText(context, [x + 15, y], label, { fillStyle: accentedColor }),\n        )\n\n        // draw accented nodes\n        focused.forEach(({ x, y }) =>\n          drawCircle(context, [x, y], 10, { fillStyle: focusedColor }),\n        )\n\n        focused.forEach(({ x, y, label }) =>\n          drawText(context, [x + 15, y], label, { fillStyle: focusedColor }),\n        )\n\n        return () => context.restore()\n      }\n    }\n  }, [width, height, graph, canvasEl, grid])\n\n  useEffect(() => {\n    const updateCanvasSize = () => {\n      if (canvasEl && canvasEl.current) {\n        const size = getElementSize(canvasEl)\n        setVisualizationSize(size)\n      }\n    }\n\n    updateCanvasSize()\n    window.addEventListener('load', updateCanvasSize)\n    window.addEventListener('resize', updateCanvasSize)\n\n    return () => {\n      window.removeEventListener('resize', updateCanvasSize)\n      window.removeEventListener('load', updateCanvasSize)\n    }\n  }, [width, height, canvasEl])\n\n  useEffect(() => {\n    if (canvasEl && canvasEl.current) {\n      select(canvasEl.current).call(\n        drag<HTMLCanvasElement, unknown>()\n          .clickDistance(2)\n          //.on('start', console.log)\n          .on('drag', e => {\n            onTransform([\n              [1, 0, e.dx],\n              [0, 1, e.dy],\n              [0, 0, 1],\n            ])\n          }),\n        //.on('end', console.log),\n      )\n\n      select(canvasEl.current).call(\n        zoom<HTMLCanvasElement, unknown>()\n          .clickDistance(2)\n          .scaleExtent([0.05, 3])\n          .on('zoom', e => {\n            old = old ?? [\n              [1, 0, -width / 2],\n              [0, 1, -height / 2],\n              [0, 0, 1],\n            ]\n            const { x, y, k } = e.transform\n\n            const zoom = [\n              [k, 0, x - width / 2],\n              [0, k, y - height / 2],\n              [0, 0, 1],\n            ]\n\n            const transform = numeric.dot(zoom, numeric.inv(old)) as number[][]\n            old = zoom\n\n            onTransform(transform)\n          }),\n      )\n    }\n  }, [canvasEl, onTransform, height, width])\n\n  const withCanvasPosition =\n    (\n      func: (position: Vector) => void,\n    ): React.MouseEventHandler<HTMLCanvasElement> =>\n    e => {\n      // https://stackoverflow.com/a/42111623\n      if (canvasEl && canvasEl.current) {\n        const rect = canvasEl.current.getBoundingClientRect()\n        const x = e.clientX - rect.left //x position within the element.\n        const y = e.clientY - rect.top //y position within the element.\n        func([x - width / 2, y - height / 2])\n      }\n    }\n\n  const handleMouseMove = withCanvasPosition(onHover)\n  const handleClick = withCanvasPosition(onSelectNode)\n\n  return (\n    <canvas\n      {...props}\n      ref={canvasEl}\n      onMouseMove={handleMouseMove}\n      // @TODO this piece is very inefficient, we search for a nonexistent node, just to unhighlight everything; but it works\n      onMouseOut={() => onHover([Infinity, Infinity])}\n      width={width}\n      height={height}\n      className={classnames(props.className, 'has-background-dark')}\n      onClick={handleClick}\n    />\n  )\n}\n\nexport default Visualization\n\nfunction getElementSize(elementRef: React.RefObject<HTMLCanvasElement>) {\n  if (elementRef && elementRef.current) {\n    const { clientHeight: height, clientWidth: width } = elementRef.current\n    return { height, width }\n  } else return { height: 0, width: 0 }\n}\n","import { ISessionInfo } from '@inrupt/solid-client-authn-browser'\nimport React, { createContext } from 'react'\n\nexport type SessionInfo = Required<ISessionInfo>\nexport const SessionContext = createContext<\n  [SessionInfo | null, React.Dispatch<React.SetStateAction<SessionInfo | null>>]\n>([\n  null,\n  () => {\n    return\n  },\n])\n","import React, { useState, useEffect, useContext } from 'react'\nimport {\n  login,\n  logout,\n  handleIncomingRedirect,\n} from '@inrupt/solid-client-authn-browser'\nimport { SessionContext, SessionInfo } from '../contexts/session'\n\ninterface Props {\n  className?: string\n}\n\nconst Login: React.FC<Props> = (\n  { className, ...props }: Props = { className: '' },\n) => {\n  const [loading, setLoading] = useState(true)\n  const [info, setInfo] = useContext(SessionContext)\n  useEffect(() => {\n    setLoading(true)\n    handleIncomingRedirect({\n      url: window.location.href,\n      restorePreviousSession: true,\n    })\n      .then(newInfo => {\n        if (newInfo) setInfo(newInfo as SessionInfo)\n      })\n      .catch(e => {\n        console.log(e)\n        setInfo(null)\n      })\n      .finally(() => {\n        setLoading(false)\n      })\n  }, [setInfo])\n  const handleLogin = async () => {\n    setLoading(true)\n    await login({\n      oidcIssuer: 'https://solidcommunity.net',\n      redirectUrl: window.location.href,\n      clientName: 'Math Livegraph',\n    })\n    setLoading(false)\n  }\n\n  const handleLogout = async () => {\n    setLoading(true)\n    await logout()\n    if (setInfo) setInfo(null)\n    setLoading(false)\n  }\n\n  const commonProps = {\n    ...props,\n    className: `${className} button`,\n  }\n\n  return loading ? (\n    <span {...commonProps}>Loading</span>\n  ) : info?.isLoggedIn ? (\n    <button {...commonProps} onClick={handleLogout}>\n      {info?.webId} Logout\n    </button>\n  ) : (\n    <button {...commonProps} onClick={handleLogin}>\n      Login\n    </button>\n  )\n}\n\nexport default Login\n","export type Vector = [number, number]\n\nexport type Grid = {\n  origin: Vector // coordinate of the origin\n  distance: number // distance between lines\n  highlight: number // which lines should be highlighted\n}\n\ntype Options = Partial<CanvasRenderingContext2D>\n\nexport const drawText = (\n  context: CanvasRenderingContext2D,\n  [x, y]: Vector,\n  text: string,\n  options: Options,\n) => {\n  context.font = '20px Arial'\n  context.textBaseline = 'middle'\n  context.textAlign = 'left'\n  // context.fillStyle = '#fff7'\n  Object.assign(context, options)\n  context.fillText(text, x, y)\n}\n\nexport const drawCircle = (\n  context: CanvasRenderingContext2D,\n  [x, y]: Vector,\n  radius: number,\n  options: Options,\n) => {\n  Object.assign(context, options)\n  context.beginPath()\n  context.arc(x, y, radius, 0, 2 * Math.PI)\n  context.fill()\n}\n\nexport const drawLine = (\n  context: CanvasRenderingContext2D,\n  start: Vector,\n  end: Vector,\n  options: Options,\n) => {\n  Object.assign(context, options)\n\n  context.beginPath()\n  context.moveTo(...start)\n  context.lineTo(...end)\n  context.stroke()\n}\n\nexport const drawGrid = (\n  context: CanvasRenderingContext2D,\n  grid: Grid,\n  width: number,\n  height: number,\n  offset: Vector = [0, 0],\n) => {\n  const strokeStyle = '#fff2'\n  const min1 = -offset[1]\n  const max1 = height - offset[1]\n  const min0 = -offset[0]\n  const max0 = width - offset[0]\n\n  const getLineWidth = (i: number) =>\n    i === 0 ? 2 : i % grid.highlight === 0 ? 1 : 0.5\n\n  let i = 0\n  while (i * grid.distance + grid.origin[0] <= max0) {\n    const x = i * grid.distance + grid.origin[0]\n    if (x >= min0) {\n      drawLine(context, [x, min1], [x, max1], {\n        strokeStyle,\n        lineWidth: getLineWidth(i),\n      })\n    }\n    i++\n  }\n\n  i = -1\n  while (i * grid.distance + grid.origin[0] >= min0) {\n    const x = i * grid.distance + grid.origin[0]\n    if (x <= max0) {\n      drawLine(context, [x, min1], [x, max1], {\n        strokeStyle,\n        lineWidth: getLineWidth(i),\n      })\n    }\n    i--\n  }\n\n  i = 0\n  while (i * grid.distance + grid.origin[1] <= max1) {\n    const y = i * grid.distance + grid.origin[1]\n    if (y >= min1) {\n      drawLine(context, [min0, y], [max0, y], {\n        strokeStyle,\n        lineWidth: getLineWidth(i),\n      })\n    }\n    i++\n  }\n\n  i = -1\n  while (i * grid.distance + grid.origin[1] >= min1) {\n    const y = i * grid.distance + grid.origin[1]\n    if (y <= max1) {\n      drawLine(context, [min0, y], [max0, y], {\n        strokeStyle,\n        lineWidth: getLineWidth(i),\n      })\n    }\n    i--\n  }\n}\n","import { useState, useEffect } from 'react'\nimport {\n  getSolidDataset,\n  SolidDataset,\n  WithResourceInfo,\n  UrlString,\n  getThingAll,\n  getTermAll,\n  getTerm,\n  asUrl,\n} from '@inrupt/solid-client'\nimport { fetch } from '@inrupt/solid-client-authn-browser'\nimport useSwr from 'swr'\nimport { rdf, dct, rdfs } from 'rdf-namespaces'\n\nexport type GraphNode = {\n  type: UrlString\n  uri: UrlString\n  description: string\n  label: string\n  dependsOn: {\n    [uri: string]: GraphNode\n  }\n}\n\nexport type Graph = {\n  [uri: string]: GraphNode\n}\n\n// function: Make sure the given Graph has a node with given uri\n// it checks whether the node exists and creates a node if it doesn't exist\nconst ensureNode = (graph: Graph, uri: UrlString): GraphNode => {\n  graph[uri] = graph[uri] ?? {\n    type: '',\n    description: '',\n    dependsOn: {},\n    label: '',\n  }\n  return graph[uri]\n}\n\nconst fetcher = async (\n  url: UrlString,\n): Promise<SolidDataset & WithResourceInfo> => {\n  return await getSolidDataset(url, { fetch })\n}\n\nexport default function useGraph(): [Graph, () => void] {\n  // download graph\n  const { data, revalidate } = useSwr(\n    'https://mrkvon.solidcommunity.net/public/math/index.ttl',\n    fetcher,\n  )\n\n  const [response, setResponse] = useState<Graph>({})\n\n  // whenever data change, we process them into an object of type Graph\n  useEffect(() => {\n    const graph: Graph = {}\n\n    if (data) {\n      const things = getThingAll(data)\n      things.forEach(thing => {\n        const uri = asUrl(thing)\n        const type = getTerm(thing, rdf.type)?.value ?? ''\n        const description = getTerm(thing, dct.description)?.value ?? ''\n        const label = getTerm(thing, rdfs.label)?.value ?? ''\n        const dependencies = getTermAll(\n          thing,\n          'https://terms.math.livegraph.org#depends_on',\n        )\n        const dependsOn: GraphNode['dependsOn'] = dependencies.reduce(\n          (dependsOn, dependency) => {\n            dependsOn[dependency.value] = ensureNode(graph, dependency.value)\n            return dependsOn\n          },\n          {} as GraphNode['dependsOn'],\n        )\n        Object.assign(ensureNode(graph, uri), {\n          type,\n          description,\n          dependsOn,\n          label,\n          uri,\n        })\n      })\n    }\n\n    setResponse(graph)\n  }, [data])\n\n  return [response, revalidate]\n}\n","import {\n  forceSimulation,\n  forceCollide,\n  forceLink,\n  forceManyBody,\n  forceCenter,\n  forceX,\n  forceY,\n  SimulationNodeDatum,\n  SimulationLinkDatum,\n  ForceLink,\n} from 'd3-force'\nimport forceGravity from './gravity'\nimport { Coords, Uri, SimulationNode, SimulationLink } from './types'\n\ninterface SimulationNodeExt extends SimulationNodeDatum {\n  uri: Uri\n}\n\nexport type SimulationLinkExt = SimulationLinkDatum<SimulationNodeExt>\n\nexport default class Simulation {\n  nodes: SimulationNodeExt[] = []\n  links: SimulationLinkExt[] = []\n\n  runs = false\n\n  simulation = forceSimulation()\n    .alphaDecay(0.005)\n    .force(\n      'link',\n      forceLink()\n        .id(node => (node as SimulationNodeExt).uri)\n        .distance(50)\n        .strength(0.1),\n    )\n    .force('linkGravity', forceGravity().strength(50))\n    .force('charge', forceManyBody().strength(-150).distanceMax(500))\n    .force('gravityX', forceX(0).strength(0.01))\n    .force('gravityY', forceY(0).strength(0.01))\n    .force('collide', forceCollide(15))\n    .force('center', forceCenter(0, 0))\n    .stop()\n\n  start = ({\n    nodes,\n    links,\n    onTick,\n  }: {\n    nodes: SimulationNode[]\n    links: SimulationLink[]\n    onTick: (simulation: {\n      nodes: SimulationNode[]\n      links: SimulationLinkExt[]\n    }) => void\n  }) => {\n    this.nodes = nodes as SimulationNodeExt[]\n    this.links = links.map(link => ({ ...link })) as SimulationLinkExt[]\n\n    this.simulation.nodes(this.nodes)\n    ;(\n      this.simulation.force('link') as ForceLink<\n        SimulationNodeExt,\n        SimulationLinkExt\n      >\n    ).links(this.links)\n    ;(\n      this.simulation.force('linkGravity') as ForceLink<\n        SimulationNodeExt,\n        SimulationLinkExt\n      >\n    ).links(this.links)\n\n    this.simulation.on('tick', () => {\n      onTick({\n        nodes: this.nodes as SimulationNode[],\n        links: this.links,\n      })\n    })\n\n    this.simulation.restart()\n    this.runs = true\n  }\n\n  stop = () => {\n    this.runs = false\n    return this.simulation.stop()\n  }\n\n  update = ({\n    nodes,\n    links,\n  }: {\n    nodes: SimulationNode[]\n    links: SimulationLink[]\n  }) => {\n    this.simulation.stop()\n    this.nodes = nodes.map(node => ({\n      ...node,\n      x: node.x || Math.random() * 400,\n      y: node.y || Math.random() * 400,\n    })) as SimulationNodeExt[]\n    this.links = links.map(link => ({ ...link })) as SimulationLinkExt[]\n\n    this.simulation.nodes(this.nodes)\n    ;(\n      this.simulation.force('link') as ForceLink<\n        SimulationNodeExt,\n        SimulationLinkExt\n      >\n    ).links(this.links)\n    ;(\n      this.simulation.force('linkGravity') as ForceLink<\n        SimulationNodeExt,\n        SimulationLinkExt\n      >\n    ).links(this.links)\n\n    this.simulation.alpha(0.5).restart()\n  }\n\n  selectNode = ({ x, y }: Coords) =>\n    this.simulation.find(x, y, 32) as SimulationNodeExt\n}\n","import { SimulationLinkExt } from './index'\n\nexport default function gravity() {\n  let links: SimulationLinkExt[] = []\n  let strength = 3\n  function force(alpha: number) {\n    const k = strength * alpha\n    links.forEach(function (d) {\n      //// this works\n      // d.source.y = Math.max(d.target.y + 50, d.source.y);\n      //// this is original\n      // d.source.vy += k;\n      // d.target.vy -= k;\n      //\n      //// this works with velocities, so the graph looks less layered\n      const { source, target } = d\n      if (typeof source === 'object' && typeof target === 'object') {\n        if (\n          source.y &&\n          target.y &&\n          source.vy &&\n          target.vy &&\n          source.y < target.y + 50\n        ) {\n          const optimumDifference = (target.y + 50 - source.y) / 50\n          source.vy += k * optimumDifference\n          target.vy -= k * optimumDifference\n        }\n      }\n    })\n  }\n\n  force.links = (_: SimulationLinkExt[]) => {\n    links = _\n    return force\n  }\n\n  force.strength = (_: number) => {\n    strength = _\n    return force\n  }\n\n  return force\n}\n","import graphlib, { Graph } from 'graphlib'\n// import { Dependency } from './simulation/types'\n// import findCyclesAdjacency from 'elementary-circuits-directed-graph'\nimport { Graph as AbstractGraph } from './hooks/graph'\n\nfunction pruneCore(graph: Graph) {\n  if (!graphlib.alg.isAcyclic(graph)) {\n    // const cycles = graphlib.alg.findCycles(graph);\n    throw new Error('pruning is possible on DAG only')\n  }\n  const edges = graph.edges()\n  edges.forEach(edge => {\n    // remove edge\n    graph.removeEdge(edge)\n    // see if another path exists\n    const paths = graphlib.alg.dijkstra(graph, edge.v)\n    // if the other path doesn't exist, add the node back\n    if (paths[edge.w].distance === Infinity) {\n      graph.setEdge(edge)\n    }\n  })\n  return graph\n}\n\nexport const prune = (input: AbstractGraph): AbstractGraph => {\n  const graph = new graphlib.Graph()\n\n  Object.values(input).forEach(node => {\n    graph.setNode(node.uri)\n\n    Object.values(node.dependsOn).forEach(dependency =>\n      graph.setEdge(node.uri, dependency.uri),\n    )\n  })\n\n  const output: AbstractGraph = Object.fromEntries(\n    Object.entries(input).map(([uri, node]) => [\n      uri,\n      { ...node, dependsOn: {} },\n    ]),\n  )\n\n  const prunedEdges = pruneCore(graph)\n    .edges()\n    .map(({ v: source, w: target }) => ({ source, target }))\n\n  prunedEdges.forEach(({ source, target }) => {\n    output[source].dependsOn[target] = output[target]\n  })\n\n  return output\n}\n\n/*\nexport function getCycles(dependencies: Dependency[]): Dependency[][] {\n  const nodes = Array.from(\n    new Set([\n      ...dependencies.map(d => d.dependent),\n      ...dependencies.map(d => d.dependency),\n    ]),\n  )\n  const nodeIndexes = Object.fromEntries(\n    Object.entries(nodes).map(([key, value]) => [value, +key]),\n  )\n\n  const adjacency = Array(nodes.length)\n    .fill(null)\n    .map(() => [] as number[])\n  dependencies.forEach(({ dependent, dependency }) => {\n    const dependentIndex = nodeIndexes[dependent]\n    const dependencyIndex = nodeIndexes[dependency]\n    adjacency[dependentIndex].push(dependencyIndex)\n  })\n\n  // try to detect loops (cycles of length 1)\n  // this is due to the limits of the findCyclesAdjacency, which fails to detect loops\n  // https://github.com/antoinerg/elementary-circuits-directed-graph/issues/13\n  // @TODO remove loop detection when the issue is fixed\n  const loops = adjacency.reduce((loops, adj, i) => {\n    if (adj.includes(i)) loops.push([i, i])\n    return loops\n  }, [] as number[][])\n\n  const rawCycles = loops.length > 0 ? loops : findCyclesAdjacency(adjacency)\n\n  const simpleCycles = rawCycles.map(cycle =>\n    cycle.slice(0, -1).map(i => nodes[i]),\n  )\n\n  return simpleCycles\n    .map(cycle => simpleCycleToCycle(cycle, dependencies))\n    .sort((a, b) => a.length - b.length)\n    .slice(0, 5)\n}\n\nfunction simpleCycleToCycle(\n  simpleCycle: string[],\n  dependencies: Dependency[],\n): Dependency[] {\n  return simpleCycle.map((uri, index) => {\n    const dependent = simpleCycle[index]\n    const dependency = simpleCycle[(index + 1) % simpleCycle.length]\n    return (\n      dependencies.find(\n        d => d.dependency === dependency && d.dependent === dependent,\n      ) || {\n        dependent,\n        dependency,\n        doc: '',\n      }\n    )\n  })\n  }\n  */\n","/*\n * based on the following example\n * https://github.com/rexxars/react-markdown/issues/10#issuecomment-347763068\n */\n\nimport React from 'react'\nimport 'katex/dist/katex.min.css'\nimport ReactMarkdown from 'react-markdown'\nimport remarkMath from 'remark-math'\nimport styled from 'styled-components'\nimport rehypeKatex from 'rehype-katex'\n\nconst Styler = styled.div`\n  img {\n    max-width: 100%;\n  }\n`\n\nexport default function Math({ children }: { children: string }) {\n  const props = {\n    children,\n    remarkPlugins: [remarkMath],\n    rehypePlugins: [rehypeKatex],\n  }\n  return (\n    <Styler>\n      <ReactMarkdown {...props} />\n    </Styler>\n  )\n}\n","import React from 'react'\nimport { GraphNode } from '../hooks/graph'\nimport Math from './Math'\n\ninterface Props {\n  node: GraphNode\n  onSelectNode: (uri: string) => void\n}\n\nconst Statement = ({ node, onSelectNode }: Props) => {\n  const dependencies: GraphNode[] = Object.values(node.dependsOn)\n  return (\n    <div\n      style={{\n        position: 'fixed',\n        width: '100%',\n        top: '0',\n        bottom: 0,\n        pointerEvents: 'none',\n        overflowY: 'auto',\n        overflowX: 'hidden',\n      }}\n    >\n      <div className=\"columns mr-1 mt-6\">\n        <div className=\"column is-one-quarter is-offset-three-quarters\">\n          <div\n            className=\"card\"\n            style={{ pointerEvents: 'all', overflowX: 'auto', width: '100%' }}\n          >\n            <header className=\"card-header\">\n              <p className=\"card-header-title\">{node.label}</p>\n            </header>\n            <section className=\"card-content\">\n              <Math>{node.description}</Math>\n            </section>\n            <header className=\"card-header\">\n              <p className=\"card-header-title\">\n                dependencies: {dependencies.length}\n              </p>\n            </header>\n            <section className=\"card-content\">\n              <ul className=\"buttons are-small\">\n                {dependencies.map(dependency => (\n                  <li\n                    onClick={() => onSelectNode(dependency.uri)}\n                    key={dependency.uri}\n                    className=\"button is-link is-inverted\"\n                  >\n                    {dependency.label}\n                  </li>\n                ))}\n              </ul>\n            </section>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Statement\n","import { fetch } from '@inrupt/solid-client-authn-browser'\nimport {\n  getSolidDataset,\n  getTerm,\n  getThing,\n  getThingAll,\n  getTermAll,\n  IriString,\n} from '@inrupt/solid-client'\nimport { solid, foaf } from 'rdf-namespaces'\n\n// following https://github.com/solid/solid/blob/main/proposals/data-discovery.md to discover math documents of a user\nexport const findMathDocumentsOfPerson = async (\n  webId: IriString,\n): Promise<IriString[]> => {\n  if (webId) {\n    const dataset = await getSolidDataset(webId, { fetch })\n    const me = getThing(dataset, webId)\n    if (me) {\n      const publicTypeIndex = getTerm(me, solid.publicTypeIndex)?.value\n      if (publicTypeIndex) {\n        const index = await getSolidDataset(publicTypeIndex, { fetch })\n        const things = getThingAll(index)\n        const mathDocuments = things\n          .filter(thing =>\n            getTermAll(thing, solid.forClass)\n              .map(a => a.value)\n              .includes('https://terms.math.livegraph.org#concept'),\n          )\n          .map(thing => getTermAll(thing, solid.instance))\n          .flat()\n          .map(a => a.value)\n        return mathDocuments\n      }\n    }\n  }\n  return ['https://mrkvon.solidcommunity.net/public/math/index.ttl']\n}\n\nexport const findFriends = async (webId: IriString): Promise<IriString[]> => {\n  if (webId) {\n    const dataset = await getSolidDataset(getResourceUrl(webId), { fetch })\n    const person = getThing(dataset, webId)\n    if (person) {\n      const friends = getTermAll(person, foaf.knows).map(a => a.value)\n      return friends\n    }\n  }\n\n  return []\n}\n\ntype BFSPerson = {\n  uri: IriString\n  visited: boolean\n}\n\n// We'll need to figure out how to stop this\nexport const BFSFriends = async (\n  webId: IriString,\n  onChange: (people: IriString[]) => void,\n): Promise<void> => {\n  webId = fixUri(webId)\n  const timbl = 'https://timbl.solidcommunity.net/profile/card#me'\n  const people: { [iri: string]: BFSPerson } = {\n    [webId]: { uri: webId, visited: false },\n    [timbl]: { uri: timbl, visited: false },\n  }\n\n  let length = Object.keys(people).length\n  onChange(Object.keys(people))\n\n  while (\n    Object.values(people)\n      .map(person => person.visited)\n      .includes(false)\n  ) {\n    // take a first unvisited person\n    const unvisitedPerson = Object.values(people).find(\n      person => !person.visited,\n    )\n    if (unvisitedPerson) {\n      // set them visited\n      unvisitedPerson.visited = true\n      // fetch their friends\n      try {\n        const friends = await findFriends(unvisitedPerson.uri)\n        // add their friends\n        friends.forEach(uri => {\n          uri = fixUri(uri)\n          people[uri] = people?.[uri] ?? { uri, visited: false }\n        })\n      } catch (e) {\n        e\n      } finally {\n        if (length !== Object.keys(people).length) {\n          onChange(Object.keys(people))\n          length = Object.keys(people).length\n        }\n      }\n    } else break\n  }\n}\n\nconst getResourceUrl = (url: string): string => {\n  const resourceUrl = new URL(url)\n  resourceUrl.hash = ''\n  return resourceUrl.href\n}\n\nconst fixUri = (uri: IriString) => {\n  const regex = /^(.+)\\.solid.community(.*)$/\n  const match = uri.match(regex)\n  if (match) {\n    const [, begin, end] = match\n    uri = `${begin}.solidcommunity.net${end}`\n  }\n\n  return uri\n}\n","import React, { useEffect, useState, useContext } from 'react'\nimport Visualization from './Visualization'\nimport useGraph, { Graph } from '../hooks/graph'\nimport Simulation, { SimulationLinkExt } from '../simulation'\nimport { SimulationNode, SimulationLink } from '../simulation/types'\nimport { Vector } from '../helpers/draw'\nimport { SessionContext } from '../contexts/session'\nimport { Grid } from '../helpers/draw'\nimport { prune as pruneGraph } from '../algorithms'\nimport numeric from 'numeric'\nimport Statement from './Statement'\n// import useSimulation from '../hooks/simulation'\nimport { findMathDocumentsOfPerson, findFriends } from '../dataTest'\n\nconst transform = (matrix: number[][], vector: Vector): Vector => {\n  const raw = numeric.dot(\n    matrix,\n    numeric.transpose([[...vector, 1]]),\n  ) as number[][]\n  const [[x], [y]] = raw\n  return [x, y]\n}\n\ntype VisualizationNode = {\n  x: number\n  y: number\n  uri: string\n  label: string\n  style: string\n}\n\ntype VisualizationLink = {\n  source: VisualizationNode\n  target: VisualizationNode\n}\n\nexport type VisualizationGraph = {\n  nodes: VisualizationNode[]\n  links: VisualizationLink[]\n}\n\ninterface SimulationGraph {\n  nodes: SimulationNode[]\n  links: SimulationLinkExt[]\n}\n\nconst basicGrid: Grid = {\n  origin: [0, 0],\n  distance: 20,\n  highlight: 5,\n}\n\nconst transformGrid = (matrix: number[][], grid: Grid): Grid => {\n  let distance = grid.distance * matrix[0][0]\n  while (distance < 20) {\n    distance *= 5\n  }\n  return {\n    origin: transform(matrix, grid.origin),\n    distance,\n    highlight: grid.highlight,\n  }\n}\n\nconst transformLayout = (\n  matrix: number[][],\n  graph: SimulationGraph,\n  highlighted: string | undefined,\n  selected: string | undefined,\n  selectedDependencies: string[],\n): VisualizationGraph => {\n  const transformedNodesDict = Object.fromEntries(\n    graph.nodes.map(node => {\n      const [x, y] = transform(matrix, [node.x, node.y])\n      return [node.uri, { ...node, x, y, style: '' }]\n    }),\n  )\n\n  if (highlighted) {\n    transformedNodesDict[highlighted].style = 'accent'\n  }\n\n  if (selected) {\n    transformedNodesDict[selected].style = 'focus'\n  }\n\n  selectedDependencies.forEach(\n    uri => (transformedNodesDict[uri].style = 'accent'),\n  )\n\n  const links = graph.links.map(link => {\n    const sourceUri =\n      typeof link.source === 'string'\n        ? link.source\n        : typeof link.source === 'number'\n        ? graph.nodes[link.source].uri\n        : link.source.uri\n    const targetUri =\n      typeof link.target === 'string'\n        ? link.target\n        : typeof link.target === 'number'\n        ? graph.nodes[link.target].uri\n        : link.target.uri\n    const source = transformedNodesDict[sourceUri]\n    const target = transformedNodesDict[targetUri]\n    return { source, target }\n  })\n\n  return { nodes: Object.values(transformedNodesDict), links }\n}\n\nconst selectNodeDependencies = (\n  selectedNodeUri: string | undefined,\n  graph: Graph,\n): string[] => {\n  if (!selectedNodeUri) return []\n  return Object.values(graph[selectedNodeUri]?.dependsOn ?? {}).map(\n    node => node.uri,\n  )\n}\n\nconst VisualizationContainer: React.FC = props => {\n  const [simulation] = useState(new Simulation())\n\n  const [layout, setLayout] = useState<SimulationGraph>({\n    nodes: [],\n    links: [],\n  })\n\n  const [highlightedNode, setHighlightedNode] = useState<string | undefined>()\n  const [selectedNode, setSelectedNode] = useState<string | undefined>()\n\n  const [info] = useContext(SessionContext)\n\n  useEffect(() => {\n    findMathDocumentsOfPerson(info?.webId ?? '').then(console.log)\n    findFriends(info?.webId ?? '').then(console.log)\n  }, [info])\n\n  // abstract graph\n  const [graph, revalidate] = useGraph()\n\n  // transformation matrix\n  const [matrix, setMatrix] = useState<number[][]>([\n    [1, 0, 0],\n    [0, 1, 0],\n    [0, 0, 1],\n  ])\n\n  // initialize simulation\n  useEffect(() => {\n    let lastUpdate = Date.now() - 20\n    simulation.start({\n      nodes: [],\n      links: [],\n      onTick: ({ nodes, links }) => {\n        const now = Date.now()\n        if (now > lastUpdate + 20) {\n          setLayout({ nodes: [...nodes], links: [...links] })\n          lastUpdate = now\n        }\n      },\n    })\n    return () => {\n      simulation.stop()\n    }\n  }, [simulation])\n\n  // refetch graph data when user gets logged in or out\n  useEffect(() => {\n    ;(async () => {\n      await revalidate()\n    })()\n  }, [info, revalidate])\n\n  // when graph changes, update simulation\n  useEffect(() => {\n    let prunedOrFullGraph\n    try {\n      prunedOrFullGraph = pruneGraph(graph)\n    } catch {\n      prunedOrFullGraph = graph\n    }\n\n    const nodes = Object.values(prunedOrFullGraph).map(({ label, uri }) => ({\n      label,\n      x: Math.random() * 400,\n      y: Math.random() * 400,\n      uri,\n    }))\n\n    const links = Object.values(prunedOrFullGraph).reduce(\n      (nodes, { uri: source, dependsOn }) => {\n        Object.keys(dependsOn).forEach(target => nodes.push({ source, target }))\n        return nodes\n      },\n      [] as SimulationLink[],\n    )\n\n    simulation.update({ nodes, links })\n  }, [graph, simulation])\n\n  const handleTransform = (matrix: number[][]): void => {\n    setMatrix(prevMatrix => numeric.dot(matrix, prevMatrix) as number[][])\n  }\n\n  const withNode = (action: (uri: string) => unknown) => {\n    return (position: Vector): void => {\n      // first transform to local coordinates\n      const [x, y] = transform(numeric.inv(matrix), position)\n      // then find the node in simulation\n      action(simulation.selectNode({ x, y })?.uri)\n    }\n  }\n\n  const handleHover = withNode(setHighlightedNode)\n  const handleSelect = withNode(setSelectedNode)\n\n  const selectedNodeDependencies = selectNodeDependencies(selectedNode, graph)\n  // transform layout to TransformedLayout\n  const transformedLayout = transformLayout(\n    matrix,\n    layout,\n    highlightedNode,\n    selectedNode,\n    selectedNodeDependencies,\n  )\n\n  const grid = transformGrid(matrix, basicGrid)\n\n  return (\n    <>\n      <Visualization\n        graph={transformedLayout}\n        grid={grid}\n        onTransform={handleTransform}\n        onHover={handleHover}\n        onSelectNode={handleSelect}\n        {...props}\n      />\n\n      {selectedNode && (\n        <Statement\n          node={graph[selectedNode]}\n          onSelectNode={uri => setSelectedNode(uri)}\n        />\n      )}\n    </>\n  )\n}\n\nexport default VisualizationContainer\n","import React, { createContext, useContext, useState, useEffect } from 'react'\nimport { SessionContext } from '../contexts/session'\nimport { BFSFriends, findMathDocumentsOfPerson } from '../dataTest'\nimport { IriString } from '@inrupt/solid-client'\n\nexport const PeopleContext = createContext<string[]>([])\n\ninterface Props {\n  children: React.ReactNode\n}\n\ntype MathDocument = {\n  uri: IriString\n  owner: IriString\n  access: string\n}\n\nexport const DocumentsContext = createContext<MathDocument[]>([])\n\nconst DataContainer = ({ children }: Props) => {\n  const [info] = useContext(SessionContext)\n  const [people, setPeople] = useState<string[]>([])\n  const [mathDocuments, setMathDocuments] = useState<MathDocument[]>([])\n\n  useEffect(() => {\n    // here we lookup people connected to us\n    if (info?.isLoggedIn) {\n      BFSFriends(info.webId, setPeople)\n    } else {\n      setPeople([])\n    }\n  }, [info])\n\n  // we lookup math documents of found people\n  useEffect(() => {\n    people.forEach(person =>\n      findMathDocumentsOfPerson(person)\n        .then(documents =>\n          setMathDocuments(state => {\n            const notAddedYet = documents.filter(\n              doc => !state.find(stateDoc => doc === stateDoc.uri),\n            )\n            if (notAddedYet.length > 0) {\n              return [\n                ...state,\n                ...notAddedYet.map(uri => ({ uri, owner: person, access: '' })),\n              ]\n            } else return state\n          }),\n        )\n        .catch(e => {\n          e\n        }),\n    )\n  }, [people])\n\n  useEffect(() => {\n    console.log(\n      'documents',\n      mathDocuments.map(doc => doc.uri),\n    )\n  }, [mathDocuments])\n\n  return (\n    <DocumentsContext.Provider value={mathDocuments}>\n      <PeopleContext.Provider value={people}>{children}</PeopleContext.Provider>\n    </DocumentsContext.Provider>\n  )\n}\n\nexport default DataContainer\n","import React, { useContext } from 'react'\nimport { PeopleContext } from './DataContainer'\n\ninterface Props {\n  people: string[]\n}\n\nexport const PeopleList = ({ people, ...props }: Props) => (\n  <div {...props}>\n    <div>{people.length}</div>\n    {/*\n    <ul>\n      {people.map(person => (\n        <li key={person}>{person}</li>\n      ))}\n    </ul>*/}\n  </div>\n)\n\ntype ULProps = Partial<React.HTMLAttributes<HTMLUListElement>>\n\nexport const PeopleListContainer = (props: ULProps) => {\n  const people = useContext(PeopleContext)\n  return <PeopleList people={people} {...props} />\n}\n","import React from 'react'\nimport Login from './Login'\nimport VisualizationContainer from './VisualizationContainer'\nimport styled from 'styled-components'\nimport { PeopleListContainer } from './PeopleList'\n\nconst PositionedLogin = styled(Login)`\n  position: fixed;\n  top: 1em;\n  right: 1em;\n  display: block;\n`\n\nconst PositionedPeopleList = styled(PeopleListContainer)`\n  position: fixed;\n  top: 1em;\n  left: 1em;\n  display: block;\n  background-color: white;\n  padding: 0.25rem;\n`\n\nconst FullSizeVisualization = styled(VisualizationContainer)`\n  height: 100vh;\n  width: 100vw;\n  display: block;\n`\n\nconst Layout: React.FC = () => {\n  return (\n    <>\n      <PositionedPeopleList />\n\n      <PositionedLogin />\n\n      <FullSizeVisualization />\n    </>\n  )\n}\n\nexport default Layout\n","import React from 'react'\nimport Layout from './components/Layout'\nimport DataContainer from './components/DataContainer'\n\nconst App: React.FC = () => (\n  <DataContainer>\n    <Layout />\n  </DataContainer>\n)\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React, { useState, ReactNode } from 'react'\nimport { SessionContext, SessionInfo } from '../contexts/session'\n\ninterface Props {\n  children: ReactNode\n}\n\nconst SessionProvider: React.FC<Props> = (props: Props) => {\n  const [sessionInfo, setSessionInfo] = useState<SessionInfo | null>(null)\n\n  return (\n    <SessionContext.Provider value={[sessionInfo, setSessionInfo]}>\n      {props.children}\n    </SessionContext.Provider>\n  )\n}\n\nexport default SessionProvider\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport SessionProvider from './components/SessionProvider'\nimport Modal from 'react-modal'\n\nif (typeof document === 'object') {\n  const appElement = document.querySelector('#root') as HTMLElement\n\n  Modal.setAppElement(appElement)\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <SessionProvider>\n      <App />\n    </SessionProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}