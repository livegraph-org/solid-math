{"version":3,"sources":["components/AppButton.tsx","components/withModal.tsx","features/login/LoginPrompt.tsx","app/hooks.ts","features/info/infoSlice.ts","features/math/algorithms.ts","features/math/mathAPI.ts","features/math/mathSlice.ts","features/document/documentAPI.ts","features/document/documentSlice.ts","features/login/loginAPI.ts","features/login/loginSlice.ts","components/withMenu.tsx","features/math/visualization/Visualization.tsx","features/login/Login.tsx","features/math/visualization/helpers/draw.ts","features/math/visualization/simulation/index.ts","features/math/visualization/simulation/gravity.ts","features/math/Math.tsx","features/search/searchSlice.ts","features/math/statement/NodeList.tsx","features/math/Statement.tsx","features/math/InfoContainer.tsx","features/math/visualization/helpers/transform.ts","features/math/visualization/VisualizationContainer.tsx","components/About.tsx","features/control/AddButtonWithMenu.tsx","features/document/AddDocument.tsx","features/document/DocumentList.tsx","features/control/DocumentControl.tsx","features/control/ControlPanel.tsx","features/search/Search.tsx","features/info/Info.tsx","components/Layout.tsx","App.tsx","app/store.ts","reportWebVitals.ts","index.tsx"],"names":["AppButton","styled","children","className","props","classNames","getDisplayName","WrappedComponent","displayName","name","withModal","Button","Content","title","HOC","buttonProps","contentProps","dynamicTitle","rest","useState","promptOpen","setPromptOpen","finalTitle","onClick","e","preventDefault","isOpen","onRequestClose","contentLabel","overlayClassName","base","afterOpen","beforeClose","closeTimeoutMS","onFinish","LoginPrompt","onLogin","localStorage","getItem","idp","setIdp","onSubmit","setItem","id","type","value","onChange","newValue","currentTarget","placeholder","useAppDispatch","useDispatch","useAppSelector","useSelector","initialState","message","setTemporaryInfo","info","dispatch","getState","a","setInfo","Promise","resolve","setTimeout","currentInfo","selectInfo","clearInfo","infoSlice","createSlice","reducers","state","action","payload","actions","prune","input","graph","graphlib","Graph","Object","values","forEach","node","setNode","uri","dependencies","dependency","setEdge","output","fromEntries","entries","map","alg","isAcyclic","Error","edges","edge","removeEdge","dijkstra","v","w","distance","Infinity","pruneCore","source","target","term","definition","statement","dependsOn","fetchGraph","documentUri","getSolidDataset","fetch","dataset","things","getThingAll","nodes","links","thing","thingToNode","push","getTermAll","updateNode","document","getThing","newThing","label","setStringWithLocale","rdfs","en","setUrl","rdf","description","removeAll","depUri","addUrl","newDataset","setThing","saveSolidDatasetAt","asUrl","getTerm","getUrlAll","dependents","examples","created","updated","proofs","addGraph","createAsyncThunk","api","mathSlice","entities","byId","allIds","ui","highlighted","selected","highlight","select","extraReducers","builder","addCase","fulfilled","dependent","oldDependencies","deletedDependencies","filter","d","includes","selectGraph","createSelector","math","nodeDict","documentDict","enrichedNodes","enrichedNode","selectPrunedGraph","selectHighlighted","selectSelected","selectSelectedNodeDependencies","selectSelectedNode","findMathDocumentsOfPerson","webId","documentUris","getTypeIndexes","publicTypeIndex","public","index","mathDocuments","solid","forClass","instance","flat","length","all","rights","getEffectiveAccess","accesses","access","createMathDocument","isPublic","createSolidDataset","mathDocument","typeIndexes","typeIndex","private","indexThing","createThing","url","thingUrl","Date","now","buildThing","dct","references","build","file","TypeRegistration","updatedDataset","me","response","privateTypeIndex","addDocuments","documents","doc","createDocument","selectWebId","newDocument","documentSlice","selectDocument","selectDocuments","selectSelectedDocument","init","handleIncomingRedirect","window","location","href","restorePreviousSession","sessionInfo","login","oidcIssuer","solidLogin","redirectUrl","clientName","alert","removeItem","logout","solidLogout","_","isLoggedIn","loginSlice","status","pending","selectSession","selectNaiveStorage","exec","groups","storage","selectLoginStatus","withMenu","old","Menu","menuProps","open","setOpen","style","position","flexDirection","display","alignItems","zIndex","onMouseLeave","onBlur","event","contains","relatedTarget","onMouseEnter","onFocus","width","height","visibility","right","overflow","onClickClose","UserWithMenu","user","onLogout","Login","disabled","drawText","context","text","options","x","y","font","textBaseline","textAlign","assign","fillText","drawCircle","radius","beginPath","arc","Math","PI","fill","drawLine","start","end","moveTo","lineTo","stroke","Visualization","grid","onTransform","onHover","onSelectNode","canvasEl","useRef","setVisualizationSize","useEffect","current","getContext","offset","save","translate","clearRect","strokeStyle","min1","max1","min0","max0","getLineWidth","i","origin","lineWidth","drawGrid","link","s","t","numeric","sub","size","sqrt","div","add","mul","r","color","accented","focused","focused2","fillStyle","drawGraph","restore","updateCanvasSize","elementRef","clientHeight","clientWidth","getElementSize","addEventListener","removeEventListener","call","drag","clickDistance","on","dx","dy","zoom","scaleExtent","transform","k","dot","inv","withCanvasPosition","func","rect","getBoundingClientRect","clientX","left","clientY","top","handleMouseMove","handleClick","ref","onMouseMove","onMouseOut","classnames","Simulation","runs","simulation","forceSimulation","alphaDecay","force","forceLink","strength","alpha","vy","optimumDifference","forceGravity","forceManyBody","distanceMax","forceX","forceY","forceCollide","forceCenter","stop","onTick","restart","update","thisNodeDict","updatedNodes","random","selectNode","find","Styler","remarkPlugins","remarkMath","rehypePlugins","rehypeKatex","searchSlice","query","queryAutocomplete","setSearch","setAutocomplete","selectSearch","search","selectSearchResults","toLowerCase","sort","b","slice","selectAutocompleteResults","NodeListEdit","setDependencies","handleCancel","tags","suggestionsRaw","suggestions","onInput","onAddition","tag","fullTag","deps","onDelete","root","rootFocused","selectedTag","selectedTagName","searchInput","suggestionActive","suggestionDisabled","allowBackspace","tagComponent","TagComponent","removeButtonText","NodeList","editable","edit","setEdit","write","NodeLabelEdit","setLabel","setType","editType","setEditType","handleSelectTag","NodeLabel","Statement","NodeDescription","NodeDescriptionEdit","setDescription","ICOutside","ICInside","InfoContainer","matrix","vector","raw","transpose","nodeRadius","count","basicGrid","VisualizationContainer","prunedGraph","highlightedNode","selectedNode","selectedNodeDependencies","layout","setLayout","setMatrix","lastUpdate","reduce","keys","withNode","handleHover","handleSelect","transformedLayout","selectedDependencies","transformedNodesDict","sourceUri","targetUri","transformLayout","transformGrid","prevMatrix","Link","Footer","footer","About","AddDocumentButton","setIsPublic","filename","setFilename","AddButtonWithMenu","onAddMath","getSingleAccessString","read","append","getAccessString","DocumentControl","selectedDocument","ControlPanel","console","log","Search","clear","useCallback","handleEsc","key","autoFocus","Info","onClose","notiStyle","PositionedAbout","PositionedInfo","FullSizeVisualization","TopNav","nav","Layout","App","initLogin","store","configureStore","reducer","loginReducer","mathReducer","searchReducer","documentReducer","infoReducer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","appElement","querySelector","Modal","setAppElement","ReactDOM","render","StrictMode","getElementById"],"mappings":"wWAiCeA,EAbGC,aAZoB,SAAC,GAInB,IAHlBC,EAGiB,EAHjBA,SACAC,EAEiB,EAFjBA,UACGC,EACc,iBACjB,OACE,gDAAQD,UAAWE,IAAWF,EAAW,WAAeC,GAAxD,aACGF,OAKWD,CAAH,gM,2DCgFf,SAASK,EAAkBC,GACzB,OAAOA,EAAiBC,aAAeD,EAAiBE,MAAQ,YAGnDC,MApFiB,SAI9BC,EACAC,GAEI,IADJC,EACG,uDADK,GAEFC,EAAM,SAAC,GAS8B,IAAD,IARxCC,mBAQwC,MAR1B,GAQ0B,MAPxCC,oBAOwC,MAPzB,GAOyB,MANxCH,MAAOI,OAMiC,MANlB,GAMkB,EALrCC,EAKqC,iBACxC,EAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAEMC,EAAaL,GAAgBJ,GAAS,GAE5C,OACE,qCACE,cAACF,EAAD,uCACMI,GACAG,GAFN,IAGEf,UAAWE,IAAU,OAACU,QAAD,IAACA,OAAD,EAACA,EAAaZ,UAAd,OAAyBe,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAMf,WACpDoB,QAAS,SAAAC,GACPA,EAAEC,iBACFJ,GAAc,GACVN,EAAYQ,SAASR,EAAYQ,QAAQC,OAIhDJ,GACC,eAAC,IAAD,CACEM,OAAQN,EACRO,eAAgB,kBAAMN,GAAc,IACpCO,aAAcN,EACdO,iBAAkB,CAChBC,KAAM,mCACNC,UAAW,GACXC,YAAa,IAEf7B,UAAW,CACT2B,KAAM,gBACNC,UAAW,GACXC,YAAa,IAEfC,eAAgB,GAdlB,UAgBE,wBACE9B,UAAU,cACVoB,QAAS,kBAAMF,GAAc,IAF/B,mBAOA,sBAAKlB,UAAU,OAAf,UACE,wBAAQA,UAAU,cAAlB,SACE,mBAAGA,UAAU,oBAAb,SAAkCmB,MAEpC,qBAAKnB,UAAU,eAAf,SACE,cAACS,EAAD,2BACMI,GADN,IAEEkB,SAAU,kBAAMb,GAAc,mBAW9C,OADAP,EAAIN,YAAJ,oBAA+BF,EAAeK,GAA9C,KACOG,GC1CMqB,EANKzB,GAzCA,SAAC,GAAD,IAAMN,EAAN,2BAAkB,cAAC,EAAD,2BAAeA,GAAf,2BAEpB,SAAC,GAAiC,IAAD,EAA9BgC,EAA8B,EAA9BA,QACnB,EAAsBjB,mBAAQ,UAC5BkB,aAAaC,QAAQ,cADO,QACG,8BADjC,mBAAOC,EAAP,KAAYC,EAAZ,KAeA,OACE,uBAAMC,SAZiC,SAAAjB,GACvCA,EAAEC,iBACFY,aAAaK,QAAQ,MAAOH,GAC5BH,EAAQG,IASR,UACE,qBAAKpC,UAAU,QAAf,SACE,qBAAKA,UAAU,UAAf,SACE,uBACEwC,GAAG,MACHxC,UAAU,QACVyC,KAAK,MACLC,MAAON,EACPO,SAdY,SAACtB,GACrBA,EAAEC,iBACF,IAAMsB,EAAWvB,EAAEwB,cAAcH,MACjCL,EAAOO,IAYCE,YAAY,iCAIlB,qBAAK9C,UAAU,QAAf,SACE,qBAAKA,UAAU,UAAf,SACE,uBAAOyC,KAAK,SAASC,MAAM,UAAU1C,UAAU,4BAUvD,uC,QChDW+C,EAAiB,kBAAMC,eACvBC,EAAkDC,I,iDCGzDC,EAA0B,CAC9BC,QAAS,GACTX,KAAM,QAGKY,EACX,SAACC,GAAD,8CACA,WAAOC,EAAUC,GAAjB,eAAAC,EAAA,6DACEF,EAASG,EAAQJ,IADnB,SAEQ,IAAIK,SAAQ,SAAAC,GAChBC,WAAWD,EAAS,QAHxB,QAKQE,EAAcC,EAAWP,MAEjBJ,UAAYE,EAAKF,SAC7BU,EAAYrB,OAASa,EAAKb,MAE1Bc,EAASS,KAVb,2CADA,yDAeWC,EAAYC,YAAY,CACnC5D,KAAM,OACN6C,eACAgB,SAAU,CACRT,QAAS,SAACU,EAAOC,GACf,OAAOA,EAAOC,SAEhBN,UAAW,WACT,OAAOb,MAKN,EAA+Bc,EAAUM,QAAjCb,EAAR,EAAQA,QAASM,EAAjB,EAAiBA,UAEXD,EAAa,SAACK,GAAD,OAAiCA,EAAMd,MAElDW,IAAf,Q,kBCtBO,IAAMO,EAAQ,SAACC,GACpB,IAAMC,EAAQ,IAAIC,IAASC,MAE3BC,OAAOC,OAAOL,GAAOM,SAAQ,SAAAC,GAC3BN,EAAMO,QAAQD,EAAKE,KAEnBL,OAAOC,OAAOE,EAAKG,cAAcJ,SAAQ,SAAAK,GAAU,OACjDV,EAAMW,QAAQL,EAAKE,IAAKE,EAAWF,WAIvC,IAAMI,EAAwBT,OAAOU,YACnCV,OAAOW,QAAQf,GAAOgB,KAAI,mCAAEP,EAAF,KAAOF,EAAP,WAAiB,CACzCE,EADyC,2BAEpCF,GAFoC,IAE9BG,aAAc,UAY7B,OA7CF,SAAmBT,GACjB,IAAKC,IAASe,IAAIC,UAAUjB,GAE1B,MAAM,IAAIkB,MAAM,mCAalB,OAXclB,EAAMmB,QACdd,SAAQ,SAAAe,GAEZpB,EAAMqB,WAAWD,GAEHnB,IAASe,IAAIM,SAAStB,EAAOoB,EAAKG,GAEtCH,EAAKI,GAAGC,WAAaC,KAC7B1B,EAAMW,QAAQS,MAGXpB,EAqBa2B,CAAU3B,GAC3BmB,QACAJ,KAAI,kBAA+B,CAAEa,OAAjC,EAAGL,EAAsCM,OAAzC,EAAcL,MAETnB,SAAQ,YAAyB,IAAtBuB,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,OAC7BjB,EAAOgB,GAAQnB,aAAaoB,GAAUjB,EAAOiB,MAGxCjB,G,uBCvBHkB,EAAO,CACXC,WAAY,8CACZC,UAAW,6CACXC,UAAW,8CAGAC,EAAU,uCAAG,WAAOC,GAAP,mBAAApD,EAAA,sEACFqD,YAAgBD,EAAa,CAAEE,gBAD7B,cAClBC,EADkB,OAElBC,EAASC,YAAYF,GACrBtC,EAAe,CAAEyC,MAAO,GAAIC,MAAO,IACzCH,EAAOlC,SAAQ,SAAAsC,GACb,IAAMrC,EAAOsC,EAAYD,EAAOR,GAChCnC,EAAMyC,MAAMI,KAAKvC,GACjBwC,YAAWH,EAAOb,EAAKG,WAAW5B,SAAQ,SAAAK,GACxCV,EAAM0C,MAAMG,KAAK,CAACvC,EAAKxC,GAAI4C,EAAW1C,cARlB,kBAWjBgC,GAXiB,2CAAH,sDAcV+C,EAAU,uCAAG,WACxBzC,GADwB,qBAAAvB,EAAA,sEAQFqD,YAAgB9B,EAAK0C,SAAU,CAAEX,gBAR/B,UAQlBC,EARkB,SASlBK,EAAQM,YAASX,EAAShC,EAAKxC,KATb,oBAWlBoF,EAAWP,EACXrC,EAAK6C,QACPD,EAAWE,YAAoBF,EAAUG,IAAKF,MAAO7C,EAAK6C,MAAMG,GAAI,OAGlEhD,EAAKvC,OACPmF,EAAWK,YAAOL,EAAUM,IAAIzF,KAAM+D,EAAKxB,EAAKvC,QAG9CuC,EAAKmD,cACPP,EAAWE,YACTF,EACAM,IAAIxF,MACJsC,EAAKmD,YAAYH,GACjB,OAIAhD,EAAKG,eACPyC,EAAWQ,YAAUR,EAAUpB,EAAKG,WACpC3B,EAAKG,aAAaJ,SAAQ,SAAAsD,GACxBT,EAAWU,YAAOV,EAAUpB,EAAKG,UAAW0B,OAI5CT,IAAaP,EApCK,wBAqCdkB,EAAaC,YAASxB,EAASY,GArCjB,UAsCda,YAAmBzD,EAAK0C,SAAUa,EAAY,CAAExB,gBAtClC,iCAwCfO,EAAYM,EAAU5C,EAAK0C,WAxCZ,cA0ClB,IAAI9B,MAAM,4BA1CQ,4CAAH,sDA6CjB0B,EAAc,SAClBD,EACAK,GAC4B,IAAD,YACrBxC,EAAMwD,YAAMrB,GACZ5E,EAAI,oBAAGkG,YAAQtB,EAAOa,IAAIzF,aAAtB,aAAG,EAA0BC,aAA7B,QAAsC,GAC1CyF,EAAW,oBAAGQ,YAAQtB,EAAOa,IAAIxF,cAAtB,aAAG,EAA2BA,aAA9B,QAAuC,GAClDmF,EAAK,oBAAGc,YAAQtB,EAAOU,IAAKF,cAAvB,aAAG,EAA4BnF,aAA/B,QAAwC,GAC7CyC,EAAeyD,YAAUvB,EAAOb,EAAKG,WAC3C,OAAQlE,GACN,KAAK+D,EAAKC,WACR,MAAO,CACLjE,GAAI0C,EACJzC,KAAM,aACNoF,MAAO,CAAEG,GAAIH,GACbM,YAAa,CAAEH,GAAIG,GACnBhD,eACA0D,WAAY,GACZC,SAAU,GACVC,QAAS,EACTC,QAAS,EACTtB,YAEJ,KAAKlB,EAAKE,UACR,MAAO,CACLlE,GAAI0C,EACJzC,KAAM,YACNoF,MAAO,CAAEG,GAAIH,GACbM,YAAa,CAAEH,GAAIG,GACnBhD,eACA0D,WAAY,GACZC,SAAU,GACVG,OAAQ,GACRF,QAAS,EACTC,QAAS,EACTtB,YAEJ,QACE,MAAM,IAAI9B,MAAM,4C,oBC5FTsD,EAAWC,YACtB,gBADsC,uCAEtC,WAAOjE,GAAP,SAAAzB,EAAA,sEACe2F,EAAelE,GAD9B,mFAFsC,uDAO3BuC,EAAa0B,YAKxB,kBALwC,uCAMxC,WAAOnE,EAAP,oBAAAvB,EAAA,6DAA4BF,EAA5B,EAA4BA,UACjBF,EAAiB,CAAEZ,KAAM,OAAQW,QAAS,gBADrD,SAEwBgG,EAAepE,GAFvC,cAEQgE,EAFR,OAGEzF,EAASF,EAAiB,CAAEZ,KAAM,UAAWW,QAAS,eAHxD,kBAIS4F,GAJT,2CANwC,yDAc7BK,GAAYnF,YAAY,CACnC5D,KAAM,OACN6C,aArC8B,CAC9BmG,SAAU,CACRtE,KAAM,CACJuE,KAAM,GACNC,OAAQ,KAGZC,GAAI,CACFC,YAAa,GACbC,SAAU,KA6BZxF,SAAU,CACRyF,UAAW,SAACxF,EAAOC,GACjBD,EAAMqF,GAAGC,YAAcrF,EAAOC,SAEhCuF,OAAQ,SAACzF,EAAOC,GACdD,EAAMqF,GAAGE,SAAWtF,EAAOC,UAG/BwF,cAAe,SAAAC,GACbA,EACGC,QAAQd,EAASe,WAAW,SAAC7F,EAAOC,GACnC,MAAyBA,EAAOC,QAAxB6C,EAAR,EAAQA,MAAOC,EAAf,EAAeA,MACfD,EAAMpC,SAAQ,SAAAC,GACZZ,EAAMkF,SAAStE,KAAKuE,KAAKvE,EAAKxC,IAAMwC,EACpCZ,EAAMkF,SAAStE,KAAKwE,OAAOjC,KAAKvC,EAAKxC,OAEvC4E,EAAMrC,SAAQ,YAA8B,IAAD,mBAA3BmF,EAA2B,KAAhB9E,EAAgB,KACzChB,EAAMkF,SAAStE,KAAKuE,KAAKW,GAAW/E,aAAaoC,KAAKnC,GACtDhB,EAAMkF,SAAStE,KAAKuE,KAAKnE,GAAYyD,WAAWtB,KAAK2C,SAGxDF,QAAQvC,EAAWwC,WAAW,SAAC7F,EAAOC,GACrC,IAAMW,EAAOX,EAAOC,QACpBF,EAAMkF,SAAStE,KAAKuE,KAAKvE,EAAKxC,IAAIqF,MAAQ7C,EAAK6C,MAC/CzD,EAAMkF,SAAStE,KAAKuE,KAAKvE,EAAKxC,IAAIC,KAAOuC,EAAKvC,KAC9C2B,EAAMkF,SAAStE,KAAKuE,KAAKvE,EAAKxC,IAAI2F,YAAcnD,EAAKmD,YAErD,IAAMgC,EAAkB/F,EAAMkF,SAAStE,KAAKuE,KAAKvE,EAAKxC,IAAI2C,aAC1Df,EAAMkF,SAAStE,KAAKuE,KAAKvE,EAAKxC,IAAI2C,aAAeH,EAAKG,aAEtD,IAAMiF,EAAsBD,EAAgBE,QAC1C,SAAAC,GAAC,OAAKtF,EAAKG,aAAaoF,SAASD,MAETtF,EAAKG,aAAakF,QAC1C,SAAAC,GAAC,OAAKH,EAAgBI,SAASD,MAEfvF,SAAQ,SAAAuF,GACxBlG,EAAMkF,SAAStE,KAAKuE,KAAKe,GAAGzB,WAAWtB,KAAKvC,EAAKxC,OAEnD4H,EAAoBrF,SAAQ,SAAAuF,GAC1BlG,EAAMkF,SAAStE,KAAKuE,KAAKe,GAAGzB,WAAazE,EAAMkF,SAAStE,KAAKuE,KAC3De,GACAzB,WAAWwB,QAAO,SAAA5G,GAAC,OAAIA,IAAMuB,EAAKxC,eAMvC,GAA8B6G,GAAU9E,QAAhCqF,GAAR,GAAQA,UAAWC,GAAnB,GAAmBA,OAUbW,GAAcC,aAPF,SAACrG,GAAD,OAAsBA,EAAMsG,KAAKpB,SAAStE,QAIpC,SAACZ,GAAD,OAC7BA,EAAMsD,SAAS4B,SAAS5B,YAKxB,cAAiD,IAAxCiD,EAAuC,EAA7CpB,KAA0BqB,EAAmB,EAAzBrB,KACfsB,EAAuBhG,OAAOU,YAClCV,OAAOW,QAAQmF,GAAUlF,KAAI,mCAAEjD,EAAF,YAAY0C,EAAZ,EAAQ1C,GAASkF,EAAjB,EAAiBA,SAAa1C,EAA9B,uBAA0C,CACrExC,EADqE,2BAGhEwC,GAHgE,IAInEE,MACAC,aAAc,GACd0D,WAAY,GACZnB,SAAUkD,EAAalD,UAc7B,OATA7C,OAAOW,QAAQqF,GAAe9F,SAAQ,YAAyB,IAAD,mBAAtBvC,EAAsB,KAAlBsI,EAAkB,KAC5DA,EAAa3F,aAAeN,OAAOU,YACjCoF,EAASnI,GAAI2C,aAAaM,KAAI,SAAAjD,GAAE,MAAI,CAACA,EAAIqI,EAAcrI,QAEzDsI,EAAajC,WAAahE,OAAOU,YAC/BoF,EAASnI,GAAIqG,WAAWpD,KAAI,SAAAjD,GAAE,MAAI,CAACA,EAAIqI,EAAcrI,WAIlDqI,KAIEE,GAAoBN,YAAeD,IAAa,SAAA9F,GAAK,OAChEF,EAAME,MAGKsG,GAAoB,SAAC5G,GAAD,OAAsBA,EAAMsG,KAAKjB,GAAGC,aACxDuB,GAAiB,SAAC7G,GAAD,OAAsBA,EAAMsG,KAAKjB,GAAGE,UAKrDuB,GAAiCT,YAC5CQ,GACAT,IAL6B,SAACtF,EAAaR,GAAd,eAC7BQ,EAAML,OAAOC,OAAP,oBAAcJ,EAAMQ,UAApB,aAAc,EAAYC,oBAA1B,QAA0C,IAAIM,KAAI,SAAAT,GAAI,OAAIA,EAAKE,OAAO,MAQjEiG,GAAqBV,YAChCQ,GACAT,IACA,SAACtF,EAAKR,GAAN,OAAgBA,EAAMQ,MAGTmE,MAAf,QC1Ja+B,GAAyB,uCAAG,WACvCC,GADuC,2BAAA5H,EAAA,yDAGnC6H,EAAyB,IACzBD,EAJmC,iCAKKE,GAAeF,GALpB,qBAKrBG,EALqB,EAK7BC,QAL6B,iCAOf3E,YAAgB0E,EAAiB,CAAEzE,gBAPpB,OAO7B2E,EAP6B,OAQ7BzE,EAASC,YAAYwE,GACrBC,EAAgB1E,EACnBoD,QAAO,SAAAhD,GAAK,OACXG,YAAWH,EAAOuE,IAAMC,UACrBpG,KAAI,SAAAhC,GAAC,OAAIA,EAAEf,SACX6H,SAAS,kDAEb9E,KAAI,SAAA4B,GAAK,OAAIG,YAAWH,EAAOuE,IAAME,aACrCC,OACAtG,KAAI,SAAAhC,GAAC,OAAIA,EAAEf,SAEd4I,EAAeK,EAnBoB,eAsBX,IAAxBL,EAAaU,SACfV,EAAe,CACb,mEAxBmC,KA2BWzG,OA3BX,UA4B/BlB,QAAQsI,IACZX,EAAa7F,IAAb,uCAAiB,WAAMP,GAAN,iBAAAzB,EAAA,sEACOqD,YAAgB5B,EAAK,CAAE6B,gBAD9B,cACTC,EADS,OAETkF,EAASC,YAAmBnF,GAFnB,kBAGR,CAAC9B,EAAKgH,IAHE,2CAAjB,wDA7BmC,2BA2BjCE,EA3BiC,KA2BkB7G,YA3BlB,kCAqChC+F,EAAa7F,KAAI,SAAAP,GAAG,MAAK,CAAE1C,GAAI0C,EAAKA,MAAKmH,OAAQD,EAASlH,QArC1B,4CAAH,sDAwCzBoH,GAAkB,uCAAG,WAChCpH,EACAmG,EACAkB,GAHgC,mCAAA9I,EAAA,+EAMxBqD,YAAgB5B,EAAK,CAAE6B,gBANC,uEASxB0B,YAAmBvD,EAAKsH,cAAsB,CAClDzF,gBAV4B,wBAcLD,YAAgB5B,EAAK,CAAE6B,gBAdlB,eAcxBwB,EAdwB,OAgBxBkE,EAA6B,CACjCjK,GAAI0C,EACJA,MACAmH,OAAQF,YAAmB5D,IAnBC,UAuBJgD,GAAeF,GAvBX,WAuBxBqB,EAvBwB,SAyBxBC,EAAYJ,EAAWG,EAAYjB,OAASiB,EAAYE,SAzBhC,kCA4BN9F,YAAgB6F,EAAW,CAAE5F,gBA5BvB,eA4BtBC,EA5BsB,OA8BtB6F,EA9BsB,UA+B1BlF,YAASX,EAAS2F,UA/BQ,QA+BMG,YAAY,CAAEC,IAAKJ,IAE/CK,EAjCsB,UAiCRL,EAjCQ,YAiCKM,KAAKC,OAEhCxB,EAAQyB,YAAWN,GACtBvE,OAAO8E,IAAIC,WAAYL,GACvBM,QAEGC,EAAOJ,YAAWL,YAAY,CAAEC,IAAKC,KACxC1E,OAAOJ,IAAIzF,KAAMmJ,IAAM4B,kBACvBlF,OAAOsD,IAAMC,SAAU,+CACvBvD,OAAOsD,IAAMC,SAAU,8CACvBvD,OAAOsD,IAAME,SAAU5G,GACvBoI,QAEGG,EAAiBjF,YAASA,YAASxB,EAAS0E,GAAQ6B,GA9C9B,UA+CtB9E,YAAmBkE,EAAWc,EAAgB,CAClD1G,gBAhD0B,iCAmDvB0F,GAnDuB,cAqD1B,IAAI7G,MAAM,2BArDgB,yDAAH,0DA6DzB2F,GAAc,uCAAG,WAAOF,GAAP,2BAAA5H,EAAA,sEACCqD,YAAgBuE,EAAO,CAAEtE,gBAD1B,cACfC,EADe,OAEf0G,EAAK/F,YAASX,EAASqE,GACvBsC,EAAwB,CAC5BlC,OAAQ,GACRmB,QAAS,IAEPc,IACFC,EAASlC,OAAT,oBAAkB9C,YAAQ+E,EAAI9B,IAAMJ,wBAApC,aAAkB,EAAoC9I,aAAtD,QAA+D,GAC/DiL,EAASf,QAAT,oBAAmBjE,YAAQ+E,EAAI9B,IAAMgC,yBAArC,aAAmB,EAAqClL,aAAxD,QAAiE,IAT9C,kBAYdiL,GAZc,2CAAH,sDCvFPE,GAAe1E,YAC1B,oBAD0C,uCAE1C,WAAOkC,EAAP,oBAAA5H,EAAA,6DAAwBF,EAAxB,EAAwBA,SAAxB,SAC0B6F,GAA8BiC,GADxD,cACQyC,EADR,QAEY/I,SAAQ,SAAAgJ,GAAG,OAAIxK,EAAS2F,EAAS6E,EAAI7I,SAFjD,kBAGS4I,GAHT,2CAF0C,yDAS/BE,GAAiB7E,YAO5B,sBAP4C,uCAOrB,yCAAA1F,EAAA,6DAASyB,EAAT,EAASA,IAAKqH,EAAd,EAAcA,SAAc/I,EAA5B,EAA4BA,SAAUD,EAAtC,EAAsCA,SACvD8H,EAAQ4C,GAAYzK,KADH,SAGrBD,EACEF,EAAiB,CAAEZ,KAAM,OAAQW,QAAS,6BAJvB,SAMKgG,GAAuBlE,EAAKmG,EAAOkB,GANxC,cAMf2B,EANe,OAOrB3K,EACEF,EAAiB,CAAEZ,KAAM,UAAWW,QAAS,4BAR1B,kBAWd8K,GAXc,wCAajB,gBAAiBtI,OACnBrC,EAASF,EAAiB,CAAEZ,KAAM,QAASW,QAAS,KAAMA,WAdvC,+DAPqB,yDA2BjC+K,GAAgBjK,YAAY,CACvC5D,KAAM,WACN6C,aAjDkC,CAClCmG,SAAU,CACR5B,SAAU,CACR6B,KAAM,GACNC,OAAQ,KAGZG,SAAU,IA2CVxF,SAAU,CACRiK,eAAgB,SAAChK,EAAOC,GACtBD,EAAMuF,SAAWtF,EAAOC,UAG5BwF,cAAe,SAAAC,GACbA,EACGC,QAAQ6D,GAAa5D,WAAW,SAAC7F,EAAOC,GACvCD,EAAMkF,SAAS5B,SAAW,CACxB6B,KAAM1E,OAAOU,YAAYlB,EAAOC,QAAQmB,KAAI,SAAAsI,GAAG,MAAI,CAACA,EAAIvL,GAAIuL,OAC5DvE,OAAQnF,EAAOC,QAAQmB,KAAI,SAAAsI,GAAG,OAAIA,EAAIvL,UAGzCwH,QAAQgE,GAAe/D,WAAW,SAAC7F,EAAOC,GACzCD,EAAMkF,SAAS5B,SAAS8B,OAAOjC,KAAKlD,EAAOC,QAAQ9B,IACnD4B,EAAMkF,SAAS5B,SAAS6B,KAAKlF,EAAOC,QAAQ9B,IAAM6B,EAAOC,cAKlD8J,GAAmBD,GAAc5J,QAAjC6J,eAKFC,GAAkB5D,aAHA,SAACrG,GAAD,OAC7BA,EAAMsD,SAAS4B,SAAS5B,YAIxB,gBAAG6B,EAAH,EAAGA,KAAH,SAASC,OAAoB/D,KAAI,SAAAjD,GAAE,OAAI+G,EAAK/G,SAGjC8L,GAAyB,SAAClK,GAAD,OACpCA,EAAMsD,SAASiC,UAEFwE,MAAf,QClGaI,GAAI,uCAAG,4BAAA9K,EAAA,sEACQ+K,iCAAuB,CAC/CzB,IAAK0B,OAAOC,SAASC,KACrBC,wBAAwB,IAHR,cACZC,EADY,yBAKXA,GALW,2CAAH,qDAQJC,GAAK,uCAAG,WAAOC,GAAP,SAAAtL,EAAA,+EAEXuL,gBAAW,CACfD,aACAE,YAAaR,OAAOC,SAASC,KAC7BO,WAAY,oBALG,sDAQjBC,MAAM,iCAAD,OAAkCJ,IACvC7M,aAAakN,WAAW,OATP,wDAAH,sDAaLC,GAAM,uCAAG,sBAAA5L,EAAA,sEACd6L,mBADc,2CAAH,qDCRNf,GAAOpF,YAAiB,aAAD,uCAAe,WAAOoG,EAAP,4BAAA9L,EAAA,6DAAYF,EAAZ,EAAYA,SAAZ,SAC1B6F,KAD0B,cAC3CuE,EAD2C,OAE3CtC,EAF2C,iBAEnCsC,QAFmC,IAEnCA,OAFmC,EAEnCA,EAAUtC,aAFyB,QAEhB,GAC3BmE,EAH2C,iBAG9B7B,QAH8B,IAG9BA,OAH8B,EAG9BA,EAAU6B,kBAHoB,SAIjDjM,EAASsK,GAAaxC,IAJ2B,kBAK1C,CAAEA,QAAOmE,eALiC,2CAAf,yDAQvBV,GAAQ3F,YACnB,cADmC,uCAEnC,WAAO4F,GAAP,SAAAtL,EAAA,sEACQ2F,GAAU2F,GADlB,2CAFmC,uDAOxBM,GAASlG,YAAiB,eAAD,sBAAiB,sBAAA1F,EAAA,sEAC/C2F,KAD+C,4CAK1CqG,GAAavL,YAAY,CACpC5D,KAAM,QACN6C,aA7B+B,CAC/BkI,MAAO,GACPmE,YAAY,EACZE,OAAQ,WA2BRvL,SAAU,GACV2F,cAAe,SAAAC,GACbA,EACGC,QAAQuE,GAAKoB,SAAS,SAAAvL,GACrBA,EAAMsL,OAAS,aAEhB1F,QAAQuE,GAAKtE,WAAW,SAAC7F,EAAOC,GAC/BD,EAAMsL,OAAS,OACftL,EAAMiH,MAAQhH,EAAOC,QAAQ+G,MAC7BjH,EAAMoL,WAAanL,EAAOC,QAAQkL,cAEnCxF,QAAQ8E,GAAMa,SAAS,SAAAvL,GACtBA,EAAMsL,OAAS,aAEhB1F,QAAQ8E,GAAM7E,WAAW,SAAA7F,GACxBA,EAAMsL,OAAS,UAEhB1F,QAAQqF,GAAOM,SAAS,SAAAvL,GACvBA,EAAMsL,OAAS,aAEhB1F,QAAQqF,GAAOpF,WAAW,SAAA7F,GACzBA,EAAMsL,OAAS,OACftL,EAAMiH,MAAQ,GACdjH,EAAMoL,YAAa,QAMdI,GAAgB,SAACxL,GAAD,MAAuB,CAClDiH,MAAOjH,EAAM0K,MAAMzD,MACnBmE,WAAYpL,EAAM0K,MAAMU,aAGbvB,GAAc,SAAC7J,GAAD,OAAsBA,EAAM0K,MAAMzD,OAEhDwE,GAAqBpF,YAAewD,IAAa,SAAA5C,GAC5D,IAAM/F,EAAS,mDAAoCwK,KAAKzE,GAExD,OADsB,OAAN/F,QAAM,IAANA,OAAA,EAAAA,EAAQyK,QAASzK,EAAOyK,OAAOC,QAAU,MAI9CC,GAAoB,SAAC7L,GAAD,OAAsBA,EAAM0K,MAAMY,QAEpDD,MAAf,Q,+BCDeS,ICpEXC,GDoEWD,GApEe,SAI5B1P,EACA4P,GAEA,IAyDyBhQ,EAzDnBO,EAAM,SAAC,GAON,IANLC,EAMI,EANJA,YACAyP,EAKI,EALJA,UACGpQ,EAIC,kBACJ,EAAwBe,oBAAS,GAAjC,mBAAOsP,EAAP,KAAaC,EAAb,KAEA,OACE,gDACMtQ,GADN,IAEEuQ,MAAO,CACLC,SAAU,WACVC,cAAe,SACfC,QAAS,cACTC,WAAY,MACZC,OAAQ,GAEVC,aAAc,kBAAMP,GAAQ,IAC5BQ,OAAQ,SAAAC,GAGDA,EAAMnO,cAAcoO,SAASD,EAAME,gBACtCX,GAAQ,IAdd,UAkBE,cAAC/P,EAAD,2BACMI,GADN,IAEEuQ,aAAc,kBAAMZ,GAAQ,IAC5Ba,QAAS,kBAAMb,GAAQ,OAEzB,qBACEC,MAAO,CACLC,SAAU,WACVY,MAAO,EACPC,OAAQ,EACRC,WAAYjB,EAAO,UAAY,UALnC,SAQE,qBACEtQ,UAAU,UACVwQ,MAAO,CAAEC,SAAU,WAAYe,MAAO,EAAGC,SAAU,UAFrD,SAIE,cAACrB,EAAD,2BAAUC,GAAV,IAAqBqB,aAAc,kBAAMnB,GAAQ,gBAQ3D,OADA5P,EAAIN,YAAJ,oBAIyBD,EAJoBI,GAKrBH,aAAeD,EAAiBE,MAAQ,YALhE,KACOK,GEhDHgR,GAAezB,IANF,SAAC,GAAD,IAAMjQ,EAAN,2BACjB,cAAC,EAAD,2BAAeA,GAAf,aACE,mBAAGD,UAAU,yBAfJ,SAAC,GAAD,IAAG4R,EAAH,EAAGA,KAAMC,EAAT,EAASA,SAAT,OACX,qBAAK7R,UAAU,eAAf,SACE,qBAAIA,UAAU,YAAd,UACE,6BACE,mBAAGA,UAAU,WAAb,SAAyB4R,EAAKvG,UAEhC,6BACE,mBAAGjK,QAASyQ,EAAZ,8BAyCOC,GA3BD,SAAC,GAAkB,IAAb7R,EAAY,oBACxBsD,EAAWR,IACXO,EAAOL,EAAe2M,IAG5B,MAAkB,YAFH3M,EAAegN,IAG5B,cAAC,EAAD,2BAAehQ,GAAf,IAAsB8R,UAAQ,EAA9B,SACE,mBAAG/R,UAAU,uCAEbsD,EAAKkM,WACP,cAACmC,GAAD,CACEtB,UAAW,CAAEuB,KAAMtO,EAAMuO,SAAU,kBAAMtO,EAAS8L,QAClDzO,YAAaX,IAGf,cAAC,EAAD,2BACMA,GADN,IAEEY,aAAc,CACZoB,QAAS,SAAC8M,GACRxL,EAASuL,GAAMC,MAGnBnO,YAAa,O,6BCjDboR,GAAW,SACfC,EADe,EAGfC,EACAC,GACI,IAAD,mBAHFC,EAGE,KAHCC,EAGD,KACHJ,EAAQK,KAAO,aACfL,EAAQM,aAAe,SACvBN,EAAQO,UAAY,OAEpB3N,OAAO4N,OAAOR,EAASE,GACvBF,EAAQS,SAASR,EAAME,EAAGC,IAGtBM,GAAa,SACjBV,EADiB,EAGjBW,EACAT,GACI,IAAD,mBAHFC,EAGE,KAHCC,EAGD,KACHxN,OAAO4N,OAAOR,EAASE,GACvBF,EAAQY,YACRZ,EAAQa,IAAIV,EAAGC,EAAGO,EAAQ,EAAG,EAAIG,KAAKC,IACtCf,EAAQgB,QAGJC,GAAW,SACfjB,EACAkB,EACAC,EACAjB,GAEAtN,OAAO4N,OAAOR,EAASE,GAEvBF,EAAQY,YACRZ,EAAQoB,OAAR,MAAApB,EAAO,aAAWkB,IAClBlB,EAAQqB,OAAR,MAAArB,EAAO,aAAWmB,IAClBnB,EAAQsB,U,yFFmGKC,GA1HwB,SAAC,GAO1B,IANZ9O,EAMW,EANXA,MACA+O,EAKW,EALXA,KACAC,EAIW,EAJXA,YACAC,EAGW,EAHXA,QACAC,EAEW,EAFXA,aACG3T,EACQ,kBACL4T,EAAWC,iBAA0B,MAC3C,EAAkD9S,mBAAS,CACzDqQ,MAAO,EACPC,OAAQ,IAFV,0BAASD,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,OAAUyC,EAA1B,KAKAC,qBAAU,WACR,GAAIH,GAAYA,EAASI,QAAS,CAChC,IAAMhC,EAAU4B,EAASI,QAAQC,WAAW,MAC5C,GAAIjC,EAAS,CACX,IAAMkC,EAAiB,CAAC9C,EAAQ,EAAGC,EAAS,GAM5C,OALAW,EAAQmC,OACRnC,EAAQoC,UAAR,MAAApC,EAAqBkC,GACrBlC,EAAQqC,WAAWH,EAAO,IAAKA,EAAO,GAAI9C,EAAOC,GEyFjC,SACtBW,EACAwB,EACApC,EACAC,GAaA,IAXI,IADJ6C,EACG,uDADc,CAAC,EAAG,GAEfI,EAAc,QACdC,GAAQL,EAAO,GACfM,EAAOnD,EAAS6C,EAAO,GACvBO,GAAQP,EAAO,GACfQ,EAAOtD,EAAQ8C,EAAO,GAEtBS,EAAe,SAACC,GAAD,OACb,IAANA,EAAU,EAAIA,EAAIpB,EAAK7J,YAAc,EAAI,EAAI,IAE3CiL,EAAI,EACDA,EAAIpB,EAAKtN,SAAWsN,EAAKqB,OAAO,IAAMH,GAAM,CACjD,IAAMvC,EAAIyC,EAAIpB,EAAKtN,SAAWsN,EAAKqB,OAAO,GACtC1C,GAAKsC,GACPxB,GAASjB,EAAS,CAACG,EAAGoC,GAAO,CAACpC,EAAGqC,GAAO,CACtCF,cACAQ,UAAWH,EAAaC,KAG5BA,IAIF,IADAA,GAAK,EACEA,EAAIpB,EAAKtN,SAAWsN,EAAKqB,OAAO,IAAMJ,GAAM,CACjD,IAAMtC,EAAIyC,EAAIpB,EAAKtN,SAAWsN,EAAKqB,OAAO,GACtC1C,GAAKuC,GACPzB,GAASjB,EAAS,CAACG,EAAGoC,GAAO,CAACpC,EAAGqC,GAAO,CACtCF,cACAQ,UAAWH,EAAaC,KAG5BA,IAIF,IADAA,EAAI,EACGA,EAAIpB,EAAKtN,SAAWsN,EAAKqB,OAAO,IAAML,GAAM,CACjD,IAAMpC,EAAIwC,EAAIpB,EAAKtN,SAAWsN,EAAKqB,OAAO,GACtCzC,GAAKmC,GACPtB,GAASjB,EAAS,CAACyC,EAAMrC,GAAI,CAACsC,EAAMtC,GAAI,CACtCkC,cACAQ,UAAWH,EAAaC,KAG5BA,IAIF,IADAA,GAAK,EACEA,EAAIpB,EAAKtN,SAAWsN,EAAKqB,OAAO,IAAMN,GAAM,CACjD,IAAMnC,EAAIwC,EAAIpB,EAAKtN,SAAWsN,EAAKqB,OAAO,GACtCzC,GAAKoC,GACPvB,GAASjB,EAAS,CAACyC,EAAMrC,GAAI,CAACsC,EAAMtC,GAAI,CACtCkC,cACAQ,UAAWH,EAAaC,KAG5BA,KFrJIG,CAAS/C,EAASwB,EAAMpC,EAAOC,EAAQ6C,GEItB,SACvBlC,EACAvN,GAEAA,EAAM0C,MAAMrC,SAAQ,SAAAkQ,GAGlB,IAAMC,EAAI,CAACD,EAAK3O,OAAO8L,EAAG6C,EAAK3O,OAAO+L,GAEhC8C,EAAI,CAACF,EAAK1O,OAAO6L,EAAG6C,EAAK1O,OAAO8L,GAEhCpM,EAAImP,KAAQC,IAAIF,EAAGD,GAEnBI,EAAOvC,KAAKwC,KAAK,SAAAtP,EAAE,GAAM,GAAR,SAAYA,EAAE,GAAM,IAErC4O,EAAIO,KAAQI,IAAIvP,EAAGqP,GACzBpC,GACEjB,EAEAmD,KAAQK,IAAIP,EAAGE,KAAQM,IAAIb,EAAGI,EAAK3O,OAAOqP,IAC1CP,KAAQC,IAAIF,EAAGC,KAAQM,IAAIb,EAAGI,EAAK1O,OAAOoP,IAC1C,CACEpB,YAAa,QACbQ,UAAW,QAKjB,IAAMa,EACI,SADJA,EAEG,MAFHA,EAGI,OAHJA,EAIE,CACJ5Q,KAAM,QACN6C,MAAO,SAILgO,EAAWnR,EAAMyC,MAAMkD,QAAO,kBAAyB,WAAzB,EAAGmG,SACjCsF,EAAUpR,EAAMyC,MAAMkD,QAAO,kBAAyB,UAAzB,EAAGmG,SAChCuF,EAAWrR,EAAMyC,MAAMkD,QAAO,kBAAyB,WAAzB,EAAGmG,SACjCzP,EAAO2D,EAAMyC,MAAMkD,QAAO,qBAAGmG,SAGnCzP,EAAKgE,SAAQ,gBAAGqN,EAAH,EAAGA,EAAGC,EAAN,EAAMA,EAAGsD,EAAT,EAASA,EAAT,OACXhD,GAAWV,EAAS,CAACG,EAAGC,GAAIsD,EAAG,CAAEK,UAAWJ,EAAW5Q,UAGzDjE,EAAKgE,SAAQ,gBAAGqN,EAAH,EAAGA,EAAGC,EAAN,EAAMA,EAAGsD,EAAT,EAASA,EAAG9N,EAAZ,EAAYA,MAAZ,OACXmK,GAASC,EAAS,CAACG,EAAIuD,EAAI,EAAGtD,GAAIxK,EAAO,CACvCmO,UAAWJ,EAAW/N,WAK1BkO,EAAShR,SAAQ,gBAAGqN,EAAH,EAAGA,EAAGC,EAAN,EAAMA,EAAGsD,EAAT,EAASA,EAAT,OACfhD,GAAWV,EAAS,CAACG,EAAGC,GAAIsD,EAAG,CAAEK,UAAWJ,OAG9CG,EAAShR,SAAQ,gBAAGqN,EAAH,EAAGA,EAAGC,EAAN,EAAMA,EAAGsD,EAAT,EAASA,EAAG9N,EAAZ,EAAYA,MAAZ,OACfmK,GAASC,EAAS,CAACG,EAAIuD,EAAI,EAAGtD,GAAIxK,EAAO,CAAEmO,UAAWJ,OAIxDE,EAAQ/Q,SAAQ,gBAAGqN,EAAH,EAAGA,EAAGC,EAAN,EAAMA,EAAGsD,EAAT,EAASA,EAAT,OACdhD,GAAWV,EAAS,CAACG,EAAGC,GAAIsD,EAAG,CAAEK,UAAWJ,OAG9CE,EAAQ/Q,SAAQ,gBAAGqN,EAAH,EAAGA,EAAGC,EAAN,EAAMA,EAAGsD,EAAT,EAASA,EAAG9N,EAAZ,EAAYA,MAAZ,OACdmK,GAASC,EAAS,CAACG,EAAIuD,EAAI,EAAGtD,GAAIxK,EAAO,CAAEmO,UAAWJ,OAIxDC,EAAS9Q,SAAQ,gBAAGqN,EAAH,EAAGA,EAAGC,EAAN,EAAMA,EAAGsD,EAAT,EAASA,EAAT,OACfhD,GAAWV,EAAS,CAACG,EAAGC,GAAIsD,EAAG,CAAEK,UAAWJ,OAG9CC,EAAS9Q,SAAQ,gBAAGqN,EAAH,EAAGA,EAAGC,EAAN,EAAMA,EAAGsD,EAAT,EAASA,EAAG9N,EAAZ,EAAYA,MAAZ,OACfmK,GAASC,EAAS,CAACG,EAAIuD,EAAI,EAAGtD,GAAIxK,EAAO,CACvCmO,UAAWJ,OFlFTK,CAAUhE,EAASvN,GACZ,kBAAMuN,EAAQiE,eAGxB,CAAC7E,EAAOC,EAAQ5M,EAAOmP,EAAUJ,IAEpCO,qBAAU,WACR,IAAMmC,EAAmB,WACvB,GAAItC,GAAYA,EAASI,QAAS,CAChC,IAAMqB,EA4Fd,SAAwBc,GACtB,GAAIA,GAAcA,EAAWnC,QAAS,CACpC,MAAqDmC,EAAWnC,QAChE,MAAO,CAAE3C,OADT,EAAQ+E,aACShF,MADjB,EAA8BiF,aAEzB,MAAO,CAAEhF,OAAQ,EAAGD,MAAO,GAhGfkF,CAAe1C,GAC5BE,EAAqBuB,KAQzB,OAJAa,IACA1H,OAAO+H,iBAAiB,OAAQL,GAChC1H,OAAO+H,iBAAiB,SAAUL,GAE3B,WACL1H,OAAOgI,oBAAoB,SAAUN,GACrC1H,OAAOgI,oBAAoB,OAAQN,MAEpC,CAAC9E,EAAOC,EAAQuC,IAEnBG,qBAAU,WACJH,GAAYA,EAASI,UACvBpK,aAAOgK,EAASI,SAASyC,KACvBC,eACGC,cAAc,GAEdC,GAAG,QAAQ,SAAAxV,GACVqS,EAAY,CACV,CAAC,EAAG,EAAGrS,EAAEyV,IACT,CAAC,EAAG,EAAGzV,EAAE0V,IACT,CAAC,EAAG,EAAG,SAMflN,aAAOgK,EAASI,SAASyC,KACvBM,eACGJ,cAAc,GACdK,YAAY,CAAC,IAAM,IACnBJ,GAAG,QAAQ,SAAAxV,GAAM,IAAD,EACf8O,GAAG,UAAGA,UAAH,QAAU,CACX,CAAC,EAAG,GAAIkB,EAAQ,GAChB,CAAC,EAAG,GAAIC,EAAS,GACjB,CAAC,EAAG,EAAG,IAET,MAAoBjQ,EAAE6V,UAAd9E,EAAR,EAAQA,EAAGC,EAAX,EAAWA,EAAG8E,EAAd,EAAcA,EAERH,EAAO,CACX,CAACG,EAAG,EAAG/E,EAAIf,EAAQ,GACnB,CAAC,EAAG8F,EAAG9E,EAAIf,EAAS,GACpB,CAAC,EAAG,EAAG,IAGH4F,EAAY9B,KAAQgC,IAAIJ,EAAM5B,KAAQiC,IAAIlH,KAChDA,GAAM6G,EAENtD,EAAYwD,UAInB,CAACrD,EAAUH,EAAapC,EAAQD,IAEnC,IAAMiG,EACJ,SACEC,GADF,OAGA,SAAAlW,GAEE,GAAIwS,GAAYA,EAASI,QAAS,CAChC,IAAMuD,EAAO3D,EAASI,QAAQwD,wBACxBrF,EAAI/Q,EAAEqW,QAAUF,EAAKG,KACrBtF,EAAIhR,EAAEuW,QAAUJ,EAAKK,IAC3BN,EAAK,CAACnF,EAAIf,EAAQ,EAAGgB,EAAIf,EAAS,OAIlCwG,EAAkBR,EAAmB3D,GACrCoE,EAAcT,EAAmB1D,GAEvC,OACE,kDACM3T,GADN,IAEE+X,IAAKnE,EACLoE,YAAaH,EAEbI,WAAY,kBAAMvE,EAAQ,CAACvN,IAAUA,OACrCiL,MAAOA,EACPC,OAAQA,EACRtR,UAAWmY,IAAWlY,EAAMD,UAAW,uBACvCoB,QAAS2W,M,0FGnHMK,G,kDACnBjR,MAA6B,G,KAC7BC,MAA6B,G,KAE7BiR,MAAO,E,KAEPC,WAAaC,eACVC,WAAW,MACXC,MACC,OACAC,eACGlW,IAAG,SAAAwC,GAAI,OAAKA,EAA2BE,OACvCiB,SAAS,IACTwS,SAAS,KAEbF,MAAM,cClCI,WACb,IAAIrR,EAA6B,GAC7BuR,EAAW,EACf,SAASF,EAAMG,GACb,IAAMzB,EAAIwB,EAAWC,EACrBxR,EAAMrC,SAAQ,SAAUuF,GAQtB,IAAQhE,EAAmBgE,EAAnBhE,OAAQC,EAAW+D,EAAX/D,OAChB,GAAsB,kBAAXD,GAAyC,kBAAXC,GAErCD,EAAO+L,GACP9L,EAAO8L,GACP/L,EAAOuS,IACPtS,EAAOsS,IACPvS,EAAO+L,EAAI9L,EAAO8L,EAAI,GACtB,CACA,IAAMyG,GAAqBvS,EAAO8L,EAAI,GAAK/L,EAAO+L,GAAK,GACvD/L,EAAOuS,IAAM1B,EAAI2B,EACjBvS,EAAOsS,IAAM1B,EAAI2B,MAgBzB,OAVAL,EAAMrR,MAAQ,SAACmI,GAEb,OADAnI,EAAQmI,EACDkJ,GAGTA,EAAME,SAAW,SAACpJ,GAEhB,OADAoJ,EAAWpJ,EACJkJ,GAGFA,EDNiBM,GAAeJ,SAAS,KAC7CF,MAAM,SAAUO,eAAgBL,UAAU,KAAKM,YAAY,MAC3DR,MAAM,WAAYS,aAAO,GAAGP,SAAS,MACrCF,MAAM,WAAYU,aAAO,GAAGR,SAAS,MACrCF,MACC,UACAW,cAAa,qBAAGzD,EAA+B,MAEhD8C,MAAM,SAAUY,aAAY,EAAG,IAC/BC,O,KAEHnG,MAAQ,YAWD,IAVLhM,EAUI,EAVJA,MACAC,EASI,EATJA,MACAmS,EAQI,EARJA,OASA,EAAKpS,MAAQA,EACb,EAAKC,MAAQA,EAAM3B,KAAI,SAAAwP,GAAI,sBAAUA,MAErC,EAAKqD,WAAWnR,MAAM,EAAKA,OAEzB,EAAKmR,WAAWG,MAAM,QAItBrR,MAAM,EAAKA,OAEX,EAAKkR,WAAWG,MAAM,eAItBrR,MAAM,EAAKA,OAEb,EAAKkR,WAAWzB,GAAG,QAAQ,WACzB0C,EAAO,CACLpS,MAAO,EAAKA,MACZC,MAAO,EAAKA,WAIhB,EAAKkR,WAAWkB,UAChB,EAAKnB,MAAO,G,KAGdiB,KAAO,WAEL,OADA,EAAKjB,MAAO,EACL,EAAKC,WAAWgB,Q,KAGzBG,OAAS,YAAmE,IAAhEtS,EAA+D,EAA/DA,MAAOC,EAAwD,EAAxDA,MACjB,EAAKkR,WAAWgB,OAEhB,IAAMI,EAA8C7U,OAAOU,YACzD,EAAK4B,MAAM1B,KAAI,SAAAT,GAAI,MAAI,CAACA,EAAKE,IAAKF,OAE9B2U,EAAoCxS,EAAM1B,KAAI,SAAAT,GAAI,8CACnDA,GADmD,IAEtDoN,EAA2B,KAAvB,GAAMW,KAAK6G,UACfvH,EAA2B,KAAvB,GAAMU,KAAK6G,WACZF,EAAa1U,EAAKE,MAJiC,IAKtDyQ,EAAG3Q,EAAK2Q,OAEV,EAAKxO,MAAQwS,EACb,EAAKvS,MAAQA,EAAM3B,KAAI,SAAAwP,GAAI,sBAAUA,MAErC,EAAKqD,WAAWnR,MAAM,EAAKA,OAEzB,EAAKmR,WAAWG,MAAM,QAItBrR,MAAM,EAAKA,OAEX,EAAKkR,WAAWG,MAAM,eAItBrR,MAAM,EAAKA,OAEb,EAAKkR,WAAWM,MAAM,GAAGY,W,KAG3BK,WAAa,gBAAGzH,EAAH,EAAGA,EAAGC,EAAN,EAAMA,EAAN,OACX,EAAKiG,WAAWwB,KAAK1H,EAAGC,EAAG,M,wEElHzB0H,GAASja,IAAO0V,IAAV,kEAMG,SAASzC,GAAT,GAAmD,IAC1D9S,EAAQ,CACZF,SAF6D,EAAlCA,SAG3Bia,cAAe,CAACC,MAChBC,cAAe,CAACC,OAElB,OACE,cAACJ,GAAD,UACE,cAAC,KAAD,eAAmB9Z,M,iDCXZma,GAAclW,YAAY,CACrC5D,KAAM,SACN6C,aAPgC,CAChCkX,MAAO,GACPC,kBAAmB,IAMnBnW,SAAU,CACRoW,UAAW,SAACnW,EAAOC,GACjBD,EAAMiW,MAAQhW,EAAOC,SAEvBkW,gBAAiB,SAACpW,EAAOC,GACvBD,EAAMkW,kBAAoBjW,EAAOC,YAKhC,GAAuC8V,GAAY7V,QAA3CgW,GAAR,GAAQA,UAAWC,GAAnB,GAAmBA,gBAGbC,GAAe,SAACrW,GAAD,OAAsBA,EAAMsW,OAAOL,OAqClDM,GAAsBlQ,YACjCgQ,GACAjQ,IAnCa,SACb6P,EACA3V,GAEA,OAAI2V,EAAMrO,OAAS,EAAU,GACtBnH,OAAOC,OAAOJ,GAClB2F,QACC,qBAAGxC,MAAkBG,GAAG4S,cAAcrQ,SAAS8P,EAAMO,kBAGtDC,MACC,kBAAepX,EAAf,EAAGoF,WAA+BiS,EAAlC,EAAsBjS,WAAtB,OACEhE,OAAOC,OAAOgW,GAAG9O,OAASnH,OAAOC,OAAOrB,GAAGuI,UAE9CvG,KAAI,kBAAoC,CAAE/C,MAAtC,EAAGwC,IAA+C2C,MAAlD,EAAQA,MAASG,OACrB+S,MAAM,EAAG,OAwBDC,GAA4BvQ,aA1CP,SAACrG,GAAD,OAChCA,EAAMsW,OAAOJ,oBA2Cb9P,IAtBiB,SAAC6P,EAAe3V,GACjC,OAAI2V,EAAMrO,OAAS,EAAU,GACtBnH,OAAOC,OAAOJ,GAClB2F,QACC,qBAAGxC,MAAkBG,GAAG4S,cAAcrQ,SAAS8P,EAAMO,kBAGtDC,MACC,kBAAepX,EAAf,EAAGoF,WAA+BiS,EAAlC,EAAsBjS,WAAtB,OACEhE,OAAOC,OAAOgW,GAAG9O,OAASnH,OAAOC,OAAOrB,GAAGuI,UAE9C+O,MAAM,EAAG,OAeCX,MAAf,QCZMa,I,OAAe,SAAC,GAUf,IATLva,EASI,EATJA,MACAsE,EAQI,EARJA,KACAmC,EAOI,EAPJA,MACApF,EAMI,EANJA,SAOA,EAAwCf,mBACtC6D,OAAOC,OAAOE,EAAKG,eADrB,mBAAOA,EAAP,KAAqB+V,EAArB,KAGM3X,EAAWR,IAEjBiR,qBAAU,WACRkH,EAAgBrW,OAAOC,OAAOE,EAAKG,iBAClC,CAACH,IAEJ,IAAMmW,EAAe,WACnBpZ,IACAmZ,EAAgBrW,OAAOC,OAAOE,EAAKG,gBAyB/BiW,EAAOvW,OAAOC,OAAOK,GAAcM,KAAI,kBAAqB,CAChEjD,GAD2C,EAAG0C,IAE9C5E,KAF2C,EAAQuH,MAEvCG,OAGRqT,EAAiBpY,EAAe+X,IAEhCM,EAAcD,EAAe5V,KAAI,gBAAGoC,EAAH,EAAGA,MAAH,MAAqB,CAC1DrF,GADqC,EAAU0C,IAE/C5E,KAAMuH,EAAMG,OAGd,OACE,qCACE,yBAAQhI,UAAU,cAAlB,UACE,oBAAGA,UAAU,oBAAb,UACGU,EADH,KACYyG,EAAM6E,UAElB,wBACEhM,UAAU,mBACV,aAAW,iBACXU,MAAM,iBACNU,QAAS+Z,EAJX,SAME,mBACEnb,UAAU,mCACV,cAAY,WAGhB,wBACEA,UAAU,mBACV,aAAW,eACXU,MAAM,eACNU,QAvDW,WACjBmC,EACEkE,EAAW,CACTtC,aAAcA,EAAaM,KAAI,qBAAGP,OAClC1C,GAAIwC,EAAKE,IACTwC,SAAU1C,EAAK0C,SAASlF,MAG5B2Y,KA2CI,SAME,mBAAGnb,UAAU,gCAAgC,cAAY,cAG7D,yBAASA,UAAU,eAAnB,SACE,cAAC,KAAD,CACEsb,YAAaA,EACbF,KAAMA,EACNG,QAAS,SAAA7Y,GAAK,OAAIa,EAASiX,GAAgB9X,KAC3C8Y,WAtDU,SAACC,GACjB,IAAMC,EAAUL,EAAevB,MAAK,SAAA5E,GAAC,OAAIA,EAAEhQ,MAAQuW,EAAIjZ,MACnDkZ,GACFR,GAAgB,SAAAS,GAAI,6BAAQA,GAAR,CAAcD,QAoD9BE,SAhDa,SAACnY,GACpByX,GAAgB,SAAAS,GAAI,OAAIA,EAAKtR,QAAO,SAACkF,EAAGsF,GAAJ,OAAUA,IAAMpR,SAgD9CvD,WAAY,CACV2b,KAAM,aACNC,YAAa,aACbnS,SAAU,4BACVoS,YAAa,2BACbC,gBAAiB,gCACjBtB,OAAQ,qBACRuB,YAAa,2BACbX,YAAa,0BACbY,iBAAkB,YAClBC,mBAAoB,eAEtBC,gBAAgB,EAChBC,aAAcC,YAOlBA,GAAe,SAAC,GAII,IAHxBb,EAGuB,EAHvBA,IACAc,EAEuB,EAFvBA,iBACAX,EACuB,EADvBA,SAEA,OACE,uBAAM5b,UAAU,cAAhB,UACGyb,EAAInb,KACL,wBACEI,MAAO6b,EACPnb,QAASwa,EACT5b,UAAU,wBAMHwc,GAnL2B,SAAC,GAKrB,IAJpB9b,EAImB,EAJnBA,MACAsE,EAGmB,EAHnBA,KACAmC,EAEmB,EAFnBA,MAEmB,IADnBsV,gBACmB,SACnB,EAAwBzb,oBAAS,GAAjC,mBAAO0b,EAAP,KAAaC,EAAb,KACMpZ,EAAWR,IACjB,OAAO2Z,EACL,cAAC,GAAD,CACEhc,MAAOA,EACPsE,KAAMA,EACNmC,MAAOA,EACPpF,SAAU,kBAAM4a,GAAQ,MAG1B,qCACE,yBAAQ3c,UAAU,cAAlB,UACE,oBAAGA,UAAU,oBAAb,UACGU,EADH,KACYyG,EAAM6E,UAEjBhH,EAAK0C,SAAS2E,OAAOuF,KAAKgL,OAASH,GAClC,wBACEzc,UAAU,mBACV,aAAW,aACXoB,QAAS,kBAAMub,GAAQ,IAHzB,SAKE,mBAAG3c,UAAU,iBAAiB,cAAY,cAIhD,yBAASA,UAAU,eAAnB,SACE,oBAAIA,UAAU,oBAAd,SACGmH,EAAM1B,KAAI,SAAAT,GAAI,OACb,oBACE5D,QAAS,kBAAMmC,EAASsG,GAAO7E,EAAKE,OACpCiM,aAAc,kBAAM5N,EAASqG,GAAU5E,EAAKE,OAC5C4L,aAAc,kBAAMvN,EAASqG,GAAU,MAEvC5J,UAAU,6BALZ,SAOGgF,EAAK6C,MAAMG,IAHPhD,EAAKE,gBCjDlB2X,GAAgB,SAAC,GAMhB,IALL7X,EAKI,EALJA,KACAjD,EAII,EAJJA,SAKA,EAA0Bf,mBAASgE,EAAK6C,MAAMG,IAA9C,mBAAOH,EAAP,KAAciV,EAAd,KACA,EAAwB9b,mBAASgE,EAAKvC,MAAtC,mBAAOA,EAAP,KAAasa,EAAb,KACA,EAAgC/b,oBAAS,GAAzC,mBAAOgc,EAAP,KAAiBC,EAAjB,KACM1Z,EAAWR,IAEjBiR,qBAAU,WACR8I,EAAS9X,EAAK6C,MAAMG,IACpB+U,EAAQ/X,EAAKvC,QACZ,CAACuC,IAEJ,IAEMmW,EAAe,WACnBpZ,IACAkb,GAAY,GACZH,EAAS9X,EAAK6C,MAAMG,IACpB+U,EAAQ/X,EAAKvC,OAoBf,OACE,qCACE,oBAAGzC,UAAU,oBAAb,UACE,uBACEA,UAAU,iBACVyC,KAAK,OACLK,YAAY,QACZJ,MAAOmF,EACPlF,SAAU,SAAAtB,GAAC,OAAIyb,EAASzb,EAAEkF,OAAO7D,QACjC4S,KAAM,KAER,qBAAKtV,UAAU,OAAf,SACGgd,EAtCmC,CAAC,aAAc,aAuClCvX,KAAI,SAAAhD,GAAI,OACrB,sBAEEzC,UAAU,uBACVoB,QAAS,kBAlCC,SAACqB,GACvBwa,GAAY,GACZF,EAAQta,GAgCmBya,CAAgBza,IAHjC,SAKGA,GAJIA,MAQT,uBAAMzC,UAAU,cAAhB,UACGyC,EACD,wBACEzC,UAAU,kBACVoB,QAAS,kBAAM6b,GAAY,cAMrC,wBACEjd,UAAU,mBACV,aAAW,iBACXU,MAAM,iBACNU,QAAS+Z,EAJX,SAME,mBAAGnb,UAAU,mCAAmC,cAAY,WAE9D,wBACEA,UAAU,mBACV,aAAW,eACXU,MAAM,eACNU,QAzDa,WACjBmC,EACEkE,EAAW,CACThF,OACAoF,MAAO,CAAEG,GAAIH,GACbrF,GAAIwC,EAAKE,IACTwC,SAAU1C,EAAK0C,SAASlF,MAG5B2Y,KA4CE,SAME,mBAAGnb,UAAU,gCAAgC,cAAY,eAM3Dmd,GAAY,SAAC,GAAmC,IAAjCnY,EAAgC,EAAhCA,KACnB,EAAwBhE,oBAAS,GAAjC,mBAAO0b,EAAP,KAAaC,EAAb,KACA,OAAOD,EACL,cAAC,GAAD,CAAe1X,KAAMA,EAAMjD,SAAU,kBAAM4a,GAAQ,MAEnD,qCACE,oBAAG3c,UAAU,oBAAb,UACE,mBAAG2O,KAAM3J,EAAKE,IAAd,SAAoBF,EAAK6C,MAAMG,KAC/B,sBAAMhI,UAAU,cAAhB,SAA+BgF,EAAKvC,UAErCuC,EAAK0C,SAAS2E,OAAOuF,KAAKgL,OACzB,wBACE5c,UAAU,mBACV,aAAW,aACXoB,QAAS,kBAAMub,GAAQ,IAHzB,SAKE,mBAAG3c,UAAU,iBAAiB,cAAY,eA2CrCod,GApCG,WAChB,IAAM7Z,EAAWR,IAEXiC,EAAO/B,EAAekI,IAEtBhG,EAA4BN,OAAOC,OAAOE,EAAKG,cAC/C0D,EAA0BhE,OAAOC,OAAOE,EAAK6D,YAEnD,OACE,sBAAK7I,UAAU,OAAf,UACE,yBAAQA,UAAU,cAAlB,UACE,cAAC,GAAD,CAAWgF,KAAMA,IACjB,sBAAMhF,UAAU,mBAAhB,SACE,wBACEA,UAAU,SACV,aAAW,QACXoB,QAAS,kBAdmBmC,EAASsG,GAcT,MAH9B,wBASJ,yBAAS7J,UAAU,eAAnB,SACE,cAAC,GAAD,CAAiBgF,KAAMA,MAEzB,cAAC,GAAD,CACEtE,MAAM,eACNsE,KAAMA,EACNmC,MAAOhC,EACPsX,UAAQ,IAEV,cAAC,GAAD,CAAU/b,MAAM,aAAasE,KAAMA,EAAMmC,MAAO0B,QAOhDwU,GAAkB,SAAC,GAAmC,IAAjCrY,EAAgC,EAAhCA,KACzB,EAAwBhE,oBAAS,GAAjC,mBAAO0b,EAAP,KAAaC,EAAb,KACA,OAAOD,EACL,cAAC,GAAD,CAAqB1X,KAAMA,EAAMjD,SAAU,kBAAM4a,GAAQ,MAEzD,qCACE,cAAC,GAAD,UAAO3X,EAAKmD,YAAYH,KACvBhD,EAAK0C,SAAS2E,OAAOuF,KAAKgL,OACzB,wBACE5c,UAAU,mBACV,aAAW,aACXoB,QAAS,kBAAMub,GAAQ,IAHzB,SAKE,mBAAG3c,UAAU,iBAAiB,cAAY,eAO9Csd,GAAsB,SAAC,GAMtB,IALLtY,EAKI,EALJA,KACAjD,EAII,EAJJA,SAKA,EAAsCf,mBAASgE,EAAKmD,YAAYH,IAAhE,mBAAOG,EAAP,KAAoBoV,EAApB,KACMha,EAAWR,IAEjBiR,qBAAU,WACRuJ,EAAevY,EAAKmD,YAAYH,MAC/B,CAAChD,IAEJ,IAAMmW,EAAe,WACnBpZ,IACAwb,EAAevY,EAAKmD,YAAYH,KAclC,OACE,qCACE,uBAAMhI,UAAU,0BAAhB,wBACc,IACZ,mBAAG2O,KAAK,8CAAR,sBAFF,OAEyE,IACvE,mBAAGA,KAAK,wBAAR,uBAHF,kDAMA,0BACE3O,UAAU,WACV8C,YAAY,cACZJ,MAAOyF,EACPxF,SAAU,SAAAtB,GAAC,OAAIkc,EAAelc,EAAEkF,OAAO7D,UAEzC,cAAC,GAAD,UAAOyF,IACP,wBACEnI,UAAU,mBACV,aAAW,iBACXU,MAAM,iBACNU,QAAS+Z,EAJX,SAME,mBAAGnb,UAAU,mCAAmC,cAAY,WAE9D,wBACEA,UAAU,mBACV,aAAW,eACXU,MAAM,eACNU,QAtCa,WACjBmC,EACEkE,EAAW,CACTU,YAAa,CAAEH,GAAIG,GACnB3F,GAAIwC,EAAKE,IACTwC,SAAU1C,EAAK0C,SAASlF,MAG5B2Y,KA0BE,SAME,mBAAGnb,UAAU,gCAAgC,cAAY,eChP3Dwd,GAAY1d,IAAO0V,IAAV,gKASTiI,GAAW3d,IAAO0V,IAAV,2FAgBCkI,GAVO,SAAC,GAAD,IAAG3d,EAAH,EAAGA,SAAH,OACpB,cAACyd,GAAD,UACE,qBAAKxd,UAAU,oBAAf,SACE,qBAAKA,UAAU,iDAAf,SACE,cAACyd,GAAD,UAAW1d,WChBNmX,GAAY,SAACyG,EAAgBC,GACxC,IAAMC,EAAMzI,KAAQgC,IAAIuG,EAAQvI,KAAQ0I,UAAU,CAAC,GAAD,oBAAKF,GAAL,CAAa,OAC/D,cAAmBC,EAAnB,GACA,MAAO,CADP,gDAIWE,GAAa,SAAC/Y,GAA6B,IAAD,EACjDgZ,EAAK,UAAGnZ,OAAOW,QAAQR,EAAK6D,YAAYmD,cAAnC,QAA6C,EAEtD,OADAgS,EAAQA,EAAQ,EAAI,EAAIA,EACD,EAAhB,SAAAA,EAAS,MAGLC,GAAkB,CAC7BnJ,OAAQ,CAAC,EAAG,GACZ3O,SAAU,GACVyD,UAAW,GCiHEsU,GA7G0B,SAAAje,GACvC,IAAMke,EAAclb,EAAe8H,IAC7BqT,EAAkBnb,EAAe+H,IACjCqT,EAAepb,EAAegI,IAC9BqT,EAA2Brb,EAC/BiI,IAEI3H,EAAWR,IAEjB,EAAqB/B,mBAAS,IAAIoX,IAA3BE,EAAP,oBACA,EAA4BtX,mBAA0B,CACpDmG,MAAO,GACPC,MAAO,KAFT,mBAAOmX,EAAP,KAAeC,EAAf,KAKA,EAA4Bxd,mBAAiB,CAC3C,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,KAHT,mBAAO2c,EAAP,KAAec,EAAf,KAOAzK,qBAAU,WACR,IAAI0K,EAAazR,KAAKC,MAAQ,GAY9B,OAXAoL,EAAWnF,MAAM,CACfhM,MAAO,GACPC,MAAO,GACPmS,OAAQ,YAAuB,IAApBpS,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MACV8F,EAAMD,KAAKC,MACbA,EAAMwR,EAAa,KACrBF,EAAU,CAAErX,MAAM,aAAKA,GAAQC,MAAM,aAAKA,KAC1CsX,EAAaxR,MAIZ,WACLoL,EAAWgB,UAEZ,CAAChB,IAGJtE,qBAAU,WACR,IAAM7M,EAAQtC,OAAOC,OAAOqZ,GAAa1Y,KAAI,SAAAT,GAAI,MAAK,CACpD6C,MAAO7C,EAAK6C,MAAMG,GAClBoK,EAAmB,IAAhBW,KAAK6G,SACRvH,EAAmB,IAAhBU,KAAK6G,SACRjE,EAAGoI,GAAW/Y,GACdE,IAAKF,EAAKE,QAGNkC,EAA0BvC,OAAOC,OAAOqZ,GAAaQ,QACzD,SAACvX,EAAD,GAA2C,IAA5Bd,EAA2B,EAAhCpB,IAAaC,EAAmB,EAAnBA,aAIrB,OAHAN,OAAO+Z,KAAKzZ,GAAcJ,SAAQ,SAAAwB,GAAM,OACtCa,EAAMG,KAAK,CAAEjB,SAAQC,cAEhBa,IAET,IAGFkR,EAAWmB,OAAO,CAAEtS,QAAOC,YAC1B,CAAC+W,EAAa7F,IAEjB,IAIMuG,EAAW,SAACxa,GAChB,OAAO,SAACoM,GAA4B,IAAD,EAEjC,EAAeyG,GAAU9B,KAAQiC,IAAIsG,GAASlN,GAA9C,mBAAO2B,EAAP,KAAUC,EAAV,KAEAhO,EAAM,UAACiU,EAAWuB,WAAW,CAAEzH,IAAGC,aAA5B,aAAC,EAAiCnN,OAItC4Z,EAAcD,GAAS,SAAA3Z,GAAG,OAAI3B,EAASqG,GAAU1E,OACjD6Z,EAAeF,GAAS,SAAA3Z,GAAG,OAAI3B,EAASsG,GAAO3E,OAG/C8Z,EDrEuB,SAC7BrB,EACAjZ,EACAgF,EACAC,EACAsV,GAEA,IAAMC,EAAuBra,OAAOU,YAClCb,EAAMyC,MAAM1B,KAAI,SAAAT,GACd,MAAekS,GAAUyG,EAAQ,CAAC3Y,EAAKoN,EAAGpN,EAAKqN,IAA/C,mBAAOD,EAAP,KAAUC,EAAV,KACMsD,EAAIgI,EAAO,GAAG,GAAK3Y,EAAK2Q,EAC9B,MAAO,CAAC3Q,EAAKE,IAAN,2BAAgBF,GAAhB,IAAsBoN,IAAGC,IAAGsD,IAAGnF,MAAO,UAIjDyO,EAAqBla,SACnB,SAAAG,GAAG,OAAKga,EAAqBha,GAAKsL,MAAQ,YAGxC9G,GAAewV,EAAqBxV,KACtCwV,EAAqBxV,GAAa8G,MAAQ,UAGxC7G,IACFuV,EAAqBvV,GAAU6G,MAAQ,SAGzC,IAAMpJ,EAAQ1C,EAAM0C,MAAM3B,KAAI,SAAAwP,GAC5B,IAAMkK,EACmB,kBAAhBlK,EAAK3O,OACR2O,EAAK3O,OACkB,kBAAhB2O,EAAK3O,OACZ5B,EAAMyC,MAAM8N,EAAK3O,QAAQpB,IACzB+P,EAAK3O,OAAOpB,IACZka,EACmB,kBAAhBnK,EAAK1O,OACR0O,EAAK1O,OACkB,kBAAhB0O,EAAK1O,OACZ7B,EAAMyC,MAAM8N,EAAK1O,QAAQrB,IACzB+P,EAAK1O,OAAOrB,IAGlB,MAAO,CAAEoB,OAFM4Y,EAAqBC,GAEnB5Y,OADF2Y,EAAqBE,OAItC,MAAO,CAAEjY,MAAOtC,OAAOC,OAAOoa,GAAuB9X,SCwB3BiY,CACxB1B,EACAY,EACAH,EACAC,EACAC,GAGI7K,EDzFqB,SAACkK,EAAgBlK,GAE5C,IADA,IAAItN,EAAWsN,EAAKtN,SAAWwX,EAAO,GAAG,GAClCxX,EAAW,IAChBA,GAAY,EAEd,MAAO,CACL2O,OAAQoC,GAAUyG,EAAQlK,EAAKqB,QAC/B3O,WACAyD,UAAW6J,EAAK7J,WCiFL0V,CAAc3B,EAAQM,IAEnC,OACE,qCACE,cAAC,GAAD,aACEvZ,MAAOsa,EACPvL,KAAMA,EACNC,YAhCkB,SAACiK,GACvBc,GAAU,SAAAc,GAAU,OAAInK,KAAQgC,IAAIuG,EAAQ4B,OAgCxC5L,QAASmL,EACTlL,aAAcmL,GACV9e,IAMN,cAAC,GAAD,UAAgBoe,GAAgB,cAAC,GAAD,UC9HhCmB,GAAO1f,IAAO2D,EAAV,wFAMJgc,GAAS3f,IAAO4f,OAAV,8CAaGC,GATS,SAAA1f,GAAK,OAC3B,+CAASA,GAAT,aACE,eAACwf,GAAD,yBACa,cAACD,GAAD,CAAM7Q,KAAK,2BAAX,mBADb,QACyE,IACvE,cAAC6Q,GAAD,CAAM7Q,KAAK,8CAAX,2BCCAiR,GAAoBrf,GAFX,SAAC,GAAD,IAAMN,EAAN,2BAAkB,6CAAOA,GAAP,kCCXb,SAAC,GAId,IAAD,IAHJ8B,gBAGI,MAHO,aAGP,EACEiO,EAAU/M,EAAe4M,IACzBtM,EAAWR,IACjB,EAAgC/B,oBAAS,GAAzC,mBAAOuL,EAAP,KAAiBsT,EAAjB,KACA,EAAgC7e,mBAAS,IAAzC,mBAAO8e,EAAP,KAAiBC,EAAjB,KACA,OACE,kCACE,uBACEzd,SAAU,SAAAjB,GACRA,EAAEC,iBACFiC,EACEyK,GAAe,CACb9I,IAAI,GAAD,OAAK8K,GAAL,OACDzD,EAAW,SAAW,UADrB,iBAEMuT,EAFN,QAGHvT,cAGJxK,KAXJ,UAcE,sBAAK/B,UAAU,qCAAf,UACE,uBACEA,UAAS,gBAAWuM,EAAW,cAAgB,IAC/C9J,KAAK,SACLC,MAAM,SACNtB,QAAS,kBAAMye,GAAY,MAE7B,uBACE7f,UAAS,gBAAWuM,EAAW,GAAK,eACpC9J,KAAK,SACLC,MAAM,UACNtB,QAAS,kBAAMye,GAAY,SAG/B,sBAAK7f,UAAU,QAAf,UACGgQ,EACAzD,EAAW,SAAW,UAFzB,SAGE,uBACE9J,KAAK,OACLC,MAAOod,EACPhd,YAAY,aACZH,SAAU,SAAAtB,GAAC,OAAI0e,EAAY1e,EAAEkF,OAAO7D,UAPxC,UAWA,sBAAK1C,UAAU,gBAAf,UACE,uBAAOA,UAAU,oBAAoByC,KAAK,SAASC,MAAM,WACzD,uBACE1C,UAAU,mBACVyC,KAAK,QACLC,MAAM,SACNtB,QAASW,cD3CoC,kBA8B1Cie,GALW9P,IArCR,SAAC,GAAD,IAAMjQ,EAAN,2BAChB,cAAC,EAAD,2BAAeA,GAAf,aACE,mBAAGD,UAAU,iBAAiB,aAAW,cAYhC,SAAC,GAAD,IACXigB,EADW,EACXA,UACAvO,EAFW,EAEXA,aAFW,OAIX,qBAAK1R,UAAU,eAAf,SACE,qBAAIA,UAAU,YAAd,UACE,6BACE,cAAC4f,GAAD,CAAmBhf,YAAa,CAAEQ,QAASsQ,OAE7C,6BACE,mBACEtQ,QAAS,WACPsQ,IACAuO,KAHJ,gCEKFC,GAAwB,SAAC7T,GAK7B,IAAIsB,EAAW,GAIf,OAHItB,EAAO8T,OAAMxS,GAAY,KACzBtB,EAAOuQ,QAAOjP,GAAY,KAC1BtB,EAAO+T,SAAQzS,GAAY,KACxBA,GAGH0S,GAAkB,SAAChU,GACvB,IAAIsB,EAAWuS,GAAsB7T,EAAOuF,MAO5C,OALIvF,EAAOZ,SACTkC,GAAY,IACZA,GAAYuS,GAAsB7T,EAAOZ,SAGpCkC,GAAY,QC1CN2S,GAFS/f,GANT,SAAC,GAAD,IAAMN,EAAN,2BACb,cAAC,EAAD,2BAAeA,GAAf,aACE,mBAAGD,UAAU,qBAAqB,aAAW,yBDG5B,WACnB,IAAM8N,EAAY7K,EAAeoL,IAC3BkS,EAAmBtd,EAAeqL,IAClC/K,EAAWR,IACjB,OACE,6BACG+K,EAAUrI,KAAI,gBAAGP,EAAH,EAAGA,IAAKmH,EAAR,EAAQA,OAAR,OACb,6BACE,yBACErM,UAAWE,IACT,kBACAgF,IAAQqb,GAAoB,cAE9BxO,WAAY1F,EAAOuF,KAAKgL,OAASvQ,EAAOuF,KAAKwO,QAC7Chf,QAAS,kBAAMmC,EAAS6K,GAAelJ,KANzC,UAQGA,EARH,IAQSmb,GAAgBhU,OATlBnH,UCNuC,kBCgBzCsb,GAtBsD,SAAC,GAAD,IAChEvgB,EADgE,2BAGnE,gDAASA,GAAT,cACE,cAAC,EAAD,CACE,aAAW,SACXmB,QAAS,kBAAM+N,MAAM,mCAFvB,SAIE,mBAAGnP,UAAU,sBAGf,cAAC,GAAD,IAEA,cAAC,GAAD,CACEY,YAAa,GACbyP,UAAW,CACT4P,UAAW,kBAAMQ,QAAQC,IAAI,qBCoDtBC,GAjE0C,SAAC,GAAkB,IAAb1gB,EAAY,oBACnEyC,EAAQO,EAAewX,IACvBtI,EAAUlP,EAAe0X,IACzBpX,EAAWR,IACjB,EAAwB/B,oBAAS,GAAjC,mBAAOsP,EAAP,KAAaC,EAAb,KAEMqQ,EAAQC,uBAAY,WACxBtQ,GAAQ,GACRhN,EAASgX,GAAU,OAClB,CAAChX,IAYJ,OAVAyQ,qBAAU,WACR,IAAM8M,EAAY,SAACzf,GACH,WAAVA,EAAE0f,KACJH,KAIJ,OADAlZ,SAAS8O,iBAAiB,UAAWsK,GAAW,GACzC,kBAAMpZ,SAAS+O,oBAAoB,UAAWqK,GAAW,MAC/D,CAACF,IAEGtQ,EACL,gDAASrQ,GAAT,IAAgBD,UAAU,UAA1B,UACE,oBAAGA,UAAU,0BAAb,UACE,uBACEghB,WAAS,EACTve,KAAK,OACLzC,UAAU,QACV8C,YAAY,SACZJ,MAAOA,EACPC,SAAU,SAAAtB,GAAC,OAAIkC,EAASgX,GAAUlZ,EAAEkF,OAAO7D,WAE7C,sBAAM1C,UAAU,gBAAhB,SACE,mBAAGA,UAAU,0BAGjB,qBAAKA,UAAU,OAAf,SACE,oBAAIA,UAAU,YAAd,SACGmS,EAAQ1M,KAAI,gBAAG/C,EAAH,EAAGA,MAAOmF,EAAV,EAAUA,MAAV,OACX,oBAEEnH,MAAOgC,EACPyO,aAAc,kBAAM5N,EAASqG,GAAUlH,KACvCoO,aAAc,kBAAMvN,EAASqG,GAAU,MAJzC,SAME,mBACExI,QAAS,WACPmC,EAASsG,GAAOnH,IAChBke,KAHJ,SAMG/Y,KAXEnF,cAmBf,cAAC,EAAD,CAAWtB,QAAS,kBAAMmP,GAAQ,IAAlC,SACE,mBAAGvQ,UAAU,wB,sBC1DbihB,GAAO,SAAC,GAA4C,IAA1C3d,EAAyC,EAAzCA,KAAM4d,EAAmC,EAAnCA,QAAYjhB,EAAuB,kBACvD,IAAKqD,EAAKF,QAAS,OAAO,KAC1B,IAAM+d,EACU,YAAd7d,EAAKb,KACD,UACc,UAAda,EAAKb,KACL,SACA,OACN,OACE,+CAASxC,GAAT,aACE,sBAAKD,UAAWE,IAAW,eAAD,aAAuBihB,IAAjD,UACE,wBAAQnhB,UAAU,SAASoB,QAAS8f,IACnC5d,EAAKF,eAaCsa,GAPO,SAAC,GAAkB,IAAbzd,EAAY,oBAChCqD,EAAOL,EAAec,GACtBR,EAAWR,IAEjB,OAAO,cAAC,GAAD,aAAMO,KAAMA,EAAM4d,QAAS,kBAAM3d,EAASS,OAAkB/D,KCvB/DmhB,GAAkBthB,YAAO6f,GAAP7f,CAAH,mFAMfuhB,GAAiBvhB,YAAOmhB,GAAPnhB,CAAH,sFAMdwhB,GAAwBxhB,YAAOoe,GAAPpe,CAAH,oFAMrByhB,GAASzhB,IAAO0hB,IAAV,+MAsCGC,GA1BU,WACvB,OACE,qCACE,eAACF,GAAD,WACE,cAAC,GAAD,IACA,sBAAK/Q,MAAO,CAAEG,QAAS,QAAvB,UACE,cAAC,GAAD,CACEH,MAAO,CACLG,QAAS,eACTF,SAAU,WACVI,OAAQ,KAGZ,cAAC,GAAD,UAIJ,cAACuQ,GAAD,IAEA,cAACC,GAAD,IAEA,cAACC,GAAD,QC9CSI,GATO,WACpB,IAAMne,EAAWR,IAKjB,OAJAiR,qBAAU,WACRzQ,EAASoe,QACR,CAACpe,IAEG,cAAC,GAAD,KCJIqe,GAAQC,YAAe,CAClCC,QAAS,CACPhT,MAAOiT,GACPrX,KAAMsX,GACNtH,OAAQuH,GACRva,SAAUwa,GACV5e,KAAM6e,KCCKC,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCEd,GAAwB,kBAAb3a,SAAuB,CAChC,IAAMmb,GAAanb,SAASob,cAAc,SAE1CC,IAAMC,cAAcH,IAGtBI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUvB,MAAOA,GAAjB,SACE,cAAC,GAAD,QAGJla,SAAS0b,eAAe,SAM1BhB,O","file":"static/js/main.f0cedfad.chunk.js","sourcesContent":["/** These are the main buttons of the application */\n\nimport React from 'react'\nimport styled from 'styled-components'\nimport classNames from 'classnames'\n\ntype ButtonProps = React.ButtonHTMLAttributes<HTMLButtonElement>\n\nconst Button: React.FC<ButtonProps> = ({\n  children,\n  className,\n  ...props\n}: ButtonProps) => {\n  return (\n    <button className={classNames(className, 'button')} {...props}>\n      {children}\n    </button>\n  )\n}\n\nconst AppButton = styled(Button)`\n  &:not(:hover) {\n    background-color: #0000;\n    border-color: #0000;\n    color: #fff;\n  }\n  &:hover {\n  }\n  &:active {\n    background-color: #eee;\n  }\n`\n\nexport default AppButton\n","import classNames from 'classnames'\nimport React from 'react'\nimport { useState } from 'react'\nimport Modal from 'react-modal'\n\n// TODO maybe we don't need to use react-modal,\n// maybe bulma modal will be sufficient\n\ntype WithModalHOC = <ButtonProps, ContentProps>(\n  Button: React.FC<ButtonProps>,\n  Content: React.FC<ContentProps>,\n  title?: string,\n) => React.FC<\n  React.HTMLAttributes<HTMLDivElement> & {\n    buttonProps?: ButtonProps\n    contentProps?: ContentProps\n    title?: string\n  }\n>\n\nconst withModal: WithModalHOC = <\n  ButtonProps extends React.HTMLAttributes<HTMLElement>,\n  ContentProps extends React.HTMLAttributes<HTMLElement>,\n>(\n  Button: React.FC<ButtonProps>,\n  Content: React.FC<ContentProps>,\n  title = '',\n) => {\n  const HOC = ({\n    buttonProps = {} as ButtonProps,\n    contentProps = {} as ContentProps,\n    title: dynamicTitle = '',\n    ...rest\n  }: {\n    buttonProps?: ButtonProps\n    contentProps?: ContentProps\n    title?: string\n  } & React.HTMLAttributes<HTMLElement>) => {\n    const [promptOpen, setPromptOpen] = useState(false)\n\n    const finalTitle = dynamicTitle || title || ''\n\n    return (\n      <>\n        <Button\n          {...buttonProps}\n          {...rest}\n          className={classNames(buttonProps?.className, rest?.className)}\n          onClick={e => {\n            e.preventDefault()\n            setPromptOpen(true)\n            if (buttonProps.onClick) buttonProps.onClick(e)\n          }}\n        />\n\n        {promptOpen && (\n          <Modal\n            isOpen={promptOpen}\n            onRequestClose={() => setPromptOpen(false)}\n            contentLabel={finalTitle}\n            overlayClassName={{\n              base: 'modal modal-background is-active',\n              afterOpen: '',\n              beforeClose: '',\n            }}\n            className={{\n              base: 'modal-content',\n              afterOpen: '',\n              beforeClose: '',\n            }}\n            closeTimeoutMS={50}\n          >\n            <button\n              className=\"modal-close\"\n              onClick={() => setPromptOpen(false)}\n            >\n              close\n            </button>\n\n            <div className=\"card\">\n              <header className=\"card-header\">\n                <p className=\"card-header-title\">{finalTitle}</p>\n              </header>\n              <div className=\"card-content\">\n                <Content\n                  {...contentProps}\n                  onFinish={() => setPromptOpen(false)}\n                />\n              </div>\n            </div>\n          </Modal>\n        )}\n      </>\n    )\n  }\n\n  HOC.displayName = `WithModal(${getDisplayName(Button)})`\n  return HOC\n}\n\nfunction getDisplayName<T>(WrappedComponent: React.FC<T>) {\n  return WrappedComponent.displayName || WrappedComponent.name || 'Component'\n}\n\nexport default withModal\n","import React, { useState } from 'react'\nimport AppButton from '../../components/AppButton'\nimport withModal from '../../components/withModal'\n\ninterface LoginFormProps {\n  onLogin: (oidcIssuer: string) => void\n}\n\nconst LoginButton = ({ ...props }) => <AppButton {...props}>Login</AppButton>\n\nconst LoginForm = ({ onLogin }: LoginFormProps) => {\n  const [idp, setIdp] = useState(\n    localStorage.getItem('idp') ?? 'https://solidcommunity.net',\n  )\n\n  const onSubmit: React.FormEventHandler = e => {\n    e.preventDefault()\n    localStorage.setItem('idp', idp)\n    onLogin(idp)\n  }\n\n  const onChangeInput = (e: React.FormEvent<HTMLInputElement>) => {\n    e.preventDefault()\n    const newValue = e.currentTarget.value\n    setIdp(newValue)\n  }\n  return (\n    <form onSubmit={onSubmit}>\n      <div className=\"field\">\n        <div className=\"control\">\n          <input\n            id=\"idp\"\n            className=\"input\"\n            type=\"url\"\n            value={idp}\n            onChange={onChangeInput}\n            placeholder=\"Where is your Solid Pod?\"\n          />\n        </div>\n      </div>\n      <div className=\"field\">\n        <div className=\"control\">\n          <input type=\"submit\" value=\"Connect\" className=\"button is-link\" />\n        </div>\n      </div>\n    </form>\n  )\n}\n\nconst LoginPrompt = withModal(\n  LoginButton,\n  LoginForm,\n  'Select your Solid identity provider',\n)\n\nexport default LoginPrompt\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport type { RootState, AppDispatch } from './store'\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { AppThunk, RootState } from '../../app/store'\n\nexport interface InfoState {\n  message: string\n  type: 'success' | 'error' | 'info'\n}\n\nconst initialState: InfoState = {\n  message: '',\n  type: 'info',\n}\n\nexport const setTemporaryInfo =\n  (info: InfoState): AppThunk =>\n  async (dispatch, getState) => {\n    dispatch(setInfo(info))\n    await new Promise(resolve => {\n      setTimeout(resolve, 5000)\n    })\n    const currentInfo = selectInfo(getState())\n    if (\n      currentInfo.message === info.message &&\n      currentInfo.type === info.type\n    ) {\n      dispatch(clearInfo())\n    }\n  }\n\nexport const infoSlice = createSlice({\n  name: 'info',\n  initialState,\n  reducers: {\n    setInfo: (state, action: PayloadAction<InfoState>) => {\n      return action.payload\n    },\n    clearInfo: () => {\n      return initialState\n    },\n  },\n})\n\nexport const { setInfo, clearInfo } = infoSlice.actions\n\nexport const selectInfo = (state: RootState): InfoState => state.info\n\nexport default infoSlice.reducer\n","import graphlib, { Graph } from 'graphlib'\n// import { Dependency } from './simulation/types'\n// import findCyclesAdjacency from 'elementary-circuits-directed-graph'\nimport { Graph as AbstractGraph } from './types'\n\nfunction pruneCore(graph: Graph) {\n  if (!graphlib.alg.isAcyclic(graph)) {\n    // const cycles = graphlib.alg.findCycles(graph);\n    throw new Error('pruning is possible on DAG only')\n  }\n  const edges = graph.edges()\n  edges.forEach(edge => {\n    // remove edge\n    graph.removeEdge(edge)\n    // see if another path exists\n    const paths = graphlib.alg.dijkstra(graph, edge.v)\n    // if the other path doesn't exist, add the node back\n    if (paths[edge.w].distance === Infinity) {\n      graph.setEdge(edge)\n    }\n  })\n  return graph\n}\n\nexport const prune = (input: AbstractGraph): AbstractGraph => {\n  const graph = new graphlib.Graph()\n\n  Object.values(input).forEach(node => {\n    graph.setNode(node.uri)\n\n    Object.values(node.dependencies).forEach(dependency =>\n      graph.setEdge(node.uri, dependency.uri),\n    )\n  })\n\n  const output: AbstractGraph = Object.fromEntries(\n    Object.entries(input).map(([uri, node]) => [\n      uri,\n      { ...node, dependencies: {} },\n    ]),\n  )\n\n  const prunedEdges = pruneCore(graph)\n    .edges()\n    .map(({ v: source, w: target }) => ({ source, target }))\n\n  prunedEdges.forEach(({ source, target }) => {\n    output[source].dependencies[target] = output[target]\n  })\n\n  return output\n}\n\n/*\nexport function getCycles(dependencies: Dependency[]): Dependency[][] {\n  const nodes = Array.from(\n    new Set([\n      ...dependencies.map(d => d.dependent),\n      ...dependencies.map(d => d.dependency),\n    ]),\n  )\n  const nodeIndexes = Object.fromEntries(\n    Object.entries(nodes).map(([key, value]) => [value, +key]),\n  )\n\n  const adjacency = Array(nodes.length)\n    .fill(null)\n    .map(() => [] as number[])\n  dependencies.forEach(({ dependent, dependency }) => {\n    const dependentIndex = nodeIndexes[dependent]\n    const dependencyIndex = nodeIndexes[dependency]\n    adjacency[dependentIndex].push(dependencyIndex)\n  })\n\n  // try to detect loops (cycles of length 1)\n  // this is due to the limits of the findCyclesAdjacency, which fails to detect loops\n  // https://github.com/antoinerg/elementary-circuits-directed-graph/issues/13\n  // @TODO remove loop detection when the issue is fixed\n  const loops = adjacency.reduce((loops, adj, i) => {\n    if (adj.includes(i)) loops.push([i, i])\n    return loops\n  }, [] as number[][])\n\n  const rawCycles = loops.length > 0 ? loops : findCyclesAdjacency(adjacency)\n\n  const simpleCycles = rawCycles.map(cycle =>\n    cycle.slice(0, -1).map(i => nodes[i]),\n  )\n\n  return simpleCycles\n    .map(cycle => simpleCycleToCycle(cycle, dependencies))\n    .sort((a, b) => a.length - b.length)\n    .slice(0, 5)\n}\n\nfunction simpleCycleToCycle(\n  simpleCycle: string[],\n  dependencies: Dependency[],\n): Dependency[] {\n  return simpleCycle.map((uri, index) => {\n    const dependent = simpleCycle[index]\n    const dependency = simpleCycle[(index + 1) % simpleCycle.length]\n    return (\n      dependencies.find(\n        d => d.dependency === dependency && d.dependent === dependent,\n      ) || {\n        dependent,\n        dependency,\n        doc: '',\n      }\n    )\n  })\n  }\n  */\n","import {\n  addUrl,\n  asUrl,\n  getSolidDataset,\n  getTerm,\n  getTermAll,\n  getThing,\n  getThingAll,\n  getUrlAll,\n  removeAll,\n  saveSolidDatasetAt,\n  setStringWithLocale,\n  setThing,\n  setUrl,\n  Thing,\n  ThingPersisted,\n  UrlString,\n} from '@inrupt/solid-client'\nimport { fetch } from '@inrupt/solid-client-authn-browser'\nimport { rdf, rdfs } from 'rdf-namespaces'\nimport { Definition, PartialNode, Statement } from './types'\n\ninterface Graph {\n  nodes: (Definition | Statement)[]\n  links: [string, string][]\n}\n\nconst term = {\n  definition: 'https://terms.math.livegraph.org#Definition',\n  statement: 'https://terms.math.livegraph.org#Statement',\n  dependsOn: 'https://terms.math.livegraph.org#dependsOn',\n}\n\nexport const fetchGraph = async (documentUri: UrlString): Promise<Graph> => {\n  const dataset = await getSolidDataset(documentUri, { fetch })\n  const things = getThingAll(dataset)\n  const graph: Graph = { nodes: [], links: [] }\n  things.forEach(thing => {\n    const node = thingToNode(thing, documentUri)\n    graph.nodes.push(node)\n    getTermAll(thing, term.dependsOn).forEach(dependency => {\n      graph.links.push([node.id, dependency.value])\n    })\n  })\n  return graph\n}\n\nexport const updateNode = async (\n  node: PartialNode,\n): Promise<Definition | Statement> => {\n  // we want to save any partial data that are provided\n  // so how do we do it?\n\n  // save a label\n\n  const dataset = await getSolidDataset(node.document, { fetch })\n  const thing = getThing(dataset, node.id) as ThingPersisted\n  if (thing) {\n    let newThing = thing\n    if (node.label) {\n      newThing = setStringWithLocale(newThing, rdfs.label, node.label.en, 'en')\n    }\n\n    if (node.type) {\n      newThing = setUrl(newThing, rdf.type, term[node.type])\n    }\n\n    if (node.description) {\n      newThing = setStringWithLocale(\n        newThing,\n        rdf.value,\n        node.description.en,\n        'en',\n      )\n    }\n\n    if (node.dependencies) {\n      newThing = removeAll(newThing, term.dependsOn)\n      node.dependencies.forEach(depUri => {\n        newThing = addUrl(newThing, term.dependsOn, depUri)\n      })\n    }\n\n    if (newThing !== thing) {\n      const newDataset = setThing(dataset, newThing)\n      await saveSolidDatasetAt(node.document, newDataset, { fetch })\n    }\n    return thingToNode(newThing, node.document)\n  }\n  throw new Error('node to update not found')\n}\n\nconst thingToNode = (\n  thing: Thing,\n  document: string,\n): Definition | Statement => {\n  const uri = asUrl(thing)\n  const type = getTerm(thing, rdf.type)?.value ?? ''\n  const description = getTerm(thing, rdf.value)?.value ?? ''\n  const label = getTerm(thing, rdfs.label)?.value ?? ''\n  const dependencies = getUrlAll(thing, term.dependsOn)\n  switch (type) {\n    case term.definition:\n      return {\n        id: uri,\n        type: 'definition',\n        label: { en: label },\n        description: { en: description },\n        dependencies,\n        dependents: [],\n        examples: [],\n        created: 0,\n        updated: 0,\n        document,\n      }\n    case term.statement:\n      return {\n        id: uri,\n        type: 'statement',\n        label: { en: label },\n        description: { en: description },\n        dependencies,\n        dependents: [],\n        examples: [],\n        proofs: [],\n        created: 0,\n        updated: 0,\n        document,\n      }\n    default:\n      throw new Error('thing is not a Definition or Statement')\n  }\n}\n","import {\n  createAsyncThunk,\n  createSelector,\n  createSlice,\n  PayloadAction,\n} from '@reduxjs/toolkit'\nimport { AppDispatch, RootState } from '../../app/store'\nimport { Entity } from '../../types'\nimport { setTemporaryInfo } from '../info/infoSlice'\nimport { prune } from './algorithms'\nimport * as api from './mathAPI'\nimport { Definition, Graph, PartialNode, Statement } from './types'\n\nexport interface MathState {\n  entities: {\n    node: Entity<Definition | Statement>\n    // we'll add examples and proofs and citations here\n  }\n  ui: {\n    highlighted: string\n    selected: string\n  }\n}\n\nconst initialState: MathState = {\n  entities: {\n    node: {\n      byId: {},\n      allIds: [],\n    },\n  },\n  ui: {\n    highlighted: '',\n    selected: '',\n  },\n}\n\n// Thunks\nexport const addGraph = createAsyncThunk(\n  'math/addGraph',\n  async (uri: string) => {\n    return await api.fetchGraph(uri)\n  },\n)\n\nexport const updateNode = createAsyncThunk<\n  Definition | Statement,\n  PartialNode,\n  { dispatch: AppDispatch }\n>(\n  'math/updateNode',\n  async (node: PartialNode, { dispatch }): Promise<Definition | Statement> => {\n    dispatch(setTemporaryInfo({ type: 'info', message: 'saving ...' }))\n    const updated = await api.updateNode(node)\n    dispatch(setTemporaryInfo({ type: 'success', message: '... saved' }))\n    return updated\n  },\n)\n\nexport const mathSlice = createSlice({\n  name: 'math',\n  initialState,\n  reducers: {\n    highlight: (state, action: PayloadAction<string>) => {\n      state.ui.highlighted = action.payload\n    },\n    select: (state, action: PayloadAction<string>) => {\n      state.ui.selected = action.payload\n    },\n  },\n  extraReducers: builder => {\n    builder\n      .addCase(addGraph.fulfilled, (state, action) => {\n        const { nodes, links } = action.payload\n        nodes.forEach(node => {\n          state.entities.node.byId[node.id] = node\n          state.entities.node.allIds.push(node.id)\n        })\n        links.forEach(([dependent, dependency]) => {\n          state.entities.node.byId[dependent].dependencies.push(dependency)\n          state.entities.node.byId[dependency].dependents.push(dependent)\n        })\n      })\n      .addCase(updateNode.fulfilled, (state, action) => {\n        const node = action.payload\n        state.entities.node.byId[node.id].label = node.label\n        state.entities.node.byId[node.id].type = node.type\n        state.entities.node.byId[node.id].description = node.description\n        // replace dependencies\n        const oldDependencies = state.entities.node.byId[node.id].dependencies\n        state.entities.node.byId[node.id].dependencies = node.dependencies\n        // fix dependents\n        const deletedDependencies = oldDependencies.filter(\n          d => !node.dependencies.includes(d),\n        )\n        const addedDependencies = node.dependencies.filter(\n          d => !oldDependencies.includes(d),\n        )\n        addedDependencies.forEach(d => {\n          state.entities.node.byId[d].dependents.push(node.id)\n        })\n        deletedDependencies.forEach(d => {\n          state.entities.node.byId[d].dependents = state.entities.node.byId[\n            d\n          ].dependents.filter(a => a !== node.id)\n        })\n      })\n  },\n})\n\nexport const { highlight, select } = mathSlice.actions\n\n// Selectors\nconst selectGraphNodes = (state: RootState) => state.math.entities.node\n\n// this is a repeated code because of circular dependencies\n// @TODO fix - dry (reappears in documentSlice)\nconst selectDocumentEntities = (state: RootState) =>\n  state.document.entities.document\n\nexport const selectGraph = createSelector(\n  selectGraphNodes,\n  selectDocumentEntities,\n  ({ byId: nodeDict }, { byId: documentDict }) => {\n    const enrichedNodes: Graph = Object.fromEntries(\n      Object.entries(nodeDict).map(([id, { id: uri, document, ...node }]) => [\n        id,\n        {\n          ...node,\n          uri,\n          dependencies: {},\n          dependents: {},\n          document: documentDict[document],\n        },\n      ]),\n    )\n\n    Object.entries(enrichedNodes).forEach(([id, enrichedNode]) => {\n      enrichedNode.dependencies = Object.fromEntries(\n        nodeDict[id].dependencies.map(id => [id, enrichedNodes[id]]),\n      )\n      enrichedNode.dependents = Object.fromEntries(\n        nodeDict[id].dependents.map(id => [id, enrichedNodes[id]]),\n      )\n    })\n\n    return enrichedNodes\n  },\n)\n\nexport const selectPrunedGraph = createSelector(selectGraph, graph =>\n  prune(graph),\n)\n\nexport const selectHighlighted = (state: RootState) => state.math.ui.highlighted\nexport const selectSelected = (state: RootState) => state.math.ui.selected\n\nconst selectNodeDependencies = (uri: string, graph: Graph): string[] =>\n  uri ? Object.values(graph[uri]?.dependencies ?? {}).map(node => node.uri) : []\n\nexport const selectSelectedNodeDependencies = createSelector(\n  selectSelected,\n  selectGraph,\n  selectNodeDependencies,\n)\n\nexport const selectSelectedNode = createSelector(\n  selectSelected,\n  selectGraph,\n  (uri, graph) => graph[uri],\n)\n\nexport default mathSlice.reducer\n","import {\n  buildThing,\n  createSolidDataset,\n  createThing,\n  getEffectiveAccess,\n  getSolidDataset,\n  getTerm,\n  getTermAll,\n  getThing,\n  getThingAll,\n  saveSolidDatasetAt,\n  setThing,\n} from '@inrupt/solid-client'\nimport { fetch } from '@inrupt/solid-client-authn-browser'\nimport { EffectiveAccess } from '@inrupt/solid-client/dist/interfaces'\nimport { dct, rdf, solid } from 'rdf-namespaces'\nimport { MathDocument } from '../math/types'\n\nexport const findMathDocumentsOfPerson = async (\n  webId: string,\n): Promise<MathDocument[]> => {\n  let documentUris: string[] = []\n  if (webId) {\n    const { public: publicTypeIndex } = await getTypeIndexes(webId)\n    if (publicTypeIndex) {\n      const index = await getSolidDataset(publicTypeIndex, { fetch })\n      const things = getThingAll(index)\n      const mathDocuments = things\n        .filter(thing =>\n          getTermAll(thing, solid.forClass)\n            .map(a => a.value)\n            .includes('https://terms.math.livegraph.org#Definition'),\n        )\n        .map(thing => getTermAll(thing, solid.instance))\n        .flat()\n        .map(a => a.value)\n\n      documentUris = mathDocuments\n    }\n  }\n  if (documentUris.length === 0)\n    documentUris = [\n      'https://mrkvon.solidcommunity.net/public/math/graph-theory.ttl',\n    ]\n\n  const accesses: Record<string, EffectiveAccess> = Object.fromEntries(\n    await Promise.all(\n      documentUris.map(async uri => {\n        const dataset = await getSolidDataset(uri, { fetch })\n        const rights = getEffectiveAccess(dataset)\n        return [uri, rights]\n      }),\n    ),\n  )\n\n  return documentUris.map(uri => ({ id: uri, uri, access: accesses[uri] }))\n}\n\nexport const createMathDocument = async (\n  uri: string,\n  webId: string,\n  isPublic: boolean,\n): Promise<MathDocument> => {\n  try {\n    await getSolidDataset(uri, { fetch })\n  } catch (error) {\n    // save the solid dataset to the new place\n    await saveSolidDatasetAt(uri, createSolidDataset(), {\n      fetch,\n    })\n\n    // fetch it to obtain access info\n    const newDataset = await getSolidDataset(uri, { fetch })\n\n    const mathDocument: MathDocument = {\n      id: uri,\n      uri,\n      access: getEffectiveAccess(newDataset),\n    }\n\n    // save the info to the publicTypeIndex or privateTypeIndex of logged user\n    const typeIndexes = await getTypeIndexes(webId)\n\n    const typeIndex = isPublic ? typeIndexes.public : typeIndexes.private\n\n    if (typeIndex) {\n      const dataset = await getSolidDataset(typeIndex, { fetch })\n\n      const indexThing =\n        getThing(dataset, typeIndex) ?? createThing({ url: typeIndex })\n\n      const thingUrl = `${typeIndex}#${Date.now()}` // @TODO could be more expressive, like filename\n\n      const index = buildThing(indexThing)\n        .addUrl(dct.references, thingUrl)\n        .build()\n\n      const file = buildThing(createThing({ url: thingUrl }))\n        .addUrl(rdf.type, solid.TypeRegistration)\n        .addUrl(solid.forClass, 'https://terms.math.livegraph.org#Definition')\n        .addUrl(solid.forClass, 'https://terms.math.livegraph.org#Statement')\n        .addUrl(solid.instance, uri)\n        .build()\n\n      const updatedDataset = setThing(setThing(dataset, index), file)\n      await saveSolidDatasetAt(typeIndex, updatedDataset, {\n        fetch,\n      })\n    }\n    return mathDocument\n  }\n  throw new Error('document already exists')\n}\n\ninterface TypeIndexes {\n  public: string\n  private: string\n}\n\nconst getTypeIndexes = async (webId: string): Promise<TypeIndexes> => {\n  const dataset = await getSolidDataset(webId, { fetch })\n  const me = getThing(dataset, webId)\n  const response: TypeIndexes = {\n    public: '',\n    private: '',\n  }\n  if (me) {\n    response.public = getTerm(me, solid.publicTypeIndex)?.value ?? ''\n    response.private = getTerm(me, solid.privateTypeIndex)?.value ?? ''\n  }\n\n  return response\n}\n","import {\n  createAsyncThunk,\n  createSelector,\n  createSlice,\n  PayloadAction,\n} from '@reduxjs/toolkit'\nimport { AppDispatch, RootState } from '../../app/store'\nimport { Entity } from '../../types'\nimport { setTemporaryInfo } from '../info/infoSlice'\nimport { selectWebId } from '../login/loginSlice'\nimport { addGraph } from '../math/mathSlice'\nimport { MathDocument } from '../math/types'\nimport * as api from './documentAPI'\n\nexport interface DocumentState {\n  entities: {\n    document: Entity<MathDocument>\n  }\n  selected: string\n}\n\nconst initialState: DocumentState = {\n  entities: {\n    document: {\n      byId: {},\n      allIds: [],\n    },\n  },\n  selected: '',\n}\n\n// Thunks\nexport const addDocuments = createAsyncThunk(\n  'math/addDocuments',\n  async (webId: string, { dispatch }) => {\n    const documents = await api.findMathDocumentsOfPerson(webId)\n    documents.forEach(doc => dispatch(addGraph(doc.uri)))\n    return documents\n  },\n)\n\nexport const createDocument = createAsyncThunk<\n  MathDocument,\n  { uri: string; isPublic: boolean },\n  {\n    dispatch: AppDispatch\n    getState: () => RootState\n  }\n>('math/createDocument', async ({ uri, isPublic }, { getState, dispatch }) => {\n  const webId = selectWebId(getState() as RootState)\n  try {\n    dispatch(\n      setTemporaryInfo({ type: 'info', message: 'creating a new document' }),\n    )\n    const newDocument = await api.createMathDocument(uri, webId, isPublic)\n    dispatch(\n      setTemporaryInfo({ type: 'success', message: 'created a new document' }),\n    )\n\n    return newDocument\n  } catch (error) {\n    if (error instanceof Error) {\n      dispatch(setTemporaryInfo({ type: 'error', message: error.message }))\n    }\n    throw error\n  }\n})\n\nexport const documentSlice = createSlice({\n  name: 'document',\n  initialState,\n  reducers: {\n    selectDocument: (state, action: PayloadAction<string>) => {\n      state.selected = action.payload\n    },\n  },\n  extraReducers: builder => {\n    builder\n      .addCase(addDocuments.fulfilled, (state, action) => {\n        state.entities.document = {\n          byId: Object.fromEntries(action.payload.map(doc => [doc.id, doc])),\n          allIds: action.payload.map(doc => doc.id),\n        }\n      })\n      .addCase(createDocument.fulfilled, (state, action) => {\n        state.entities.document.allIds.push(action.payload.id)\n        state.entities.document.byId[action.payload.id] = action.payload\n      })\n  },\n})\n\nexport const { selectDocument } = documentSlice.actions\n\nconst selectDocumentEntities = (state: RootState) =>\n  state.document.entities.document\n\nexport const selectDocuments = createSelector(\n  selectDocumentEntities,\n  ({ byId, allIds }) => allIds.map(id => byId[id]),\n)\n\nexport const selectSelectedDocument = (state: RootState) =>\n  state.document.selected\n\nexport default documentSlice.reducer\n","import {\n  login as solidLogin,\n  logout as solidLogout,\n  handleIncomingRedirect,\n} from '@inrupt/solid-client-authn-browser'\n\nexport const init = async () => {\n  const sessionInfo = await handleIncomingRedirect({\n    url: window.location.href,\n    restorePreviousSession: true,\n  })\n  return sessionInfo\n}\n\nexport const login = async (oidcIssuer: string) => {\n  try {\n    await solidLogin({\n      oidcIssuer,\n      redirectUrl: window.location.href,\n      clientName: 'Friends Crawler',\n    })\n  } catch (error) {\n    alert(`Could not find a Solid Pod at ${oidcIssuer}`)\n    localStorage.removeItem('idp')\n  }\n}\n\nexport const logout = async () => {\n  await solidLogout()\n}\n","import { createAsyncThunk, createSelector, createSlice } from '@reduxjs/toolkit'\nimport { RootState } from '../../app/store'\nimport { addDocuments } from '../document/documentSlice'\nimport * as api from './loginAPI'\n\n// State\nexport interface LoginState {\n  webId: string\n  isLoggedIn: boolean\n  status: 'idle' | 'loading' | 'failed'\n}\n\nconst initialState: LoginState = {\n  webId: '',\n  isLoggedIn: false,\n  status: 'loading',\n}\n\n// Thunks\nexport const init = createAsyncThunk('login/init', async (_, { dispatch }) => {\n  const response = await api.init()\n  const webId = response?.webId ?? ''\n  const isLoggedIn = response?.isLoggedIn ?? false\n  dispatch(addDocuments(webId))\n  return { webId, isLoggedIn }\n})\n\nexport const login = createAsyncThunk(\n  'login/login',\n  async (oidcIssuer: string) => {\n    await api.login(oidcIssuer)\n  },\n)\n\nexport const logout = createAsyncThunk('login/logout', async () => {\n  await api.logout()\n})\n\n// Slice\nexport const loginSlice = createSlice({\n  name: 'login',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder\n      .addCase(init.pending, state => {\n        state.status = 'loading'\n      })\n      .addCase(init.fulfilled, (state, action) => {\n        state.status = 'idle'\n        state.webId = action.payload.webId\n        state.isLoggedIn = action.payload.isLoggedIn\n      })\n      .addCase(login.pending, state => {\n        state.status = 'loading'\n      })\n      .addCase(login.fulfilled, state => {\n        state.status = 'idle'\n      })\n      .addCase(logout.pending, state => {\n        state.status = 'loading'\n      })\n      .addCase(logout.fulfilled, state => {\n        state.status = 'idle'\n        state.webId = ''\n        state.isLoggedIn = false\n      })\n  },\n})\n\n// Selectors\nexport const selectSession = (state: RootState) => ({\n  webId: state.login.webId,\n  isLoggedIn: state.login.isLoggedIn,\n})\n\nexport const selectWebId = (state: RootState) => state.login.webId\n\nexport const selectNaiveStorage = createSelector(selectWebId, webId => {\n  const output = /^(?<storage>.*)profile\\/card#me$/g.exec(webId)\n  const storage = output?.groups ? output.groups.storage : ''\n  return storage\n})\n\nexport const selectLoginStatus = (state: RootState) => state.login.status\n\nexport default loginSlice.reducer\n","import React from 'react'\nimport { useState } from 'react'\n\ntype WithMenuHOC = <ButtonProps, MenuProps>(\n  Button: React.FC<ButtonProps>,\n  Menu: React.FC<MenuProps & CloseHandler>,\n) => React.FC<\n  React.HTMLAttributes<HTMLDivElement> & {\n    buttonProps: ButtonProps\n    menuProps: MenuProps\n  }\n>\n\ninterface CloseHandler {\n  onClickClose: () => void\n}\n\nconst withMenu: WithMenuHOC = <\n  ButtonProps extends React.HTMLAttributes<HTMLElement>,\n  MenuProps extends React.HTMLAttributes<HTMLElement>,\n>(\n  Button: React.FC<ButtonProps>,\n  Menu: React.FC<MenuProps & CloseHandler>,\n) => {\n  const HOC = ({\n    buttonProps,\n    menuProps,\n    ...props\n  }: {\n    buttonProps: ButtonProps\n    menuProps: MenuProps\n  }) => {\n    const [open, setOpen] = useState(false)\n\n    return (\n      <div\n        {...props}\n        style={{\n          position: 'relative',\n          flexDirection: 'column',\n          display: 'inline-flex',\n          alignItems: 'end',\n          zIndex: 3,\n        }}\n        onMouseLeave={() => setOpen(false)}\n        onBlur={event => {\n          // https://stackoverflow.com/a/60094794\n          // make sure the blur works when leaving the whole thing only\n          if (!event.currentTarget.contains(event.relatedTarget as Node)) {\n            setOpen(false)\n          }\n        }}\n      >\n        <Button\n          {...buttonProps}\n          onMouseEnter={() => setOpen(true)}\n          onFocus={() => setOpen(true)}\n        />\n        <div\n          style={{\n            position: 'relative',\n            width: 0,\n            height: 0,\n            visibility: open ? 'visible' : 'hidden',\n          }}\n        >\n          <div\n            className=\"box p-0\"\n            style={{ position: 'absolute', right: 0, overflow: 'hidden' }}\n          >\n            <Menu {...menuProps} onClickClose={() => setOpen(false)} />\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  HOC.displayName = `WithMenu(${getDisplayName(Button)})`\n  return HOC\n}\n\nfunction getDisplayName<T>(WrappedComponent: React.FC<T>) {\n  return WrappedComponent.displayName || WrappedComponent.name || 'Component'\n}\n\nexport default withMenu\n","import React, { useRef, useEffect, useState } from 'react'\nimport { drawGrid, drawGraph } from './helpers/draw'\nimport classnames from 'classnames'\nimport { drag } from 'd3-drag'\nimport { zoom } from 'd3-zoom'\nimport { select } from 'd3-selection'\nimport numeric from 'numeric'\nimport { VisualizationGraph, Vector, Grid, Matrix } from './types'\n\ntype Props = Partial<React.CanvasHTMLAttributes<HTMLCanvasElement>> & {\n  graph: VisualizationGraph\n  grid: Grid\n  onTransform: (matrix: Matrix) => void\n  onHover: (position: Vector) => void\n  onSelectNode: (position: Vector) => void\n}\n\nlet old: Matrix\n\nconst Visualization: React.FC<Props> = ({\n  graph,\n  grid,\n  onTransform,\n  onHover,\n  onSelectNode,\n  ...props\n}: Props) => {\n  const canvasEl = useRef<HTMLCanvasElement>(null)\n  const [{ width, height }, setVisualizationSize] = useState({\n    width: 0,\n    height: 0,\n  })\n\n  useEffect(() => {\n    if (canvasEl && canvasEl.current) {\n      const context = canvasEl.current.getContext('2d')\n      if (context) {\n        const offset: Vector = [width / 2, height / 2]\n        context.save()\n        context.translate(...offset)\n        context.clearRect(-offset[0], -offset[1], width, height)\n        drawGrid(context, grid, width, height, offset)\n        drawGraph(context, graph)\n        return () => context.restore()\n      }\n    }\n  }, [width, height, graph, canvasEl, grid])\n\n  useEffect(() => {\n    const updateCanvasSize = () => {\n      if (canvasEl && canvasEl.current) {\n        const size = getElementSize(canvasEl)\n        setVisualizationSize(size)\n      }\n    }\n\n    updateCanvasSize()\n    window.addEventListener('load', updateCanvasSize)\n    window.addEventListener('resize', updateCanvasSize)\n\n    return () => {\n      window.removeEventListener('resize', updateCanvasSize)\n      window.removeEventListener('load', updateCanvasSize)\n    }\n  }, [width, height, canvasEl])\n\n  useEffect(() => {\n    if (canvasEl && canvasEl.current) {\n      select(canvasEl.current).call(\n        drag<HTMLCanvasElement, unknown>()\n          .clickDistance(2)\n          //.on('start', console.log)\n          .on('drag', e => {\n            onTransform([\n              [1, 0, e.dx],\n              [0, 1, e.dy],\n              [0, 0, 1],\n            ])\n          }),\n        //.on('end', console.log),\n      )\n\n      select(canvasEl.current).call(\n        zoom<HTMLCanvasElement, unknown>()\n          .clickDistance(2)\n          .scaleExtent([0.05, 3])\n          .on('zoom', e => {\n            old = old ?? [\n              [1, 0, -width / 2],\n              [0, 1, -height / 2],\n              [0, 0, 1],\n            ]\n            const { x, y, k } = e.transform\n\n            const zoom = [\n              [k, 0, x - width / 2],\n              [0, k, y - height / 2],\n              [0, 0, 1],\n            ]\n\n            const transform = numeric.dot(zoom, numeric.inv(old)) as Matrix\n            old = zoom\n\n            onTransform(transform)\n          }),\n      )\n    }\n  }, [canvasEl, onTransform, height, width])\n\n  const withCanvasPosition =\n    (\n      func: (position: Vector) => void,\n    ): React.MouseEventHandler<HTMLCanvasElement> =>\n    e => {\n      // https://stackoverflow.com/a/42111623\n      if (canvasEl && canvasEl.current) {\n        const rect = canvasEl.current.getBoundingClientRect()\n        const x = e.clientX - rect.left //x position within the element.\n        const y = e.clientY - rect.top //y position within the element.\n        func([x - width / 2, y - height / 2])\n      }\n    }\n\n  const handleMouseMove = withCanvasPosition(onHover)\n  const handleClick = withCanvasPosition(onSelectNode)\n\n  return (\n    <canvas\n      {...props}\n      ref={canvasEl}\n      onMouseMove={handleMouseMove}\n      // @TODO this piece is very inefficient, we search for a nonexistent node, just to unhighlight everything; but it works\n      onMouseOut={() => onHover([Infinity, Infinity])}\n      width={width}\n      height={height}\n      className={classnames(props.className, 'has-background-dark')}\n      onClick={handleClick}\n    />\n  )\n}\n\nexport default Visualization\n\nfunction getElementSize(elementRef: React.RefObject<HTMLCanvasElement>) {\n  if (elementRef && elementRef.current) {\n    const { clientHeight: height, clientWidth: width } = elementRef.current\n    return { height, width }\n  } else return { height: 0, width: 0 }\n}\n","import React from 'react'\nimport LoginPrompt from './LoginPrompt'\nimport { useAppDispatch, useAppSelector } from '../../app/hooks'\nimport { login, logout, selectLoginStatus, selectSession } from './loginSlice'\nimport AppButton from '../../components/AppButton'\nimport withMenu from '../../components/withMenu'\n\ninterface User {\n  webId: string\n}\n\nconst Menu = ({ user, onLogout }: { user: User; onLogout: () => void }) => (\n  <div className=\"menu box p-0\">\n    <ul className=\"menu-list\">\n      <li>\n        <a className=\"disabled\">{user.webId}</a>\n      </li>\n      <li>\n        <a onClick={onLogout}>Logout</a>\n      </li>\n    </ul>\n  </div>\n)\n\nconst UserButton = ({ ...props }) => (\n  <AppButton {...props}>\n    <i className=\"icon icon-user\" />\n  </AppButton>\n)\n\nconst UserWithMenu = withMenu(UserButton, Menu)\n\nconst Login = ({ ...props }) => {\n  const dispatch = useAppDispatch()\n  const info = useAppSelector(selectSession)\n  const status = useAppSelector(selectLoginStatus)\n\n  return status === 'loading' ? (\n    <AppButton {...props} disabled>\n      <i className=\"icon icon-spinner animate-pulse\" />\n    </AppButton>\n  ) : info.isLoggedIn ? (\n    <UserWithMenu\n      menuProps={{ user: info, onLogout: () => dispatch(logout()) }}\n      buttonProps={props}\n    />\n  ) : (\n    <LoginPrompt\n      {...props}\n      contentProps={{\n        onLogin: (oidcIssuer: string) => {\n          dispatch(login(oidcIssuer))\n        },\n      }}\n      buttonProps={{}}\n    />\n  )\n}\n\nexport default Login\n","import { Vector, Grid, VisualizationGraph } from '../types'\nimport numeric from 'numeric'\n\ntype Options = Partial<CanvasRenderingContext2D>\n\nconst drawText = (\n  context: CanvasRenderingContext2D,\n  [x, y]: Vector,\n  text: string,\n  options: Options,\n) => {\n  context.font = '20px Arial'\n  context.textBaseline = 'middle'\n  context.textAlign = 'left'\n  // context.fillStyle = '#fff7'\n  Object.assign(context, options)\n  context.fillText(text, x, y)\n}\n\nconst drawCircle = (\n  context: CanvasRenderingContext2D,\n  [x, y]: Vector,\n  radius: number,\n  options: Options,\n) => {\n  Object.assign(context, options)\n  context.beginPath()\n  context.arc(x, y, radius, 0, 2 * Math.PI)\n  context.fill()\n}\n\nconst drawLine = (\n  context: CanvasRenderingContext2D,\n  start: Vector,\n  end: Vector,\n  options: Options,\n) => {\n  Object.assign(context, options)\n\n  context.beginPath()\n  context.moveTo(...start)\n  context.lineTo(...end)\n  context.stroke()\n}\n\nexport const drawGraph = (\n  context: CanvasRenderingContext2D,\n  graph: VisualizationGraph,\n) => {\n  graph.links.forEach(link => {\n    // we're counting a unit vector to make links that don't overlap nodes\n    // source point\n    const s = [link.source.x, link.source.y]\n    // target point\n    const t = [link.target.x, link.target.y]\n    // vector\n    const v = numeric.sub(t, s)\n    // vector size\n    const size = Math.sqrt(v[0] ** 2 + v[1] ** 2)\n    // unit vector\n    const i = numeric.div(v, size)\n    drawLine(\n      context,\n      // links don't overlap circles\n      numeric.add(s, numeric.mul(i, link.source.r)) as Vector,\n      numeric.sub(t, numeric.mul(i, link.target.r)) as Vector,\n      {\n        strokeStyle: 'white',\n        lineWidth: 0.5,\n      },\n    )\n  })\n\n  const color = {\n    accent: 'violet',\n    focus: 'red',\n    focus2: 'pink',\n    rest: {\n      node: '#fff8',\n      label: '#fff4',\n    },\n  }\n\n  const accented = graph.nodes.filter(({ style }) => style === 'accent')\n  const focused = graph.nodes.filter(({ style }) => style === 'focus')\n  const focused2 = graph.nodes.filter(({ style }) => style === 'focus2')\n  const rest = graph.nodes.filter(({ style }) => !style)\n\n  // draw all the nodes which are not special\n  rest.forEach(({ x, y, r }) =>\n    drawCircle(context, [x, y], r, { fillStyle: color.rest.node }),\n  )\n\n  rest.forEach(({ x, y, r, label }) =>\n    drawText(context, [x + r + 5, y], label, {\n      fillStyle: color.rest.label,\n    }),\n  )\n\n  // draw focused nodes\n  focused2.forEach(({ x, y, r }) =>\n    drawCircle(context, [x, y], r, { fillStyle: color.focus2 }),\n  )\n\n  focused2.forEach(({ x, y, r, label }) =>\n    drawText(context, [x + r + 5, y], label, { fillStyle: color.focus2 }),\n  )\n\n  // draw focused nodes\n  focused.forEach(({ x, y, r }) =>\n    drawCircle(context, [x, y], r, { fillStyle: color.focus }),\n  )\n\n  focused.forEach(({ x, y, r, label }) =>\n    drawText(context, [x + r + 5, y], label, { fillStyle: color.focus }),\n  )\n\n  // draw accented nodes\n  accented.forEach(({ x, y, r }) =>\n    drawCircle(context, [x, y], r, { fillStyle: color.accent }),\n  )\n\n  accented.forEach(({ x, y, r, label }) =>\n    drawText(context, [x + r + 5, y], label, {\n      fillStyle: color.accent,\n    }),\n  )\n}\n\nexport const drawGrid = (\n  context: CanvasRenderingContext2D,\n  grid: Grid,\n  width: number,\n  height: number,\n  offset: Vector = [0, 0],\n) => {\n  const strokeStyle = '#fff2'\n  const min1 = -offset[1]\n  const max1 = height - offset[1]\n  const min0 = -offset[0]\n  const max0 = width - offset[0]\n\n  const getLineWidth = (i: number) =>\n    i === 0 ? 2 : i % grid.highlight === 0 ? 1 : 0.5\n\n  let i = 0\n  while (i * grid.distance + grid.origin[0] <= max0) {\n    const x = i * grid.distance + grid.origin[0]\n    if (x >= min0) {\n      drawLine(context, [x, min1], [x, max1], {\n        strokeStyle,\n        lineWidth: getLineWidth(i),\n      })\n    }\n    i++\n  }\n\n  i = -1\n  while (i * grid.distance + grid.origin[0] >= min0) {\n    const x = i * grid.distance + grid.origin[0]\n    if (x <= max0) {\n      drawLine(context, [x, min1], [x, max1], {\n        strokeStyle,\n        lineWidth: getLineWidth(i),\n      })\n    }\n    i--\n  }\n\n  i = 0\n  while (i * grid.distance + grid.origin[1] <= max1) {\n    const y = i * grid.distance + grid.origin[1]\n    if (y >= min1) {\n      drawLine(context, [min0, y], [max0, y], {\n        strokeStyle,\n        lineWidth: getLineWidth(i),\n      })\n    }\n    i++\n  }\n\n  i = -1\n  while (i * grid.distance + grid.origin[1] >= min1) {\n    const y = i * grid.distance + grid.origin[1]\n    if (y <= max1) {\n      drawLine(context, [min0, y], [max0, y], {\n        strokeStyle,\n        lineWidth: getLineWidth(i),\n      })\n    }\n    i--\n  }\n}\n","import {\n  forceSimulation,\n  forceCollide,\n  forceLink,\n  forceManyBody,\n  forceCenter,\n  forceX,\n  forceY,\n  ForceLink,\n} from 'd3-force'\nimport { Dictionary } from '../../../../types'\nimport forceGravity from './gravity'\nimport {\n  Coords,\n  SimulationNode,\n  SimulationLink,\n  Node,\n  SimulationNodeExt,\n  SimulationLinkExt,\n} from './types'\n\nexport default class Simulation {\n  nodes: SimulationNodeExt[] = []\n  links: SimulationLinkExt[] = []\n\n  runs = false\n\n  simulation = forceSimulation()\n    .alphaDecay(0.005)\n    .force(\n      'link',\n      forceLink()\n        .id(node => (node as SimulationNodeExt).uri)\n        .distance(50)\n        .strength(0.1),\n    )\n    .force('linkGravity', forceGravity().strength(50))\n    .force('charge', forceManyBody().strength(-150).distanceMax(500))\n    .force('gravityX', forceX(0).strength(0.01))\n    .force('gravityY', forceY(0).strength(0.01))\n    .force(\n      'collide',\n      forceCollide(({ r }: SimulationNodeExt) => r + 5),\n    )\n    .force('center', forceCenter(0, 0))\n    .stop()\n\n  start = ({\n    nodes,\n    links,\n    onTick,\n  }: {\n    nodes: SimulationNode[]\n    links: SimulationLink[]\n    onTick: (simulation: {\n      nodes: SimulationNode[]\n      links: SimulationLinkExt[]\n    }) => void\n  }) => {\n    this.nodes = nodes as SimulationNodeExt[]\n    this.links = links.map(link => ({ ...link })) as SimulationLinkExt[]\n\n    this.simulation.nodes(this.nodes)\n    ;(\n      this.simulation.force('link') as ForceLink<\n        SimulationNodeExt,\n        SimulationLinkExt\n      >\n    ).links(this.links)\n    ;(\n      this.simulation.force('linkGravity') as ForceLink<\n        SimulationNodeExt,\n        SimulationLinkExt\n      >\n    ).links(this.links)\n\n    this.simulation.on('tick', () => {\n      onTick({\n        nodes: this.nodes as SimulationNode[],\n        links: this.links,\n      })\n    })\n\n    this.simulation.restart()\n    this.runs = true\n  }\n\n  stop = () => {\n    this.runs = false\n    return this.simulation.stop()\n  }\n\n  update = ({ nodes, links }: { nodes: Node[]; links: SimulationLink[] }) => {\n    this.simulation.stop()\n    // combine current nodes and the old nodes\n    const thisNodeDict: Dictionary<SimulationNodeExt> = Object.fromEntries(\n      this.nodes.map(node => [node.uri, node]),\n    )\n    const updatedNodes: SimulationNodeExt[] = nodes.map(node => ({\n      ...node,\n      x: (0.5 - Math.random()) * 800,\n      y: (0.5 - Math.random()) * 800,\n      ...thisNodeDict[node.uri],\n      r: node.r,\n    }))\n    this.nodes = updatedNodes\n    this.links = links.map(link => ({ ...link })) as SimulationLinkExt[]\n\n    this.simulation.nodes(this.nodes)\n    ;(\n      this.simulation.force('link') as ForceLink<\n        SimulationNodeExt,\n        SimulationLinkExt\n      >\n    ).links(this.links)\n    ;(\n      this.simulation.force('linkGravity') as ForceLink<\n        SimulationNodeExt,\n        SimulationLinkExt\n      >\n    ).links(this.links)\n\n    this.simulation.alpha(1).restart()\n  }\n\n  selectNode = ({ x, y }: Coords) =>\n    this.simulation.find(x, y, 40) as SimulationNodeExt\n}\n","import { SimulationLinkExt } from './types'\n\nexport default function gravity() {\n  let links: SimulationLinkExt[] = []\n  let strength = 3\n  function force(alpha: number) {\n    const k = strength * alpha\n    links.forEach(function (d) {\n      //// this works\n      // d.source.y = Math.max(d.target.y + 50, d.source.y);\n      //// this is original\n      // d.source.vy += k;\n      // d.target.vy -= k;\n      //\n      //// this works with velocities, so the graph looks less layered\n      const { source, target } = d\n      if (typeof source === 'object' && typeof target === 'object') {\n        if (\n          source.y &&\n          target.y &&\n          source.vy &&\n          target.vy &&\n          source.y < target.y + 50\n        ) {\n          const optimumDifference = (target.y + 50 - source.y) / 50\n          source.vy += k * optimumDifference\n          target.vy -= k * optimumDifference\n        }\n      }\n    })\n  }\n\n  force.links = (_: SimulationLinkExt[]) => {\n    links = _\n    return force\n  }\n\n  force.strength = (_: number) => {\n    strength = _\n    return force\n  }\n\n  return force\n}\n","/*\n * based on the following example\n * https://github.com/rexxars/react-markdown/issues/10#issuecomment-347763068\n */\n\nimport React from 'react'\nimport 'katex/dist/katex.min.css'\nimport ReactMarkdown from 'react-markdown'\nimport remarkMath from 'remark-math'\nimport styled from 'styled-components'\nimport rehypeKatex from 'rehype-katex'\n\nconst Styler = styled.div`\n  img {\n    max-width: 100%;\n  }\n`\n\nexport default function Math({ children }: { children: string }) {\n  const props = {\n    children,\n    remarkPlugins: [remarkMath],\n    rehypePlugins: [rehypeKatex],\n  }\n  return (\n    <Styler>\n      <ReactMarkdown {...props} />\n    </Styler>\n  )\n}\n","import { createSelector, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { RootState } from '../../app/store'\nimport { selectGraph } from '../math/mathSlice'\nimport { Graph, GraphNode } from '../math/types'\n\ninterface SearchState {\n  query: string\n  queryAutocomplete: string\n}\n\nconst initialState: SearchState = {\n  query: '',\n  queryAutocomplete: '',\n}\n\nexport const searchSlice = createSlice({\n  name: 'search',\n  initialState,\n  reducers: {\n    setSearch: (state, action: PayloadAction<string>) => {\n      state.query = action.payload\n    },\n    setAutocomplete: (state, action: PayloadAction<string>) => {\n      state.queryAutocomplete = action.payload\n    },\n  },\n})\n\nexport const { setSearch, setAutocomplete } = searchSlice.actions\n\n// Selectors\nexport const selectSearch = (state: RootState) => state.search.query\nexport const selectAutocomplete = (state: RootState) =>\n  state.search.queryAutocomplete\n\nconst search = (\n  query: string,\n  graph: Graph,\n): { label: string; value: string }[] => {\n  if (query.length < 2) return []\n  return Object.values(graph)\n    .filter(\n      ({ label }) => label.en.toLowerCase().includes(query.toLowerCase()),\n      //*|| uri.toLowerCase().includes(query.toLowerCase()),\n    )\n    .sort(\n      ({ dependents: a }, { dependents: b }) =>\n        Object.values(b).length - Object.values(a).length,\n    )\n    .map(({ uri, label: { en: label } }) => ({ value: uri, label }))\n    .slice(0, 10)\n}\n\n// This just returns full GraphNodes instead of limited info\nconst searchFull = (query: string, graph: Graph): GraphNode[] => {\n  if (query.length < 2) return []\n  return Object.values(graph)\n    .filter(\n      ({ label }) => label.en.toLowerCase().includes(query.toLowerCase()),\n      //*|| uri.toLowerCase().includes(query.toLowerCase()),\n    )\n    .sort(\n      ({ dependents: a }, { dependents: b }) =>\n        Object.values(b).length - Object.values(a).length,\n    )\n    .slice(0, 10)\n}\n\nexport const selectSearchResults = createSelector(\n  selectSearch,\n  selectGraph,\n  search,\n)\n\nexport const selectAutocompleteResults = createSelector(\n  selectAutocomplete,\n  selectGraph,\n  searchFull,\n)\n\nexport default searchSlice.reducer\n","import React, { useEffect, useState } from 'react'\nimport ReactTags, { TagComponentProps } from 'react-tag-autocomplete'\nimport { useAppDispatch, useAppSelector } from '../../../app/hooks'\nimport {\n  selectAutocompleteResults,\n  setAutocomplete,\n} from '../../search/searchSlice'\nimport { highlight, select, updateNode } from '../mathSlice'\nimport { GraphNode } from '../types'\nimport './react-tag-autocomplete.css'\n\ninterface NodeListProps {\n  title: string\n  node: GraphNode\n  nodes: GraphNode[]\n  editable?: boolean\n}\n\nconst NodeList: React.FC<NodeListProps> = ({\n  title,\n  node,\n  nodes,\n  editable = false,\n}: NodeListProps) => {\n  const [edit, setEdit] = useState(false)\n  const dispatch = useAppDispatch()\n  return edit ? (\n    <NodeListEdit\n      title={title}\n      node={node}\n      nodes={nodes}\n      onFinish={() => setEdit(false)}\n    />\n  ) : (\n    <>\n      <header className=\"card-header\">\n        <p className=\"card-header-title\">\n          {title}: {nodes.length}\n        </p>\n        {node.document.access.user.write && editable && (\n          <button\n            className=\"card-header-icon\"\n            aria-label=\"edit label\"\n            onClick={() => setEdit(true)}\n          >\n            <i className=\"icon icon-edit\" aria-hidden=\"true\"></i>\n          </button>\n        )}\n      </header>\n      <section className=\"card-content\">\n        <ul className=\"buttons are-small\">\n          {nodes.map(node => (\n            <li\n              onClick={() => dispatch(select(node.uri))}\n              onMouseEnter={() => dispatch(highlight(node.uri))}\n              onMouseLeave={() => dispatch(highlight(''))}\n              key={node.uri}\n              className=\"button is-link is-inverted\"\n            >\n              {node.label.en}\n            </li>\n          ))}\n        </ul>\n      </section>\n    </>\n  )\n}\n\nconst NodeListEdit = ({\n  title,\n  node,\n  nodes,\n  onFinish,\n}: {\n  title: string\n  node: GraphNode\n  nodes: GraphNode[]\n  onFinish: () => void\n}) => {\n  const [dependencies, setDependencies] = useState(\n    Object.values(node.dependencies),\n  )\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    setDependencies(Object.values(node.dependencies))\n  }, [node])\n\n  const handleCancel = () => {\n    onFinish()\n    setDependencies(Object.values(node.dependencies))\n  }\n\n  const handleSave = () => {\n    dispatch(\n      updateNode({\n        dependencies: dependencies.map(({ uri }) => uri),\n        id: node.uri,\n        document: node.document.id,\n      }),\n    )\n    handleCancel()\n  }\n\n  const handleAdd = (tag: { id: string | number; name: string }) => {\n    const fullTag = suggestionsRaw.find(s => s.uri === tag.id)\n    if (fullTag) {\n      setDependencies(deps => [...deps, fullTag])\n    }\n  }\n\n  const handleRemove = (a: number) => {\n    setDependencies(deps => deps.filter((_, i) => i !== a))\n  }\n\n  const tags = Object.values(dependencies).map(({ uri, label }) => ({\n    id: uri,\n    name: label.en,\n  }))\n\n  const suggestionsRaw = useAppSelector(selectAutocompleteResults)\n\n  const suggestions = suggestionsRaw.map(({ label, uri }) => ({\n    id: uri,\n    name: label.en,\n  }))\n\n  return (\n    <>\n      <header className=\"card-header\">\n        <p className=\"card-header-title\">\n          {title}: {nodes.length}\n        </p>\n        <button\n          className=\"card-header-icon\"\n          aria-label=\"cancel editing\"\n          title=\"cancel editing\"\n          onClick={handleCancel}\n        >\n          <i\n            className=\"icon icon-cancel has-text-danger\"\n            aria-hidden=\"true\"\n          ></i>\n        </button>\n        <button\n          className=\"card-header-icon\"\n          aria-label=\"save changes\"\n          title=\"save changes\"\n          onClick={handleSave}\n        >\n          <i className=\"icon icon-ok has-text-success\" aria-hidden=\"true\"></i>\n        </button>\n      </header>\n      <section className=\"card-content\">\n        <ReactTags\n          suggestions={suggestions}\n          tags={tags}\n          onInput={value => dispatch(setAutocomplete(value))}\n          onAddition={handleAdd}\n          onDelete={handleRemove}\n          classNames={{\n            root: 'react-tags',\n            rootFocused: 'is-focused',\n            selected: 'react-tags__selected tags',\n            selectedTag: 'react-tags__selected-tag',\n            selectedTagName: 'react-tags__selected-tag-name',\n            search: 'react-tags__search',\n            searchInput: 'react-tags__search-input',\n            suggestions: 'react-tags__suggestions',\n            suggestionActive: 'is-active',\n            suggestionDisabled: 'is-disabled',\n          }}\n          allowBackspace={false}\n          tagComponent={TagComponent}\n        />\n      </section>\n    </>\n  )\n}\n\nconst TagComponent = ({\n  tag,\n  removeButtonText,\n  onDelete,\n}: TagComponentProps) => {\n  return (\n    <span className=\"tag is-info\">\n      {tag.name}\n      <button\n        title={removeButtonText}\n        onClick={onDelete}\n        className=\"delete is-small\"\n      ></button>\n    </span>\n  )\n}\n\nexport default NodeList\n","import React, { useEffect, useState } from 'react'\nimport { useAppDispatch, useAppSelector } from '../../app/hooks'\nimport Math from './Math'\nimport { select, selectSelectedNode, updateNode } from './mathSlice'\nimport NodeList from './statement/NodeList'\nimport { GraphNode } from './types'\n\nconst NodeLabelEdit = ({\n  node,\n  onFinish,\n}: {\n  node: GraphNode\n  onFinish: () => void\n}) => {\n  const [label, setLabel] = useState(node.label.en)\n  const [type, setType] = useState(node.type)\n  const [editType, setEditType] = useState(false)\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    setLabel(node.label.en)\n    setType(node.type)\n  }, [node])\n\n  const availableTypes: GraphNode['type'][] = ['definition', 'statement']\n\n  const handleCancel = () => {\n    onFinish()\n    setEditType(false)\n    setLabel(node.label.en)\n    setType(node.type)\n  }\n\n  const handleSelectTag = (type: GraphNode['type']) => {\n    setEditType(false)\n    setType(type)\n  }\n\n  const handleSave = () => {\n    dispatch(\n      updateNode({\n        type,\n        label: { en: label },\n        id: node.uri,\n        document: node.document.id,\n      }),\n    )\n    handleCancel()\n  }\n\n  return (\n    <>\n      <p className=\"card-header-title\">\n        <input\n          className=\"input is-small\"\n          type=\"text\"\n          placeholder=\"label\"\n          value={label}\n          onChange={e => setLabel(e.target.value)}\n          size={10}\n        />\n        <div className=\"tags\">\n          {editType ? (\n            availableTypes.map(type => (\n              <span\n                key={type}\n                className=\"tag is-info is-light\"\n                onClick={() => handleSelectTag(type)}\n              >\n                {type}\n              </span>\n            ))\n          ) : (\n            <span className=\"tag is-info\">\n              {type}\n              <button\n                className=\"delete is-small\"\n                onClick={() => setEditType(true)}\n              ></button>\n            </span>\n          )}\n        </div>\n      </p>\n      <button\n        className=\"card-header-icon\"\n        aria-label=\"cancel editing\"\n        title=\"cancel editing\"\n        onClick={handleCancel}\n      >\n        <i className=\"icon icon-cancel has-text-danger\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        className=\"card-header-icon\"\n        aria-label=\"save changes\"\n        title=\"save changes\"\n        onClick={handleSave}\n      >\n        <i className=\"icon icon-ok has-text-success\" aria-hidden=\"true\"></i>\n      </button>\n    </>\n  )\n}\n\nconst NodeLabel = ({ node }: { node: GraphNode }) => {\n  const [edit, setEdit] = useState(false)\n  return edit ? (\n    <NodeLabelEdit node={node} onFinish={() => setEdit(false)} />\n  ) : (\n    <>\n      <p className=\"card-header-title\">\n        <a href={node.uri}>{node.label.en}</a>\n        <span className=\"tag is-info\">{node.type}</span>\n      </p>\n      {node.document.access.user.write && (\n        <button\n          className=\"card-header-icon\"\n          aria-label=\"edit label\"\n          onClick={() => setEdit(true)}\n        >\n          <i className=\"icon icon-edit\" aria-hidden=\"true\"></i>\n        </button>\n      )}\n    </>\n  )\n}\n\nconst Statement = () => {\n  const dispatch = useAppDispatch()\n  const onSelectNode = (uri: string) => dispatch(select(uri))\n  const node = useAppSelector(selectSelectedNode)\n\n  const dependencies: GraphNode[] = Object.values(node.dependencies)\n  const dependents: GraphNode[] = Object.values(node.dependents)\n\n  return (\n    <div className=\"card\">\n      <header className=\"card-header\">\n        <NodeLabel node={node} />\n        <span className=\"card-header-icon\">\n          <button\n            className=\"delete\"\n            aria-label=\"close\"\n            onClick={() => onSelectNode('')}\n          >\n            close\n          </button>\n        </span>\n      </header>\n      <section className=\"card-content\">\n        <NodeDescription node={node} />\n      </section>\n      <NodeList\n        title=\"dependencies\"\n        node={node}\n        nodes={dependencies}\n        editable\n      />\n      <NodeList title=\"dependents\" node={node} nodes={dependents} />\n    </div>\n  )\n}\n\nexport default Statement\n\nconst NodeDescription = ({ node }: { node: GraphNode }) => {\n  const [edit, setEdit] = useState(false)\n  return edit ? (\n    <NodeDescriptionEdit node={node} onFinish={() => setEdit(false)} />\n  ) : (\n    <>\n      <Math>{node.description.en}</Math>\n      {node.document.access.user.write && (\n        <button\n          className=\"card-header-icon\"\n          aria-label=\"edit label\"\n          onClick={() => setEdit(true)}\n        >\n          <i className=\"icon icon-edit\" aria-hidden=\"true\"></i>\n        </button>\n      )}\n    </>\n  )\n}\n\nconst NodeDescriptionEdit = ({\n  node,\n  onFinish,\n}: {\n  node: GraphNode\n  onFinish: () => void\n}) => {\n  const [description, setDescription] = useState(node.description.en)\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    setDescription(node.description.en)\n  }, [node])\n\n  const handleCancel = () => {\n    onFinish()\n    setDescription(node.description.en)\n  }\n\n  const handleSave = () => {\n    dispatch(\n      updateNode({\n        description: { en: description },\n        id: node.uri,\n        document: node.document.id,\n      }),\n    )\n    handleCancel()\n  }\n\n  return (\n    <>\n      <span className=\"has-text-grey is-size-7\">\n        You can use{' '}\n        <a href=\"https://www.markdownguide.org/basic-syntax/\">Markdown</a> and{' '}\n        <a href=\"http://asciimath.org/\">AsciiMath</a> (use $inline math$ and\n        $$multiline math$$).\n      </span>\n      <textarea\n        className=\"textarea\"\n        placeholder=\"description\"\n        value={description}\n        onChange={e => setDescription(e.target.value)}\n      />\n      <Math>{description}</Math>\n      <button\n        className=\"card-header-icon\"\n        aria-label=\"cancel editing\"\n        title=\"cancel editing\"\n        onClick={handleCancel}\n      >\n        <i className=\"icon icon-cancel has-text-danger\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        className=\"card-header-icon\"\n        aria-label=\"save changes\"\n        title=\"save changes\"\n        onClick={handleSave}\n      >\n        <i className=\"icon icon-ok has-text-success\" aria-hidden=\"true\"></i>\n      </button>\n    </>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst ICOutside = styled.div`\n  position: fixed;\n  width: 100%;\n  top: 0;\n  bottom: 0;\n  pointer-events: none;\n  overflow-x: hidden;\n  overflow-y: auto;\n`\nconst ICInside = styled.div`\n  pointer-events: all;\n  overflow-x: auto;\n  width: 100%;\n`\n\nconst InfoContainer = ({ children }: { children: React.ReactNode }) => (\n  <ICOutside>\n    <div className=\"columns mr-1 mt-6\">\n      <div className=\"column is-one-quarter is-offset-three-quarters\">\n        <ICInside>{children}</ICInside>\n      </div>\n    </div>\n  </ICOutside>\n)\n\nexport default InfoContainer\n","import { Grid, Matrix, Vector } from '../types'\nimport { VisualizationGraph } from '../types'\nimport { GraphNode } from '../../types'\nimport { SimulationGraph } from '../simulation/types'\nimport numeric from 'numeric'\n\nexport const transform = (matrix: Matrix, vector: Vector): Vector => {\n  const raw = numeric.dot(matrix, numeric.transpose([[...vector, 1]])) as Matrix\n  const [[x], [y]] = raw\n  return [x, y]\n}\n\nexport const nodeRadius = (node: GraphNode): number => {\n  let count = Object.entries(node.dependents).length ?? 0\n  count = count < 1 ? 1 : count\n  return count ** 0.42 * 5\n}\n\nexport const basicGrid: Grid = {\n  origin: [0, 0],\n  distance: 20,\n  highlight: 5,\n}\n\nexport const transformGrid = (matrix: Matrix, grid: Grid): Grid => {\n  let distance = grid.distance * matrix[0][0]\n  while (distance < 20) {\n    distance *= 5\n  }\n  return {\n    origin: transform(matrix, grid.origin),\n    distance,\n    highlight: grid.highlight,\n  }\n}\n\nexport const transformLayout = (\n  matrix: Matrix,\n  graph: SimulationGraph,\n  highlighted: string,\n  selected: string,\n  selectedDependencies: string[],\n): VisualizationGraph => {\n  const transformedNodesDict = Object.fromEntries(\n    graph.nodes.map(node => {\n      const [x, y] = transform(matrix, [node.x, node.y])\n      const r = matrix[0][0] * node.r\n      return [node.uri, { ...node, x, y, r, style: '' }]\n    }),\n  )\n\n  selectedDependencies.forEach(\n    uri => (transformedNodesDict[uri].style = 'focus2'),\n  )\n\n  if (highlighted && transformedNodesDict[highlighted]) {\n    transformedNodesDict[highlighted].style = 'accent'\n  }\n\n  if (selected) {\n    transformedNodesDict[selected].style = 'focus'\n  }\n\n  const links = graph.links.map(link => {\n    const sourceUri =\n      typeof link.source === 'string'\n        ? link.source\n        : typeof link.source === 'number'\n        ? graph.nodes[link.source].uri\n        : link.source.uri\n    const targetUri =\n      typeof link.target === 'string'\n        ? link.target\n        : typeof link.target === 'number'\n        ? graph.nodes[link.target].uri\n        : link.target.uri\n    const source = transformedNodesDict[sourceUri]\n    const target = transformedNodesDict[targetUri]\n    return { source, target }\n  })\n\n  return { nodes: Object.values(transformedNodesDict), links }\n}\n","import React, { useEffect, useState } from 'react'\nimport Visualization from './Visualization'\nimport {\n  highlight,\n  select,\n  selectHighlighted,\n  selectSelected,\n  selectSelectedNodeDependencies,\n} from '../mathSlice'\nimport Simulation from './simulation'\nimport { SimulationGraph, SimulationLink } from './simulation/types'\nimport { Matrix, Vector } from './types'\nimport numeric from 'numeric'\nimport Statement from '../Statement'\nimport { useAppDispatch, useAppSelector } from '../../../app/hooks'\nimport { selectPrunedGraph } from '../mathSlice'\nimport InfoContainer from '../InfoContainer'\nimport {\n  basicGrid,\n  nodeRadius,\n  transform,\n  transformGrid,\n  transformLayout,\n} from './helpers/transform'\n\nconst VisualizationContainer: React.FC = props => {\n  const prunedGraph = useAppSelector(selectPrunedGraph)\n  const highlightedNode = useAppSelector(selectHighlighted)\n  const selectedNode = useAppSelector(selectSelected)\n  const selectedNodeDependencies = useAppSelector(\n    selectSelectedNodeDependencies,\n  )\n  const dispatch = useAppDispatch()\n\n  const [simulation] = useState(new Simulation())\n  const [layout, setLayout] = useState<SimulationGraph>({\n    nodes: [],\n    links: [],\n  })\n  // transformation matrix\n  const [matrix, setMatrix] = useState<Matrix>([\n    [1, 0, 0],\n    [0, 1, 0],\n    [0, 0, 1],\n  ])\n\n  // initialize simulation\n  useEffect(() => {\n    let lastUpdate = Date.now() - 20\n    simulation.start({\n      nodes: [],\n      links: [],\n      onTick: ({ nodes, links }) => {\n        const now = Date.now()\n        if (now > lastUpdate + 20) {\n          setLayout({ nodes: [...nodes], links: [...links] })\n          lastUpdate = now\n        }\n      },\n    })\n    return () => {\n      simulation.stop()\n    }\n  }, [simulation])\n\n  // when graph changes, update simulation\n  useEffect(() => {\n    const nodes = Object.values(prunedGraph).map(node => ({\n      label: node.label.en,\n      x: Math.random() * 400,\n      y: Math.random() * 400,\n      r: nodeRadius(node),\n      uri: node.uri,\n    }))\n\n    const links: SimulationLink[] = Object.values(prunedGraph).reduce(\n      (links, { uri: source, dependencies }) => {\n        Object.keys(dependencies).forEach(target =>\n          links.push({ source, target }),\n        )\n        return links\n      },\n      [] as SimulationLink[],\n    )\n\n    simulation.update({ nodes, links })\n  }, [prunedGraph, simulation])\n\n  const handleTransform = (matrix: Matrix): void => {\n    setMatrix(prevMatrix => numeric.dot(matrix, prevMatrix) as Matrix)\n  }\n\n  const withNode = (action: (uri: string) => unknown) => {\n    return (position: Vector): void => {\n      // first transform to local coordinates\n      const [x, y] = transform(numeric.inv(matrix), position)\n      // then find the node in simulation\n      action(simulation.selectNode({ x, y })?.uri)\n    }\n  }\n\n  const handleHover = withNode(uri => dispatch(highlight(uri)))\n  const handleSelect = withNode(uri => dispatch(select(uri)))\n\n  // transform layout to TransformedLayout\n  const transformedLayout = transformLayout(\n    matrix,\n    layout,\n    highlightedNode,\n    selectedNode,\n    selectedNodeDependencies,\n  )\n\n  const grid = transformGrid(matrix, basicGrid)\n\n  return (\n    <>\n      <Visualization\n        graph={transformedLayout}\n        grid={grid}\n        onTransform={handleTransform}\n        onHover={handleHover}\n        onSelectNode={handleSelect}\n        {...props}\n      />\n\n      {\n        // @TODO maybe move this stuff out, it's more of a Layout component\n      }\n      <InfoContainer>{selectedNode && <Statement />}</InfoContainer>\n    </>\n  )\n}\n\nexport default VisualizationContainer\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Link = styled.a`\n  color: lightgray;\n  &:hover {\n    color: white;\n  }\n`\nconst Footer = styled.footer`\n  color: gray;\n`\n\nconst About: React.FC = props => (\n  <div {...props}>\n    <Footer>\n      powered by <Link href=\"https://solidproject.org\">Solid</Link> &middot;{' '}\n      <Link href=\"https://github.com/livegraph-org/solid-math\">source</Link>\n    </Footer>\n  </div>\n)\n\nexport default About\n","import React from 'react'\nimport withMenu from '../../components/withMenu'\nimport AppButton from '../../components/AppButton'\nimport withModal from '../../components/withModal'\nimport AddDocument from '../document/AddDocument'\n\nconst AddButton = ({ ...props }) => (\n  <AppButton {...props}>\n    <i className=\"icon icon-plus\" aria-label=\"add\" />\n  </AppButton>\n)\n\ninterface MenuProps {\n  onAddMath: () => void\n}\n\nconst Button = ({ ...props }) => <a {...props}>Add Document</a>\n\nconst AddDocumentButton = withModal(Button, AddDocument, 'Add a document')\n\nconst Menu = ({\n  onAddMath,\n  onClickClose,\n}: MenuProps & { onClickClose: () => void }) => (\n  <div className=\"menu box p-0\">\n    <ul className=\"menu-list\">\n      <li>\n        <AddDocumentButton buttonProps={{ onClick: onClickClose }} />\n      </li>\n      <li>\n        <a\n          onClick={() => {\n            onClickClose()\n            onAddMath()\n          }}\n        >\n          Add Math\n        </a>\n      </li>\n    </ul>\n  </div>\n)\n\nconst AddButtonWithMenu = withMenu<Record<string, never>, MenuProps>(\n  AddButton,\n  Menu,\n)\n\nexport default AddButtonWithMenu\n","import React, { useState } from 'react'\nimport { useAppDispatch, useAppSelector } from '../../app/hooks'\nimport { selectNaiveStorage } from '../login/loginSlice'\nimport { createDocument } from './documentSlice'\n\nconst AddDocument = ({\n  onFinish = () => undefined,\n}: {\n  onFinish?: () => void\n}) => {\n  const storage = useAppSelector(selectNaiveStorage)\n  const dispatch = useAppDispatch()\n  const [isPublic, setIsPublic] = useState(true)\n  const [filename, setFilename] = useState('')\n  return (\n    <section>\n      <form\n        onSubmit={e => {\n          e.preventDefault()\n          dispatch(\n            createDocument({\n              uri: `${storage}${\n                isPublic ? 'public' : 'private'\n              }/math/${filename}.ttl`,\n              isPublic,\n            }),\n          )\n          onFinish()\n        }}\n      >\n        <div className=\"field buttons are-small has-addons\">\n          <input\n            className={`button${isPublic ? ' is-success' : ''}`}\n            type=\"button\"\n            value=\"Public\"\n            onClick={() => setIsPublic(true)}\n          />\n          <input\n            className={`button${isPublic ? '' : ' is-warning'}`}\n            type=\"button\"\n            value=\"Private\"\n            onClick={() => setIsPublic(false)}\n          />\n        </div>\n        <div className=\"field\">\n          {storage}\n          {isPublic ? 'public' : 'private'}/math/\n          <input\n            type=\"text\"\n            value={filename}\n            placeholder=\"set-theory\"\n            onChange={e => setFilename(e.target.value)}\n          />\n          .ttl\n        </div>\n        <div className=\"field buttons\">\n          <input className=\"button is-success\" type=\"submit\" value=\"Create\" />\n          <input\n            className=\"button is-danger\"\n            type=\"reset\"\n            value=\"Cancel\"\n            onClick={onFinish}\n          />\n        </div>\n      </form>\n    </section>\n  )\n}\n\nexport default AddDocument\n","import { EffectiveAccess } from '@inrupt/solid-client/dist/interfaces'\nimport classNames from 'classnames'\nimport React from 'react'\nimport { useAppDispatch, useAppSelector } from '../../app/hooks'\nimport {\n  selectDocument,\n  selectDocuments,\n  selectSelectedDocument,\n} from './documentSlice'\n\nconst DocumentList = () => {\n  const documents = useAppSelector(selectDocuments)\n  const selectedDocument = useAppSelector(selectSelectedDocument)\n  const dispatch = useAppDispatch()\n  return (\n    <ul>\n      {documents.map(({ uri, access }) => (\n        <li key={uri}>\n          <button\n            className={classNames(\n              'button is-small',\n              uri === selectedDocument && 'is-success',\n            )}\n            disabled={!(access.user.write || access.user.append)}\n            onClick={() => dispatch(selectDocument(uri))}\n          >\n            {uri} {getAccessString(access)}\n          </button>\n        </li>\n      ))}\n    </ul>\n  )\n}\n\n/* little utility functions to say what access there is */\nconst getSingleAccessString = (access: {\n  read: boolean\n  write: boolean\n  append: boolean\n}) => {\n  let response = ''\n  if (access.read) response += 'R'\n  if (access.write) response += 'W'\n  if (access.append) response += 'A'\n  return response\n}\n\nconst getAccessString = (access: EffectiveAccess): string => {\n  let response = getSingleAccessString(access.user)\n\n  if (access.public) {\n    response += ' '\n    response += getSingleAccessString(access.public)\n  }\n\n  return response || 'none'\n}\n\nexport default DocumentList\n","import React from 'react'\nimport AppButton from '../../components/AppButton'\nimport withModal from '../../components/withModal'\nimport DocumentList from '../document/DocumentList'\n\nconst Button = ({ ...props }) => (\n  <AppButton {...props}>\n    <i className=\"icon icon-document\" aria-label=\"Math Documents\" />\n  </AppButton>\n)\n\nconst DocumentControl = withModal(Button, DocumentList, 'Math Documents')\n\nexport default DocumentControl\n","import React from 'react'\nimport AppButton from '../../components/AppButton'\nimport AddButtonWithMenu from './AddButtonWithMenu'\nimport DocumentControl from './DocumentControl'\n\nconst ControlPanel: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({\n  ...props\n}) => (\n  <div {...props}>\n    <AppButton\n      aria-label=\"people\"\n      onClick={() => alert('people control not implemented')}\n    >\n      <i className=\"icon icon-users\" />\n    </AppButton>\n\n    <DocumentControl />\n\n    <AddButtonWithMenu\n      buttonProps={{}}\n      menuProps={{\n        onAddMath: () => console.log('add math'),\n      }}\n    />\n  </div>\n)\n\nexport default ControlPanel\n","import React, { HTMLAttributes, useState } from 'react'\nimport { useCallback } from 'react'\nimport { useEffect } from 'react'\nimport { useAppDispatch, useAppSelector } from '../../app/hooks'\nimport AppButton from '../../components/AppButton'\nimport { highlight, select } from '../math/mathSlice'\nimport { selectSearch, selectSearchResults, setSearch } from './searchSlice'\n\nconst Search: React.FC<HTMLAttributes<HTMLDivElement>> = ({ ...props }) => {\n  const value = useAppSelector(selectSearch)\n  const options = useAppSelector(selectSearchResults)\n  const dispatch = useAppDispatch()\n  const [open, setOpen] = useState(false)\n\n  const clear = useCallback(() => {\n    setOpen(false)\n    dispatch(setSearch(''))\n  }, [dispatch])\n\n  useEffect(() => {\n    const handleEsc = (e: KeyboardEvent) => {\n      if (e.key === 'Escape') {\n        clear()\n      }\n    }\n    document.addEventListener('keydown', handleEsc, false)\n    return () => document.removeEventListener('keydown', handleEsc, false)\n  }, [clear])\n\n  return open ? (\n    <div {...props} className=\"box p-0\">\n      <p className=\"control has-icons-right\">\n        <input\n          autoFocus\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search\"\n          value={value}\n          onChange={e => dispatch(setSearch(e.target.value))}\n        />\n        <span className=\"icon is-right\">\n          <i className=\"icon icon-search\" />\n        </span>\n      </p>\n      <div className=\"menu\">\n        <ul className=\"menu-list\">\n          {options.map(({ value, label }) => (\n            <li\n              key={value}\n              title={value}\n              onMouseEnter={() => dispatch(highlight(value))}\n              onMouseLeave={() => dispatch(highlight(''))}\n            >\n              <a\n                onClick={() => {\n                  dispatch(select(value))\n                  clear()\n                }}\n              >\n                {label}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  ) : (\n    <AppButton onClick={() => setOpen(true)}>\n      <i className=\"icon icon-search\" />\n    </AppButton>\n  )\n}\n\nexport default Search\n","import classNames from 'classnames'\nimport React, { HTMLAttributes } from 'react'\nimport { useAppDispatch, useAppSelector } from '../../app/hooks'\nimport { clearInfo, InfoState, selectInfo } from './infoSlice'\n\ninterface InfoProps extends HTMLAttributes<HTMLDivElement> {\n  info: InfoState\n  onClose: () => void\n}\n\nconst Info = ({ info, onClose, ...props }: InfoProps) => {\n  if (!info.message) return null\n  const notiStyle =\n    info.type === 'success'\n      ? 'success'\n      : info.type === 'error'\n      ? 'danger'\n      : 'info'\n  return (\n    <div {...props}>\n      <div className={classNames('notification', `is-${notiStyle}`)}>\n        <button className=\"delete\" onClick={onClose}></button>\n        {info.message}\n      </div>\n    </div>\n  )\n}\n\nconst InfoContainer = ({ ...props }) => {\n  const info = useAppSelector(selectInfo)\n  const dispatch = useAppDispatch()\n\n  return <Info info={info} onClose={() => dispatch(clearInfo())} {...props} />\n}\n\nexport default InfoContainer\n","import React from 'react'\nimport Login from '../features/login/Login'\nimport VisualizationContainer from '../features/math/visualization/VisualizationContainer'\nimport styled from 'styled-components'\nimport About from './About'\nimport ControlPanel from '../features/control/ControlPanel'\nimport Search from '../features/search/Search'\nimport Info from '../features/info/Info'\n\nconst PositionedAbout = styled(About)`\n  position: fixed;\n  bottom: 1rem;\n  right: 1rem;\n`\n\nconst PositionedInfo = styled(Info)`\n  position: fixed;\n  bottom: 0.5rem;\n  left: 0.5rem;\n`\n\nconst FullSizeVisualization = styled(VisualizationContainer)`\n  height: 100vh;\n  width: 100vw;\n  display: block;\n`\n\nconst TopNav = styled.nav`\n  display: flex;\n  position: absolute;\n  width: 100%;\n  pointer-events: none;\n  justify-content: space-between;\n  & > * {\n    pointer-events: all;\n  }\n  padding: 1rem;\n`\n\nconst Layout: React.FC = () => {\n  return (\n    <>\n      <TopNav>\n        <ControlPanel />\n        <div style={{ display: 'flex' }}>\n          <Search\n            style={{\n              display: 'inline-block',\n              position: 'relative',\n              zIndex: 2,\n            }}\n          />\n          <Login />\n        </div>\n      </TopNav>\n\n      <PositionedAbout />\n\n      <PositionedInfo />\n\n      <FullSizeVisualization />\n    </>\n  )\n}\n\nexport default Layout\n","import React, { useEffect } from 'react'\nimport Layout from './components/Layout'\nimport { init as initLogin } from './features/login/loginSlice'\nimport { useAppDispatch } from './app/hooks'\n\nconst App: React.FC = () => {\n  const dispatch = useAppDispatch()\n  useEffect(() => {\n    dispatch(initLogin())\n  }, [dispatch])\n\n  return <Layout />\n}\n\nexport default App\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit'\nimport loginReducer from '../features/login/loginSlice'\nimport mathReducer from '../features/math/mathSlice'\nimport searchReducer from '../features/search/searchSlice'\nimport documentReducer from '../features/document/documentSlice'\nimport infoReducer from '../features/info/infoSlice'\n\nexport const store = configureStore({\n  reducer: {\n    login: loginReducer,\n    math: mathReducer,\n    search: searchReducer,\n    document: documentReducer,\n    info: infoReducer,\n  },\n})\n\nexport type AppDispatch = typeof store.dispatch\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport './fonts/fontello/css/fontello.css'\nimport './fonts/animation.css'\nimport App from './App'\nimport { store } from './app/store'\nimport reportWebVitals from './reportWebVitals'\nimport { Provider } from 'react-redux'\nimport Modal from 'react-modal'\n\nif (typeof document === 'object') {\n  const appElement = document.querySelector('#root') as HTMLElement\n\n  Modal.setAppElement(appElement)\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}